syntax = "proto3";

package Network;

message Packet {
  enum PacketID {
    Invalid = 0;
    SyncBoardMessage = 1;
    RequestUpdatesMessage = 2;
    UberStateUpdateMessage = 3;
    SyncBingoUniversesMessage = 4;
    InitBingoMessage = 5;
    PrintTextMessage_Deprecated = 6;
    UberStateBatchUpdateMessage = 7;
    MultiverseInfoMessage = 8;
    AuthenticateMessage = 9;
    PlayerPositionMessage = 10;
    UpdatePlayerPositionMessage = 11;
    AuthenticatedMessage = 12;
    PrintTextMessage = 13;
    PrintPickupMessage = 14;
    RequestSeedMessage = 15;
    ReceiveSeedMessage = 16;
    PlayerUseCatchingAbility = 17;
    PlayerUsedCatchingAbility = 18;
    PlayerCaught = 19;

    TrackerUpdate = 100;
    ResetTracker = 101;
    TrackerFlagsUpdate = 102;
    RequestFullUpdate = 103;
    SetTrackerEndpointId = 104;
  }

  PacketID id = 1;
  bytes packet = 2;
}

message UberStateBatchUpdateMessage {
  repeated UberStateUpdateMessage updates = 1;
}

message UberStateUpdateMessage {
  UberId state = 1;
  double value = 2;
}

message UberId {
  int32 group = 1;
  int32 state = 2;
}

message InitBingoMessage {
  repeated UberId uberId = 1;
}

message Vector2 {
  float x = 1;
  float y = 2;
}

message PrintTextMessage {
  float time = 1;
  string text = 2;
  Vector2 position = 3;
  int32 screenPosition = 4;
  bool useInGameCoordinates = 5;
  float fadeInLength = 6;
  float fadeOutLength = 7;
  int32 alignment = 8;
  int32 horizontalAnchor = 9;
  int32 verticalAnchor = 10;
  bool withSound = 11;
  bool withBox = 12;
  optional string queue = 13;
  bool prioritized = 14;
  bool replace = 15;
}

message PrintPickupMessage {
  float time = 1;
  string text = 2;
  bool prioritized = 3;
  optional Vector2 pickupPosition = 4;
}

message AuthenticateMessage {
  string jwt = 1;
}

message AuthenticatedMessage {
  UserInfo user = 1;
  int32 udpId = 2;
  bytes udpKey = 3;
}

message RequestSeedMessage {
  bool init = 1;
}

message ReceiveSeedMessage {
  string name = 1;
  string seed = 2;
  bool init = 3;
}

message PlayerPositionMessage  {
  float x = 1;
  float y = 2;
}

message UpdatePlayerPositionMessage  {
  string playerId = 1;
  float x = 2;
  float y = 3;
}

message UserInfo {
  string id = 1;
  string name = 2;
  optional string avatarId = 3;
  optional int64 connectedMultiverseId = 4;
  optional int64 currentMultiverseId = 5;
}

message WorldInfo {
  int64 id = 1;
  string name = 2;
  string color = 3;
  repeated UserInfo members = 4;
  optional string seedFile = 5;
}

message UniverseInfo {
  int64 id = 1;
  string name = 2;
  string color = 3;
  repeated WorldInfo worlds = 4;
}

message MultiverseInfoMessage {
  enum GameHandlerType {
    Normal = 0;
    HideAndSeek = 1;
  }

  int64 id = 1;
  repeated UniverseInfo universes = 2;
  bool hasBingoBoard = 3;
  repeated UserInfo spectators = 4;
  optional int64 seedId = 5;
  GameHandlerType handlerType = 6;
  bytes handlerInfo = 7;
}

message SeekerWorldInfo {
  int64 id = 1;
  float radius = 2;
}

message HideAndSeekGameHandlerClientInfo {
  repeated SeekerWorldInfo seekerWorlds = 1;
}

message PlayerUseCatchingAbilityMessage {}

message PlayerUsedCatchingAbilityMessage {
  string id = 1;
}

message PlayerCaughtMessage {
  string id = 1;
}

message UdpPacket {
  optional int32 udpId = 1;
  bytes encryptedPacket = 2;
}
