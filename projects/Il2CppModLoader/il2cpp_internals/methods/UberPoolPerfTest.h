using namespace app;

namespace app::methods::UberPoolPerfTest {
IL2CPP_REGISTER_METHOD(0x00FDFC80, UberPoolPerfTest *, get_Instance, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x00FDFD20, bool, get_IsRunning, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x00FDFDF0, void, StartTest, (UberPoolPerfTest_TestMode__Enum mode, bool isAutomatedTest));
IL2CPP_REGISTER_METHOD(0x00FE0160, void, StartTest, (UberPoolPerfTest_TestMode__Enum mode, bool isAutomatedTest, UberPoolPerfTest_Settings * settings));
IL2CPP_REGISTER_METHODINFO(0x04720C10, UberPoolPerfTest_StartTest_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x00FE03F0, void, StopTest, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x00FE0540, void, OnEnable, (UberPoolPerfTest * __this));
IL2CPP_REGISTER_METHOD(0x00FE07B0, void, OnDisable, (UberPoolPerfTest * __this));
IL2CPP_REGISTER_METHOD(0x00FE0860, void, CheckInstantiation, (UberPoolPerfTest * __this, GameObject * newObject));
IL2CPP_REGISTER_METHOD(0x00FE0930, Task *, RunTest, (UberPoolPerfTest * __this));
IL2CPP_REGISTER_METHOD(0x00FE0A30, Task *, SetupAutomatedTest, (UberPoolPerfTest * __this));
IL2CPP_REGISTER_METHOD(0x00FE0B30, void, SeinInvincibilitySetter, (bool newValue));
IL2CPP_REGISTER_METHOD(0x00FE0C30, void, StoreAdditionalAllocationsToPrefabInfo, (UberPoolPerfTest * __this, UberPoolPerfTest_PrefabInfo * info));
IL2CPP_REGISTER_METHOD(0x00FE0E70, void, DestroyAdditionalInstantiations, (UberPoolPerfTest * __this));
IL2CPP_REGISTER_METHOD(0x00FE1070, Task *, ForcePrefabPrewarmed, (UberPoolPerfTest * __this, int32_t count, List_1_UnityEngine_GameObject_ * instances, GameObject * prefab));
IL2CPP_REGISTER_METHOD(0x00FE11B0, Task *, BenchmarkSinglePrefabInstantiation, (UberPoolPerfTest * __this, CsvWriter * outputWriter, UberPoolPerfTest_PrefabInfo * info, Vector3 position, Stopwatch * stopwatch, List_1_UnityEngine_GameObject_ * instances, List_1_System_Int64__1 * instantiateTimings, List_1_System_Int64__1 * destructionTimings));
IL2CPP_REGISTER_METHOD(0x00FE1310, Task *, BenchmarkSinglePrefabProfiler, (UberPoolPerfTest * __this, CsvWriter * outputWriter, UberPoolPerfTest_PrefabInfo * info, List_1_UnityEngine_GameObject_ * instances, Vector3__Array * spawnPositions, IProfilingDataProvider * dataProvider));
IL2CPP_REGISTER_METHOD(0x00FE1450, Task *, BenchmarkSinglePrefabPrewarm, (UberPoolPerfTest * __this, CsvWriter * outputWriter, UberPoolPerfTest_PrefabInfo * info, Stopwatch * stopwatch, List_1_UnityEngine_GameObject_ * instances, List_1_System_Int64__1 * instantiationTimings, List_1_System_Int64__1 * prewarmTimings));
IL2CPP_REGISTER_METHOD(0x00FE15A0, Task *, BenchmarkPrefabInfos, (UberPoolPerfTest * __this, UberPoolPerfTest_LogCatcher * logCatcher, CsvWriter * outputWriter, Vector3 position, List_1_UberPoolPerfTest_PrefabInfo_ * prefabInfos));
IL2CPP_REGISTER_METHOD(0x00FE1700, Task_1_System_Collections_Generic_List_1_ *, LoadPrefabInfos, (UberPoolPerfTest * __this));
IL2CPP_REGISTER_METHOD(0x00FE1820, Task *, LoadPoolPrewarmScene, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x00FE1910, Task *, FinishPendingTasks, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x00FE19F0, GameObject *, InstantiateNoThrow, (UberPoolPerfTest * __this, GameObject * prefab, Vector3 position, Quaternion rotation));
IL2CPP_REGISTER_METHOD(0x00FE1B70, GameObject *, InstantiateDirectNoThrow, (UberPoolPerfTest * __this, GameObject * prefab));
IL2CPP_REGISTER_METHOD(0x00FE1CB0, UberPoolPerfTest_Timings, ComputeTimings, (List_1_System_Int64__1 * data));
IL2CPP_REGISTER_METHOD(0x00FE20B0, int64_t, ComputeMedian, (List_1_System_Int64__1 * data));
IL2CPP_REGISTER_METHOD(0x00FE21A0, UberPoolPerfTest_ProfileTimings, ComputeProfileTimings, (Double__Array * data, int32_t dataLength));
IL2CPP_REGISTER_METHOD(0x00FE25B0, double, ComputeProfileMedian, (Double__Array * data, int32_t dataLength));
IL2CPP_REGISTER_METHOD(0x00FE2660, CsvWriter *, OpenOutputWriter, (UberPoolPerfTest_TestMode__Enum mode, bool useStaticOutputFileName, int32_t iteration));
IL2CPP_REGISTER_METHOD(0x00FE29A0, String *, GetOutputPath, (UberPoolPerfTest_TestMode__Enum mode, bool useStaticOutputFileName));
IL2CPP_REGISTER_METHOD(0x00FE2C20, void, CreateDoneFile, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x00FE2D30, void, WriteCsvHeaderTimings, (CsvWriter * writer, String * timingName));
IL2CPP_REGISTER_METHOD(0x00FE2F10, void, WriteCsvHeader, (UberPoolPerfTest_TestMode__Enum mode, CsvWriter * writer, UberPoolPerfTest_Settings * settings));
IL2CPP_REGISTER_METHOD(0x00FE32D0, void, WriteCsvPrefabInfoProfiling, (CsvWriter * writer, UberPoolPerfTest_PrefabInfo * info, Double__Array__Array * data, int32_t dataLength));
IL2CPP_REGISTER_METHOD(0x00FE3500, void, WriteCsvPrefabInfoInstantiations, (CsvWriter * writer, UberPoolPerfTest_PrefabInfo * info, UberPoolPerfTest_Timings * instantiationTimings, UberPoolPerfTest_Timings * destructionTimings));
IL2CPP_REGISTER_METHOD(0x00FE3690, void, WriteCsvPrefabInfoPrewarm, (CsvWriter * writer, UberPoolPerfTest_PrefabInfo * info, UberPoolPerfTest_Timings * instantiationTimings, UberPoolPerfTest_Timings * prewarmTimings));
IL2CPP_REGISTER_METHOD(0x00FE3820, void, WriteCsvPrefabInfo, (CsvWriter * writer, UberPoolPerfTest_PrefabInfo * info));
IL2CPP_REGISTER_METHOD(0x00FE3C90, void, WriteCsvPrefabInfoDiagnostics, (CsvWriter * writer, UberPoolPerfTest_PrefabInfo * info));
IL2CPP_REGISTER_METHOD(0x00FE40C0, List_1_System_ValueTuple_2__2 *, DeduplicateStrings, (IEnumerable_1_System_String_ * strings));
IL2CPP_REGISTER_METHOD(0x00FE4840, String *, NormalizeDiagnostic, (String * value));
IL2CPP_REGISTER_METHODINFO(0x047175F8, UberPoolPerfTest_NormalizeDiagnostic__MethodInfo);
IL2CPP_REGISTER_METHOD(0x00FE49D0, void, WriteCsvTimings, (CsvWriter * writer, UberPoolPerfTest_Timings timings));
IL2CPP_REGISTER_METHOD(0x00FE4B00, void, WriteCsvProfileTimings, (CsvWriter * writer, UberPoolPerfTest_ProfileTimings timings));
IL2CPP_REGISTER_METHOD(0x00FE4D60, void, WriteCsvTicks, (CsvWriter * writer, int64_t value));
IL2CPP_REGISTER_METHOD(0x00FE4F90, void, __ctor, (UberPoolPerfTest * __this));
IL2CPP_REGISTER_METHOD(0x00FE5110, void, __cctor, (MethodInfo * method));
}
