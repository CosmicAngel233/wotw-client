#include <interception_macros.h>

namespace app::methods::Moon::VolumeEntityLocomotion {
IL2CPP_REGISTER_METHOD(0x0049F2B0, VolumeEntityMovementProcessor *, get_VolumeMovement, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x01199DC0, Transform *, get_FeetTransform, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x01199DF0, Vector3, get_FeetPosition, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x01199EA0, bool, get_HasArrivedAtTarget, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x01199ED0, float, get_Gravity, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x01199EF0, void, set_Gravity, (VolumeEntityLocomotion * __this, float value));
IL2CPP_REGISTER_METHOD(0x00974AE0, EntityWeightData_EntityWeight__Enum, get_Weight, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x01199F10, void, set_Weight, (VolumeEntityLocomotion * __this, EntityWeightData_EntityWeight__Enum value));
IL2CPP_REGISTER_METHOD(0x01199F20, void, ConfigureStateMachine, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x00418200, EntityLocomotionTask *, get_DefaultFSMState, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x0119A670, bool, ShouldTriggerTurn, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHODINFO(0x047666C0, VolumeEntityLocomotion_ShouldTriggerTurn__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0119AA60, bool, ShouldTriggerMove, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHODINFO(0x04746E88, VolumeEntityLocomotion_ShouldTriggerMove__MethodInfo);
IL2CPP_REGISTER_METHOD(0x00974AC0, bool, IsLookDirectionLocked, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x0119AC10, void, OnEntityInitialization, (VolumeEntityLocomotion * __this, Entity * entity));
IL2CPP_REGISTER_METHOD(0x0119B210, void, GetMovementBehaviour, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x0119B2B0, void, OnFixedUpdate, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x0119B2E0, EntityLocomotionTask *, GetNextBehaviour, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x0119B890, void, ResetLocomotion, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x00968AA0, void, Stop, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x0119B8D0, void, MoveToPoint, (VolumeEntityLocomotion * __this, Vector3 point, EntityBehaviourNode * source));
IL2CPP_REGISTER_METHOD(0x0119BA40, void, PropagateTargetPoint, (VolumeEntityLocomotion * __this, Vector3 point));
IL2CPP_REGISTER_METHOD(0x0119BA90, void, MoveInTheDirection, (VolumeEntityLocomotion * __this, Vector2 direction, EntityBehaviourNode * source));
IL2CPP_REGISTER_METHOD(0x0119BC30, void, SetLookDirectionX, (VolumeEntityLocomotion * __this, float xLookDirection, bool instant));
IL2CPP_REGISTER_METHOD(0x0119BD40, void, SetLookDirectionX, (VolumeEntityLocomotion * __this, float xLookDirection, EntityBehaviourNode * source, bool instant));
IL2CPP_REGISTER_METHOD(0x0119BE50, void, SetLookDirection, (VolumeEntityLocomotion * __this, Vector2 lookDirection, EntityBehaviourNode * source, bool instant));
IL2CPP_REGISTER_METHOD(0x0119BFE0, void, SetLookDirectionTowardsPoint, (VolumeEntityLocomotion * __this, Vector2 point, EntityBehaviourNode * source, bool instant));
IL2CPP_REGISTER_METHOD(0x0119C0F0, void, TurnStart, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHODINFO(0x0473B768, VolumeEntityLocomotion_TurnStart__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0119C210, void, Turning, (VolumeEntityLocomotion * __this, float t));
IL2CPP_REGISTER_METHODINFO(0x04720110, VolumeEntityLocomotion_Turning__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0119C300, void, TurningFinished, (VolumeEntityLocomotion * __this, EntityTask * task, BehaviourStatus__Enum status));
IL2CPP_REGISTER_METHODINFO(0x0477DA48, VolumeEntityLocomotion_TurningFinished__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0119C6A0, void, InstantFlip, (VolumeEntityLocomotion * __this, float directionSign));
IL2CPP_REGISTER_METHOD(0x0119C930, void, LockLookDirection, (VolumeEntityLocomotion * __this, float directionX, EntityBehaviourNode * source));
IL2CPP_REGISTER_METHOD(0x0119CA10, void, UnlockLookDirection, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x0119CA30, Vector2, get_LookDirection, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x0119CC70, Vector2, get_LookDirectionXYNormalized, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x0119CD80, bool, get_IsFacingLeft, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x0119CDB0, bool, get_IsTurning, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x0049F2B0, MovementProcessor *, get_MovementProcessor, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x004F1990, void, __ctor, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHOD(0x0119CDC0, bool, _ConfigureStateMachine_b__21_0, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHODINFO(0x0471AFC0, VolumeEntityLocomotion__ConfigureStateMachine_b__21_0__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0119CE00, bool, _ConfigureStateMachine_b__21_1, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHODINFO(0x0475A170, VolumeEntityLocomotion__ConfigureStateMachine_b__21_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0119CE30, bool, _ConfigureStateMachine_b__21_2, (VolumeEntityLocomotion * __this));
IL2CPP_REGISTER_METHODINFO(0x0473A6E8, VolumeEntityLocomotion__ConfigureStateMachine_b__21_2__MethodInfo);
}
