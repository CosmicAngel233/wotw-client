using namespace app;

namespace app::methods::System::Xml::Schema::SchemaCollectionCompiler {
IL2CPP_REGISTER_METHOD(0x016E7DC0, void, __ctor, (SchemaCollectionCompiler * __this, XmlNameTable * nameTable, ValidationEventHandler * eventHandler));
IL2CPP_REGISTER_METHOD(0x016E8000, bool, Execute, (SchemaCollectionCompiler * __this, XmlSchema * schema, SchemaInfo * schemaInfo, bool compileContentModel));
IL2CPP_REGISTER_METHOD(0x016E8060, void, Prepare, (SchemaCollectionCompiler * __this));
IL2CPP_REGISTER_METHOD(0x016E8490, void, Cleanup, (SchemaCollectionCompiler * __this));
IL2CPP_REGISTER_METHOD(0x016E91E0, void, Cleanup, (XmlSchema * schema));
IL2CPP_REGISTER_METHOD(0x016E98B0, void, Compile, (SchemaCollectionCompiler * __this));
IL2CPP_REGISTER_METHOD(0x016EB590, void, Output, (SchemaCollectionCompiler * __this, SchemaInfo * schemaInfo));
IL2CPP_REGISTER_METHOD(0x016EC410, void, CleanupAttribute, (XmlSchemaAttribute * attribute));
IL2CPP_REGISTER_METHOD(0x016EC450, void, CleanupAttributeGroup, (XmlSchemaAttributeGroup * attributeGroup));
IL2CPP_REGISTER_METHOD(0x016EC4A0, void, CleanupComplexType, (XmlSchemaComplexType * complexType));
IL2CPP_REGISTER_METHOD(0x016EC840, void, CleanupSimpleType, (XmlSchemaSimpleType * simpleType));
IL2CPP_REGISTER_METHOD(0x016EC870, void, CleanupElement, (XmlSchemaElement * element));
IL2CPP_REGISTER_METHOD(0x016ECAA0, void, CleanupAttributes, (XmlSchemaObjectCollection * attributes));
IL2CPP_REGISTER_METHOD(0x016ECBE0, void, CleanupGroup, (XmlSchemaGroup * group));
IL2CPP_REGISTER_METHOD(0x016ECC10, void, CleanupParticle, (XmlSchemaParticle * particle));
IL2CPP_REGISTER_METHOD(0x016ECE80, void, CompileSubstitutionGroup, (SchemaCollectionCompiler * __this, XmlSchemaSubstitutionGroupV1Compat * substitutionGroup));
IL2CPP_REGISTER_METHOD(0x016ED390, void, CheckSubstitutionGroup, (SchemaCollectionCompiler * __this, XmlSchemaSubstitutionGroup * substitutionGroup));
IL2CPP_REGISTER_METHOD(0x016ED640, void, CompileGroup, (SchemaCollectionCompiler * __this, XmlSchemaGroup * group));
IL2CPP_REGISTER_METHOD(0x016ED760, void, CompileSimpleType, (SchemaCollectionCompiler * __this, XmlSchemaSimpleType * simpleType));
IL2CPP_REGISTER_METHODINFO(0x047571A0, SchemaCollectionCompiler_CompileSimpleType__MethodInfo);
IL2CPP_REGISTER_METHOD(0x016EDF80, XmlSchemaSimpleType__Array *, CompileBaseMemberTypes, (SchemaCollectionCompiler * __this, XmlSchemaSimpleType * simpleType));
IL2CPP_REGISTER_METHODINFO(0x0470F960, SchemaCollectionCompiler_CompileBaseMemberTypes__MethodInfo);
IL2CPP_REGISTER_METHOD(0x016EE440, void, CheckUnionType, (SchemaCollectionCompiler * __this, XmlSchemaSimpleType * unionMember, ArrayList * memberTypeDefinitions, XmlSchemaSimpleType * parentType));
IL2CPP_REGISTER_METHOD(0x016EE5C0, void, CompileComplexType, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType));
IL2CPP_REGISTER_METHOD(0x016EEFD0, void, CompileSimpleContentExtension, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType, XmlSchemaSimpleContentExtension * simpleExtension));
IL2CPP_REGISTER_METHOD(0x016EF240, void, CompileSimpleContentRestriction, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType, XmlSchemaSimpleContentRestriction * simpleRestriction));
IL2CPP_REGISTER_METHOD(0x016EF660, void, CompileComplexContentExtension, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType, XmlSchemaComplexContent * complexContent, XmlSchemaComplexContentExtension * complexExtension));
IL2CPP_REGISTER_METHOD(0x016EFB00, void, CompileComplexContentRestriction, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType, XmlSchemaComplexContent * complexContent, XmlSchemaComplexContentRestriction * complexRestriction));
IL2CPP_REGISTER_METHOD(0x016EFDE0, void, CheckParticleDerivation, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType));
IL2CPP_REGISTER_METHOD(0x016EFF20, XmlSchemaParticle *, CompileContentTypeParticle, (SchemaCollectionCompiler * __this, XmlSchemaParticle * particle, bool substitution));
IL2CPP_REGISTER_METHOD(0x016F0120, XmlSchemaParticle *, CannonicalizeParticle, (SchemaCollectionCompiler * __this, XmlSchemaParticle * particle, bool root, bool substitution));
IL2CPP_REGISTER_METHOD(0x016F0510, XmlSchemaParticle *, CannonicalizeElement, (SchemaCollectionCompiler * __this, XmlSchemaElement * element, bool substitution));
IL2CPP_REGISTER_METHOD(0x016F06D0, XmlSchemaParticle *, CannonicalizeGroupRef, (SchemaCollectionCompiler * __this, XmlSchemaGroupRef * groupRef, bool root, bool substitution));
IL2CPP_REGISTER_METHOD(0x016F0F40, XmlSchemaParticle *, CannonicalizeAll, (SchemaCollectionCompiler * __this, XmlSchemaAll * all, bool root, bool substitution));
IL2CPP_REGISTER_METHOD(0x016F1630, XmlSchemaParticle *, CannonicalizeChoice, (SchemaCollectionCompiler * __this, XmlSchemaChoice * choice, bool root, bool substitution));
IL2CPP_REGISTER_METHOD(0x016F1D90, XmlSchemaParticle *, CannonicalizeSequence, (SchemaCollectionCompiler * __this, XmlSchemaSequence * sequence, bool root, bool substitution));
IL2CPP_REGISTER_METHOD(0x016F2470, bool, IsValidRestriction, (SchemaCollectionCompiler * __this, XmlSchemaParticle * derivedParticle, XmlSchemaParticle * baseParticle));
IL2CPP_REGISTER_METHOD(0x016F2AF0, bool, IsElementFromElement, (SchemaCollectionCompiler * __this, XmlSchemaElement * derivedElement, XmlSchemaElement * baseElement));
IL2CPP_REGISTER_METHOD(0x016F2C80, bool, IsElementFromAny, (SchemaCollectionCompiler * __this, XmlSchemaElement * derivedElement, XmlSchemaAny * baseAny));
IL2CPP_REGISTER_METHOD(0x016F2D20, bool, IsAnyFromAny, (SchemaCollectionCompiler * __this, XmlSchemaAny * derivedAny, XmlSchemaAny * baseAny));
IL2CPP_REGISTER_METHOD(0x016F2D80, bool, IsGroupBaseFromAny, (SchemaCollectionCompiler * __this, XmlSchemaGroupBase * derivedGroupBase, XmlSchemaAny * baseAny));
IL2CPP_REGISTER_METHOD(0x016F30A0, bool, IsElementFromGroupBase, (SchemaCollectionCompiler * __this, XmlSchemaElement * derivedElement, XmlSchemaGroupBase * baseGroupBase, bool skipEmptableOnly));
IL2CPP_REGISTER_METHOD(0x016F36C0, bool, IsGroupBaseFromGroupBase, (SchemaCollectionCompiler * __this, XmlSchemaGroupBase * derivedGroupBase, XmlSchemaGroupBase * baseGroupBase, bool skipEmptableOnly));
IL2CPP_REGISTER_METHOD(0x016F39E0, bool, IsSequenceFromAll, (SchemaCollectionCompiler * __this, XmlSchemaSequence * derivedSequence, XmlSchemaAll * baseAll));
IL2CPP_REGISTER_METHOD(0x016F3E20, bool, IsSequenceFromChoice, (SchemaCollectionCompiler * __this, XmlSchemaSequence * derivedSequence, XmlSchemaChoice * baseChoice));
IL2CPP_REGISTER_METHOD(0x016F4170, void, CalculateSequenceRange, (SchemaCollectionCompiler * __this, XmlSchemaSequence * sequence, Decimal * minOccurs, Decimal * maxOccurs));
IL2CPP_REGISTER_METHOD(0x016F49F0, bool, IsValidOccurrenceRangeRestriction, (SchemaCollectionCompiler * __this, XmlSchemaParticle * derivedParticle, XmlSchemaParticle * baseParticle));
IL2CPP_REGISTER_METHOD(0x016F4B40, bool, IsValidOccurrenceRangeRestriction, (SchemaCollectionCompiler * __this, Decimal minOccurs, Decimal maxOccurs, Decimal baseMinOccurs, Decimal baseMaxOccurs));
IL2CPP_REGISTER_METHOD(0x016F4C70, int32_t, GetMappingParticle, (SchemaCollectionCompiler * __this, XmlSchemaParticle * particle, XmlSchemaObjectCollection * collection));
IL2CPP_REGISTER_METHOD(0x016F4DE0, bool, IsParticleEmptiable, (SchemaCollectionCompiler * __this, XmlSchemaParticle * particle));
IL2CPP_REGISTER_METHOD(0x016F4EF0, void, CalculateEffectiveTotalRange, (SchemaCollectionCompiler * __this, XmlSchemaParticle * particle, Decimal * minOccurs, Decimal * maxOccurs));
IL2CPP_REGISTER_METHOD(0x016F5F40, void, PushComplexType, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType));
IL2CPP_REGISTER_METHOD(0x016F5F70, XmlSchemaContentType__Enum, GetSchemaContentType, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType, XmlSchemaComplexContent * complexContent, XmlSchemaParticle * particle));
IL2CPP_REGISTER_METHOD(0x016F5FF0, void, CompileAttributeGroup, (SchemaCollectionCompiler * __this, XmlSchemaAttributeGroup * attributeGroup));
IL2CPP_REGISTER_METHOD(0x016F6610, void, CompileLocalAttributes, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * baseType, XmlSchemaComplexType * derivedType, XmlSchemaObjectCollection * attributes, XmlSchemaAnyAttribute * anyAttribute, XmlSchemaDerivationMethod__Enum derivedBy));
IL2CPP_REGISTER_METHOD(0x016F7700, XmlSchemaAnyAttribute *, CompileAnyAttributeUnion, (SchemaCollectionCompiler * __this, XmlSchemaAnyAttribute * a, XmlSchemaAnyAttribute * b));
IL2CPP_REGISTER_METHOD(0x016F77F0, XmlSchemaAnyAttribute *, CompileAnyAttributeIntersection, (SchemaCollectionCompiler * __this, XmlSchemaAnyAttribute * a, XmlSchemaAnyAttribute * b));
IL2CPP_REGISTER_METHOD(0x016F78E0, void, CompileAttribute, (SchemaCollectionCompiler * __this, XmlSchemaAttribute * xa));
IL2CPP_REGISTER_METHODINFO(0x04789108, SchemaCollectionCompiler_CompileAttribute__MethodInfo);
IL2CPP_REGISTER_METHOD(0x016F83D0, void, CompileIdentityConstraint, (SchemaCollectionCompiler * __this, XmlSchemaIdentityConstraint * xi));
IL2CPP_REGISTER_METHODINFO(0x047267C0, SchemaCollectionCompiler_CompileIdentityConstraint__MethodInfo);
IL2CPP_REGISTER_METHOD(0x016F8AC0, void, CompileElement, (SchemaCollectionCompiler * __this, XmlSchemaElement * xe));
IL2CPP_REGISTER_METHODINFO(0x0471B1A0, SchemaCollectionCompiler_CompileElement__MethodInfo);
IL2CPP_REGISTER_METHOD(0x016F9660, ContentValidator *, CompileComplexContent, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType));
IL2CPP_REGISTER_METHOD(0x016FA050, void, BuildParticleContentModel, (SchemaCollectionCompiler * __this, ParticleContentValidator * contentValidator, XmlSchemaParticle * particle));
IL2CPP_REGISTER_METHOD(0x016FA820, void, CompileParticleElements, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType, XmlSchemaParticle * particle));
IL2CPP_REGISTER_METHOD(0x016FABA0, void, CompileCompexTypeElements, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType));
IL2CPP_REGISTER_METHOD(0x016FACC0, XmlSchemaSimpleType *, GetSimpleType, (SchemaCollectionCompiler * __this, XmlQualifiedName * name));
IL2CPP_REGISTER_METHOD(0x016FAE80, XmlSchemaComplexType *, GetComplexType, (SchemaCollectionCompiler * __this, XmlQualifiedName * name));
IL2CPP_REGISTER_METHOD(0x016FAF90, XmlSchemaType *, GetAnySchemaType, (SchemaCollectionCompiler * __this, XmlQualifiedName * name));
}
