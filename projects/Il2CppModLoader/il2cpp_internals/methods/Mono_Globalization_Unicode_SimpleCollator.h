using namespace app;

namespace app::methods::Mono::Globalization::Unicode::SimpleCollator {
IL2CPP_REGISTER_METHOD(0x023BDF30, void, __ctor, (SimpleCollator * __this, CultureInfo * culture));
IL2CPP_REGISTER_METHOD(0x023BE3C0, void, SetCJKTable, (SimpleCollator * __this, CultureInfo * culture, CodePointIndexer * * cjkIndexer, uint8_t * * catTable, uint8_t * * lv1Table, CodePointIndexer * * lv2Indexer, uint8_t * * lv2Table));
IL2CPP_REGISTER_METHOD(0x023BE590, CultureInfo *, GetNeutralCulture, (CultureInfo * info));
IL2CPP_REGISTER_METHOD(0x023BE630, uint8_t, Category, (SimpleCollator * __this, int32_t cp));
IL2CPP_REGISTER_METHOD(0x023BE720, uint8_t, Level1, (SimpleCollator * __this, int32_t cp));
IL2CPP_REGISTER_METHOD(0x023BE810, uint8_t, Level2, (SimpleCollator * __this, int32_t cp, SimpleCollator_ExtenderType__Enum ext));
IL2CPP_REGISTER_METHOD(0x023BE9F0, bool, IsHalfKana, (int32_t cp, CompareOptions__Enum opt));
IL2CPP_REGISTER_METHOD(0x023BEAC0, Contraction *, GetContraction, (SimpleCollator * __this, String * s, int32_t start, int32_t end));
IL2CPP_REGISTER_METHOD(0x023BEBF0, Contraction *, GetContraction, (SimpleCollator * __this, String * s, int32_t start, int32_t end, Contraction__Array * clist));
IL2CPP_REGISTER_METHOD(0x023BED60, Contraction *, GetTailContraction, (SimpleCollator * __this, String * s, int32_t start, int32_t end));
IL2CPP_REGISTER_METHOD(0x023BEE90, Contraction *, GetTailContraction, (SimpleCollator * __this, String * s, int32_t start, int32_t end, Contraction__Array * clist));
IL2CPP_REGISTER_METHODINFO(0x047966C0, SimpleCollator_GetTailContraction_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x023BF110, int32_t, FilterOptions, (SimpleCollator * __this, int32_t i, CompareOptions__Enum opt));
IL2CPP_REGISTER_METHOD(0x023BF420, SimpleCollator_ExtenderType__Enum, GetExtenderType, (SimpleCollator * __this, int32_t i));
IL2CPP_REGISTER_METHOD(0x023BF4D0, uint8_t, ToDashTypeValue, (SimpleCollator_ExtenderType__Enum ext, CompareOptions__Enum opt));
IL2CPP_REGISTER_METHOD(0x023BF4F0, int32_t, FilterExtender, (SimpleCollator * __this, int32_t i, SimpleCollator_ExtenderType__Enum ext, CompareOptions__Enum opt));
IL2CPP_REGISTER_METHOD(0x023BF6F0, bool, IsIgnorable, (int32_t i, CompareOptions__Enum opt));
IL2CPP_REGISTER_METHOD(0x023BF7D0, bool, IsSafe, (SimpleCollator * __this, int32_t i));
IL2CPP_REGISTER_METHOD(0x023BF850, SortKey *, GetSortKey, (SimpleCollator * __this, String * s, CompareOptions__Enum options));
IL2CPP_REGISTER_METHOD(0x023BF880, SortKey *, GetSortKey, (SimpleCollator * __this, String * s, int32_t start, int32_t length, CompareOptions__Enum options));
IL2CPP_REGISTER_METHOD(0x023BFA50, void, GetSortKey, (SimpleCollator * __this, String * s, int32_t start, int32_t end, SortKeyBuffer * buf, CompareOptions__Enum opt));
IL2CPP_REGISTER_METHOD(0x023BFE70, void, FillSortKeyRaw, (SimpleCollator * __this, int32_t i, SimpleCollator_ExtenderType__Enum ext, SortKeyBuffer * buf, CompareOptions__Enum opt));
IL2CPP_REGISTER_METHOD(0x023C0360, void, FillSurrogateSortKeyRaw, (SimpleCollator * __this, int32_t i, SortKeyBuffer * buf));
IL2CPP_REGISTER_METHOD(0x023C0410, int32_t, Compare, (SimpleCollator * __this, String * s1, int32_t idx1, int32_t len1, String * s2, int32_t idx2, int32_t len2, CompareOptions__Enum options));
IL2CPP_REGISTER_METHOD(0x023C0510, void, ClearBuffer, (SimpleCollator * __this, uint8_t * buffer, int32_t size));
IL2CPP_REGISTER_METHOD(0x023C0530, int32_t, CompareInternal, (SimpleCollator * __this, String * s1, int32_t idx1, int32_t len1, String * s2, int32_t idx2, int32_t len2, bool * targetConsumed, bool * sourceConsumed, bool skipHeadingExtenders, bool immediateBreakup, SimpleCollator_Context * ctx));
IL2CPP_REGISTER_METHOD(0x023C18C0, int32_t, CompareFlagPair, (SimpleCollator * __this, bool b1, bool b2));
IL2CPP_REGISTER_METHOD(0x023C18E0, bool, IsPrefix, (SimpleCollator * __this, String * src, String * target, CompareOptions__Enum opt));
IL2CPP_REGISTER_METHOD(0x023C1920, bool, IsPrefix, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length, CompareOptions__Enum opt));
IL2CPP_REGISTER_METHOD(0x023C1A20, bool, IsPrefix, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length, bool skipHeadingExtenders, SimpleCollator_Context * ctx));
IL2CPP_REGISTER_METHOD(0x023C1AA0, bool, IsSuffix, (SimpleCollator * __this, String * src, String * target, CompareOptions__Enum opt));
IL2CPP_REGISTER_METHOD(0x023C1B60, bool, IsSuffix, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length, CompareOptions__Enum opt));
IL2CPP_REGISTER_METHOD(0x023C1C30, int32_t, QuickIndexOf, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length, bool * testWasUnable));
IL2CPP_REGISTER_METHOD(0x023C1DA0, int32_t, IndexOf, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length, CompareOptions__Enum opt));
IL2CPP_REGISTER_METHODINFO(0x04787F90, SimpleCollator_IndexOf__MethodInfo);
IL2CPP_REGISTER_METHOD(0x023C20D0, int32_t, IndexOfOrdinal, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length));
IL2CPP_REGISTER_METHOD(0x023C21B0, int32_t, IndexOfOrdinal, (SimpleCollator * __this, String * s, uint16_t target, int32_t start, int32_t length));
IL2CPP_REGISTER_METHOD(0x023C2230, int32_t, IndexOfSortKey, (SimpleCollator * __this, String * s, int32_t start, int32_t length, uint8_t * sortkey, uint16_t target, int32_t ti, bool noLv4, SimpleCollator_Context * ctx));
IL2CPP_REGISTER_METHOD(0x023C22F0, int32_t, IndexOf, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length, uint8_t * targetSortKey, SimpleCollator_Context * ctx));
IL2CPP_REGISTER_METHOD(0x023C2850, int32_t, LastIndexOf, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length, CompareOptions__Enum opt));
IL2CPP_REGISTER_METHODINFO(0x04720CC8, SimpleCollator_LastIndexOf__MethodInfo);
IL2CPP_REGISTER_METHOD(0x023C2A40, int32_t, LastIndexOfOrdinal, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length));
IL2CPP_REGISTER_METHOD(0x023C2B90, int32_t, LastIndexOfSortKey, (SimpleCollator * __this, String * s, int32_t start, int32_t orgStart, int32_t length, uint8_t * sortkey, int32_t ti, bool noLv4, SimpleCollator_Context * ctx));
IL2CPP_REGISTER_METHOD(0x023C2C60, int32_t, LastIndexOf, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length, uint8_t * targetSortKey, SimpleCollator_Context * ctx));
IL2CPP_REGISTER_METHOD(0x023C31A0, bool, MatchesForward, (SimpleCollator * __this, String * s, int32_t * idx, int32_t end, int32_t ti, uint8_t * sortkey, bool noLv4, SimpleCollator_Context * ctx));
IL2CPP_REGISTER_METHOD(0x023C3370, bool, MatchesForwardCore, (SimpleCollator * __this, String * s, int32_t * idx, int32_t end, int32_t ti, uint8_t * sortkey, bool noLv4, SimpleCollator_ExtenderType__Enum ext, Contraction * * ct, SimpleCollator_Context * ctx));
IL2CPP_REGISTER_METHOD(0x023C37A0, bool, MatchesPrimitive, (SimpleCollator * __this, CompareOptions__Enum opt, uint8_t * source, int32_t si, SimpleCollator_ExtenderType__Enum ext, uint8_t * target, int32_t ti, bool noLv4));
IL2CPP_REGISTER_METHOD(0x023C39F0, bool, MatchesBackward, (SimpleCollator * __this, String * s, int32_t * idx, int32_t end, int32_t orgStart, int32_t ti, uint8_t * sortkey, bool noLv4, SimpleCollator_Context * ctx));
IL2CPP_REGISTER_METHOD(0x023C3BD0, bool, MatchesBackwardCore, (SimpleCollator * __this, String * s, int32_t * idx, int32_t end, int32_t orgStart, int32_t ti, uint8_t * sortkey, bool noLv4, SimpleCollator_ExtenderType__Enum ext, Contraction * * ct, SimpleCollator_Context * ctx));
IL2CPP_REGISTER_METHOD(0x023C4230, void, __cctor, (MethodInfo * method));
}
