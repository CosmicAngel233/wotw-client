using namespace app;

namespace app::methods::Moon::DamageReceiver {
IL2CPP_REGISTER_METHOD(0x004358D0, bool, get_IsSuspended, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00447370, void, set_IsSuspended, (DamageReceiver * __this, bool value));
IL2CPP_REGISTER_METHOD(0x003FC830, SuspendableMask__Enum, get_Mask, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD0D40, void, set_Mask, (DamageReceiver * __this, SuspendableMask__Enum value));
IL2CPP_REGISTER_METHOD(0x002FBC00, List_1_Moon_DamageReceiver_DamageEntry_ *, get_DamageEntriesQueue, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00675C60, bool, get_ShouldSpawnFXWhenDamaged, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00675C70, void, set_ShouldSpawnFXWhenDamaged, (DamageReceiver * __this, bool value));
IL2CPP_REGISTER_METHOD(0x00413160, bool, get_HasDealDamageOverTime, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x002FBD40, DealDamageOverTime *, get_DealDamageOverTime, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00660430, LimitedLifetime *, get_LimitedLifetime, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00603D60, bool, get_HasLimitedLifetime, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD0DF0, bool, get_BelongsToFlyingEnemy, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x0049F2B0, Collider *, get_Collider, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x002FBD20, EntityTargetting *, get_Targetting, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD0FC0, bool, get_Active, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00800850, void, set_Active, (DamageReceiver * __this, bool value));
IL2CPP_REGISTER_METHOD(0x006A63A0, Action_1_Damage_ *, get_DamageReceived, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x006A63B0, void, set_DamageReceived, (DamageReceiver * __this, Action_1_Damage_ * value));
IL2CPP_REGISTER_METHOD(0x00CD1090, bool, get_UsingDamageAngleLimit, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD1190, bool, ShouldFilterDamageType, (DamageReceiver * __this, DamageType__Enum type));
IL2CPP_REGISTER_METHOD(0x00CD11C0, void, Prewarm, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD11D0, void, CacheSerializedComponents, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD1330, void, Awake, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD1620, void, OnAfterDeserialize, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD16D0, void, OnBeforeSerialize, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnAwake, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD16E0, void, OnDestroy, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD18D0, void, AddOverride, (DamageReceiver * __this, DamageReceiver_OverrideInfo * info));
IL2CPP_REGISTER_METHOD(0x00CD1990, void, RemoveOverride, (DamageReceiver * __this, DamageReceiver_OverrideInfo * info));
IL2CPP_REGISTER_METHOD(0x00CD1A30, void, OverrideDamageResolver, (DamageReceiver * __this, IDamageResolver * damageResolver));
IL2CPP_REGISTER_METHOD(0x00CD1BC0, bool, IsDamageFilteredByReceiver, (DamageReceiver * __this, Damage * damage));
IL2CPP_REGISTER_METHOD(0x00CD1D80, bool, IsDamageFilteredByAngle, (DamageReceiver * __this, Damage * damage));
IL2CPP_REGISTER_METHOD(0x00CD1FD0, bool, IsDamageFilteredByPosition, (DamageReceiver * __this, Vector3 dmgPos));
IL2CPP_REGISTER_METHOD(0x00CD21E0, bool, IsDamageFilteredByDirection, (DamageReceiver * __this, Vector3 dmgDir));
IL2CPP_REGISTER_METHOD(0x00CD2430, void, OnRecieveDamage, (DamageReceiver * __this, Damage * damage));
IL2CPP_REGISTER_METHOD(0x00CD27D0, void, HandleUntouchableShard, (DamageReceiver * __this, Damage * damage));
IL2CPP_REGISTER_METHOD(0x00CD29E0, void, HandleAntiAirShard, (DamageReceiver * __this, Damage * damage));
IL2CPP_REGISTER_METHOD(0x00CD2B30, void, HandleChainLightningShard, (DamageReceiver * __this, Damage * damage));
IL2CPP_REGISTER_METHOD(0x00CD2CA0, void, HandleHollowEnergyShard, (DamageReceiver * __this, Damage * damage));
IL2CPP_REGISTER_METHOD(0x00CD3080, void, HandleHollowEnergyShard, (DamageReceiver * __this, DamageResult damageResult));
IL2CPP_REGISTER_METHOD(0x00CD30A0, void, AddDamageEntry, (DamageReceiver * __this, DamageReceiver_DamageEntry * entry));
IL2CPP_REGISTER_METHOD(0x00CD31F0, DamageReceiver_DamageEntry *, AddDamage, (DamageReceiver * __this, Damage * damage));
IL2CPP_REGISTER_METHOD(0x00CD33E0, void, RemoveDamageEntry, (DamageReceiver * __this, DamageReceiver_DamageEntry * entry));
IL2CPP_REGISTER_METHOD(0x00CD34C0, void, ResetCachedDamageEntries, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD35D0, DamageResult, ResolveDamage, (DamageReceiver * __this, Damage * damage));
IL2CPP_REGISTER_METHOD(0x00CD37B0, void, OnAfterCollisions, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD38D0, void, ProcessAllDamage, (DamageReceiver * __this, HashSet_1_System_Int32_ * processed));
IL2CPP_REGISTER_METHOD(0x00CD39F0, bool, ProcessDamage, (DamageReceiver * __this, DamageReceiver_DamageEntry * entry, HashSet_1_System_Int32_ * processed));
IL2CPP_REGISTER_METHOD(0x00CD3E40, void, OnDamageResultReceived, (DamageReceiver * __this, DamageResult result));
IL2CPP_REGISTER_METHOD(0x00CD40F0, void, PlayEffect, (EffectSpawn prefab, DamageResult result));
IL2CPP_REGISTER_METHOD(0x00CD4910, Transform *, SpawnEffect, (EffectSpawn prefab, Damage * damage, IDamageReciever * receiver, float rand, EffectTransformType__Enum overrideTransformType));
IL2CPP_REGISTER_METHOD(0x00CD4B50, Transform *, SpawnEffect, (GameObject * prefab, Damage * damage, IDamageReciever * receiver, float rand, EffectTransformType__Enum transformType, float offsetToCenter, bool optional));
IL2CPP_REGISTER_METHOD(0x0063D070, bool, CanDetonateProjectiles, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD5320, void, OnDrawGizmos, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD5640, void, OnDrawGizmosSelected, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD59C0, String *, get_StressTestName, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD5A40, void, StartStressTest, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD5DB0, void, StressTestUpdate, (DamageReceiver * __this, float deltaTime));
IL2CPP_REGISTER_METHOD(0x002FA000, void, EndStressTest, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x006B90B0, StressTestStatus__Enum, get_StressTestStatus, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD5DE0, void, set_StressTestStatus, (DamageReceiver * __this, StressTestStatus__Enum value));
IL2CPP_REGISTER_METHOD(0x00CD5DF0, bool, get_CanExecuteStressTest, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, get_StopMovingPlayerWhilePerforming, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x004F4750, GameObject *, get_VirtualTimelineTarget, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00420230, VirtualTimelineRepresentationGroup__Enum, get_VirtualTimelineGroup, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD5FD0, String *, get_NameDisplayedOnClip, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD60A0, void, __ctor, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00CD6770, void, __cctor, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x004F4750, GameObject *, IDamageReciever_get_gameObject, (DamageReceiver * __this));
IL2CPP_REGISTER_METHOD(0x00506170, Transform *, IDamageReciever_get_transform, (DamageReceiver * __this));
}
