#include <interception_macros.h>

namespace app::methods::System_Xml::XmlConvert {
IL2CPP_REGISTER_METHOD(0x01960BB0, String *, EncodeName_1, (app::String * name));
IL2CPP_REGISTER_METHOD(0x01960C50, String *, EncodeLocalName, (app::String * name));
IL2CPP_REGISTER_METHOD(0x01960CF0, String *, DecodeName, (app::String * name));
IL2CPP_REGISTER_METHOD(0x019616B0, String *, EncodeName_2, (app::String * name, bool first, bool local));
IL2CPP_REGISTER_METHOD(0x01962170, int32_t, FromHex, (uint16_t digit));
IL2CPP_REGISTER_METHOD(0x019621A0, Byte__Array *, FromBinHexString_1, (app::String * s));
IL2CPP_REGISTER_METHOD(0x01962240, Byte__Array *, FromBinHexString_2, (app::String * s, bool allow_odd_count));
IL2CPP_REGISTER_METHODINFO(0x047645F8, XmlConvert_FromBinHexString_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01962310, String *, ToBinHexString, (app::Byte__Array * in_array));
IL2CPP_REGISTER_METHODINFO(0x04792F08, XmlConvert_ToBinHexString__MethodInfo);
IL2CPP_REGISTER_METHOD(0x019623D0, String *, VerifyName, (app::String * name));
IL2CPP_REGISTER_METHODINFO(0x047208C0, XmlConvert_VerifyName__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01962550, Exception *, TryVerifyName, (app::String * name));
IL2CPP_REGISTER_METHOD(0x01962830, String *, VerifyQName, (app::String * name, app::ExceptionType__Enum exception_type));
IL2CPP_REGISTER_METHODINFO(0x0471D988, XmlConvert_VerifyQName__MethodInfo);
IL2CPP_REGISTER_METHOD(0x019629E0, String *, VerifyNCName_1, (app::String * name));
IL2CPP_REGISTER_METHOD(0x01962BD0, String *, VerifyNCName_2, (app::String * name, app::ExceptionType__Enum exception_type));
IL2CPP_REGISTER_METHODINFO(0x04791680, XmlConvert_VerifyNCName_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01962D50, Exception *, TryVerifyNCName, (app::String * name));
IL2CPP_REGISTER_METHOD(0x01962E50, String *, VerifyTOKEN, (app::String * token));
IL2CPP_REGISTER_METHODINFO(0x04790260, XmlConvert_VerifyTOKEN__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01962FC0, Exception *, TryVerifyTOKEN, (app::String * token));
IL2CPP_REGISTER_METHOD(0x019631E0, Exception *, TryVerifyNMTOKEN, (app::String * name));
IL2CPP_REGISTER_METHOD(0x019635A0, Exception *, TryVerifyNormalizedString, (app::String * str));
IL2CPP_REGISTER_METHOD(0x01963760, String *, ToString_1, (bool value));
IL2CPP_REGISTER_METHOD(0x019637F0, String *, ToString_2, (uint16_t value));
IL2CPP_REGISTER_METHOD(0x01963810, String *, ToString_3, (app::Decimal value));
IL2CPP_REGISTER_METHOD(0x01963850, String *, ToString_4, (int8_t value));
IL2CPP_REGISTER_METHOD(0x01963880, String *, ToString_5, (int16_t value));
IL2CPP_REGISTER_METHOD(0x019638B0, String *, ToString_6, (int32_t value));
IL2CPP_REGISTER_METHOD(0x019638E0, String *, ToString_7, (int64_t value));
IL2CPP_REGISTER_METHOD(0x01963910, String *, ToString_8, (uint8_t value));
IL2CPP_REGISTER_METHOD(0x01963940, String *, ToString_9, (uint16_t value));
IL2CPP_REGISTER_METHOD(0x01963970, String *, ToString_10, (uint32_t value));
IL2CPP_REGISTER_METHOD(0x019639A0, String *, ToString_11, (uint64_t value));
IL2CPP_REGISTER_METHOD(0x019639D0, String *, ToString_12, (float value));
IL2CPP_REGISTER_METHOD(0x01963B00, String *, ToString_13, (double value));
IL2CPP_REGISTER_METHOD(0x01963C60, String *, ToString_14, (app::TimeSpan value));
IL2CPP_REGISTER_METHOD(0x01963CC0, String *, ToString_15, (app::DateTime value, app::String * format));
IL2CPP_REGISTER_METHOD(0x01963D70, String *, ToString_16, (app::DateTime value, app::XmlDateTimeSerializationMode__Enum date_time_option));
IL2CPP_REGISTER_METHODINFO(0x0470D708, XmlConvert_ToString_15__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01963F70, String *, ToString_17, (app::DateTimeOffset value));
IL2CPP_REGISTER_METHOD(0x01963FB0, String *, ToString_18, (app::Guid value));
IL2CPP_REGISTER_METHOD(0x01963FC0, bool, ToBoolean, (app::String * s));
IL2CPP_REGISTER_METHODINFO(0x04742A08, XmlConvert_ToBoolean__MethodInfo);
IL2CPP_REGISTER_METHOD(0x019641E0, Exception *, TryToBoolean, (app::String * s, app::bool * result));
IL2CPP_REGISTER_METHOD(0x01964500, uint16_t, ToChar, (app::String * s));
IL2CPP_REGISTER_METHODINFO(0x0474C2D0, XmlConvert_ToChar__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01964610, Exception *, TryToChar, (app::String * s, app::uint16_t * result));
IL2CPP_REGISTER_METHOD(0x019648A0, Decimal, ToDecimal, (app::String * s));
IL2CPP_REGISTER_METHOD(0x01964990, Exception *, TryToDecimal, (app::String * s, app::Decimal * result));
IL2CPP_REGISTER_METHOD(0x01964C30, Decimal, ToInteger, (app::String * s));
IL2CPP_REGISTER_METHOD(0x01964D20, Exception *, TryToInteger, (app::String * s, app::Decimal * result));
IL2CPP_REGISTER_METHOD(0x01964FC0, int8_t, ToSByte, (app::String * s));
IL2CPP_REGISTER_METHOD(0x01965010, Exception *, TryToSByte, (app::String * s, app::int8_t * result));
IL2CPP_REGISTER_METHOD(0x019652B0, int16_t, ToInt16, (app::String * s));
IL2CPP_REGISTER_METHOD(0x01965300, Exception *, TryToInt16, (app::String * s, app::int16_t * result));
IL2CPP_REGISTER_METHOD(0x019655A0, int32_t, ToInt32, (app::String * s));
IL2CPP_REGISTER_METHOD(0x019655F0, Exception *, TryToInt32, (app::String * s, app::int32_t * result));
IL2CPP_REGISTER_METHOD(0x01965870, int64_t, ToInt64, (app::String * s));
IL2CPP_REGISTER_METHOD(0x019658C0, Exception *, TryToInt64, (app::String * s, app::int64_t * result));
IL2CPP_REGISTER_METHOD(0x01965B40, uint8_t, ToByte, (app::String * s));
IL2CPP_REGISTER_METHOD(0x01965B90, Exception *, TryToByte, (app::String * s, app::uint8_t * result));
IL2CPP_REGISTER_METHOD(0x01965E00, uint16_t, ToUInt16, (app::String * s));
IL2CPP_REGISTER_METHOD(0x01965E50, Exception *, TryToUInt16, (app::String * s, app::uint16_t * result));
IL2CPP_REGISTER_METHOD(0x019660C0, uint32_t, ToUInt32, (app::String * s));
IL2CPP_REGISTER_METHOD(0x01966110, Exception *, TryToUInt32, (app::String * s, app::uint32_t * result));
IL2CPP_REGISTER_METHOD(0x01966390, uint64_t, ToUInt64, (app::String * s));
IL2CPP_REGISTER_METHOD(0x019663E0, Exception *, TryToUInt64, (app::String * s, app::uint64_t * result));
IL2CPP_REGISTER_METHOD(0x01966660, float, ToSingle, (app::String * s));
IL2CPP_REGISTER_METHOD(0x01966800, Exception *, TryToSingle, (app::String * s, app::float * result));
IL2CPP_REGISTER_METHOD(0x01966B80, double, ToDouble, (app::String * s));
IL2CPP_REGISTER_METHOD(0x01966D30, Exception *, TryToDouble, (app::String * s, app::double * result));
IL2CPP_REGISTER_METHOD(0x019670C0, double, ToXPathDouble, (app::Object * o));
IL2CPP_REGISTER_METHOD(0x01967320, TimeSpan, ToTimeSpan, (app::String * s));
IL2CPP_REGISTER_METHODINFO(0x0470B3D8, XmlConvert_ToTimeSpan__MethodInfo);
IL2CPP_REGISTER_METHOD(0x019674A0, Exception *, TryToTimeSpan, (app::String * s, app::TimeSpan * result));
IL2CPP_REGISTER_METHOD(0x019675B0, String__Array *, get_AllDateTimeFormats, ());
IL2CPP_REGISTER_METHOD(0x019676C0, void, CreateAllDateTimeFormats, ());
IL2CPP_REGISTER_METHOD(0x01968070, DateTime, ToDateTime_1, (app::String * s));
IL2CPP_REGISTER_METHOD(0x019682D0, DateTime, ToDateTime_2, (app::String * s, app::String__Array * formats));
IL2CPP_REGISTER_METHOD(0x019683C0, DateTime, ToDateTime_3, (app::String * s, app::XmlDateTimeSerializationMode__Enum date_time_option));
IL2CPP_REGISTER_METHODINFO(0x04759880, XmlConvert_ToDateTime_2__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01968600, DateTimeOffset, ToDateTimeOffset, (app::String * s));
IL2CPP_REGISTER_METHODINFO(0x047785A0, XmlConvert_ToDateTimeOffset__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01968720, Guid, ToGuid, (app::String * s));
IL2CPP_REGISTER_METHOD(0x01968740, Exception *, TryToGuid, (app::String * s, app::Guid * result));
IL2CPP_REGISTER_METHOD(0x01968A90, DateTime, SwitchToLocalTime, (app::DateTime value));
IL2CPP_REGISTER_METHOD(0x01968B20, DateTime, SwitchToUtcTime, (app::DateTime value));
IL2CPP_REGISTER_METHOD(0x01968BC0, Uri *, ToUri, (app::String * s));
IL2CPP_REGISTER_METHODINFO(0x04786240, XmlConvert_ToUri__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01968E30, Exception *, TryToUri, (app::String * s, app::Uri * * result));
IL2CPP_REGISTER_METHOD(0x01969260, bool, StrEqual, (app::Char__Array * chars, int32_t str_pos1, int32_t str_len1, app::String * str2));
IL2CPP_REGISTER_METHOD(0x01969310, String *, TrimString, (app::String * value));
IL2CPP_REGISTER_METHOD(0x019693F0, String *, TrimStringStart, (app::String * value));
IL2CPP_REGISTER_METHOD(0x019694B0, String *, TrimStringEnd, (app::String * value));
IL2CPP_REGISTER_METHOD(0x01969570, String__Array *, SplitString, (app::String * value));
IL2CPP_REGISTER_METHOD(0x01969650, bool, IsNegativeZero, (double value));
IL2CPP_REGISTER_METHOD(0x01969710, int64_t, DoubleToInt64Bits, (double value));
IL2CPP_REGISTER_METHOD(0x01969720, void, VerifyCharData, (app::String * data, app::ExceptionType__Enum inv_char_exception_type, app::ExceptionType__Enum inv_surrogate_exception_type));
IL2CPP_REGISTER_METHODINFO(0x04782808, XmlConvert_VerifyCharData__MethodInfo);
IL2CPP_REGISTER_METHOD(0x019699C0, String *, EscapeValueForDebuggerDisplay, (app::String * value));
IL2CPP_REGISTER_METHOD(0x01969CD0, Exception *, CreateException_1, (app::String * res, app::ExceptionType__Enum exception_type, int32_t line_no, int32_t line_pos));
IL2CPP_REGISTER_METHOD(0x01969F40, Exception *, CreateException_2, (app::String * res, app::String * arg, app::ExceptionType__Enum exception_type, int32_t line_no, int32_t line_pos));
IL2CPP_REGISTER_METHOD(0x0196A220, Exception *, CreateException_3, (app::String * res, app::String__Array * args, app::ExceptionType__Enum exception_type));
IL2CPP_REGISTER_METHOD(0x0196A2F0, Exception *, CreateException_4, (app::String * res, app::String__Array * args, app::ExceptionType__Enum exception_type, int32_t line_no, int32_t line_pos));
IL2CPP_REGISTER_METHOD(0x0196A560, Exception *, CreateInvalidSurrogatePairException_1, (uint16_t low, uint16_t hi));
IL2CPP_REGISTER_METHOD(0x0196A6A0, Exception *, CreateInvalidSurrogatePairException_2, (uint16_t low, uint16_t hi, app::ExceptionType__Enum exception_type));
IL2CPP_REGISTER_METHOD(0x0196A770, Exception *, CreateInvalidSurrogatePairException_3, (uint16_t low, uint16_t hi, app::ExceptionType__Enum exception_type, int32_t line_no, int32_t line_pos));
IL2CPP_REGISTER_METHOD(0x0196A990, Exception *, CreateInvalidHighSurrogateCharException_1, (uint16_t hi));
IL2CPP_REGISTER_METHOD(0x0196AB90, Exception *, CreateInvalidHighSurrogateCharException_2, (uint16_t hi, app::ExceptionType__Enum exception_type));
IL2CPP_REGISTER_METHOD(0x0196AD20, Exception *, CreateInvalidHighSurrogateCharException_3, (uint16_t hi, app::ExceptionType__Enum exception_type, int32_t line_no, int32_t line_pos));
IL2CPP_REGISTER_METHOD(0x0196AE50, Exception *, CreateInvalidCharException_1, (app::String * data, int32_t inv_char_pos, app::ExceptionType__Enum exception_type));
IL2CPP_REGISTER_METHOD(0x0196AF70, Exception *, CreateInvalidCharException_2, (uint16_t inv_char, uint16_t next_char));
IL2CPP_REGISTER_METHOD(0x0196B020, Exception *, CreateInvalidCharException_3, (uint16_t inv_char, uint16_t next_char, app::ExceptionType__Enum exception_type));
IL2CPP_REGISTER_METHOD(0x0196B180, Exception *, CreateInvalidNameCharException, (app::String * name, int32_t index, app::ExceptionType__Enum exception_type));
IL2CPP_REGISTER_METHOD(0x0196B2B0, ArgumentException *, CreateInvalidNameArgumentException, (app::String * name, app::String * argument_name));
IL2CPP_REGISTER_METHOD(0x0196B500, void, __cctor, ());
}
