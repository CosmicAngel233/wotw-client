#include <interception_macros.h>

namespace app::methods::System::Xml::XmlConvert {
IL2CPP_REGISTER_METHOD(0x01960BB0, String *, EncodeName, (String * name));
IL2CPP_REGISTER_METHOD(0x01960C50, String *, EncodeLocalName, (String * name));
IL2CPP_REGISTER_METHOD(0x01960CF0, String *, DecodeName, (String * name));
IL2CPP_REGISTER_METHOD(0x019616B0, String *, EncodeName, (String * name, bool first, bool local));
IL2CPP_REGISTER_METHOD(0x01962170, int32_t, FromHex, (uint16_t digit));
IL2CPP_REGISTER_METHOD(0x019621A0, Byte__Array *, FromBinHexString, (String * s));
IL2CPP_REGISTER_METHOD(0x01962240, Byte__Array *, FromBinHexString, (String * s, bool allowOddCount));
IL2CPP_REGISTER_METHODINFO(0x047645F8, XmlConvert_FromBinHexString_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01962310, String *, ToBinHexString, (Byte__Array * inArray));
IL2CPP_REGISTER_METHODINFO(0x04792F08, XmlConvert_ToBinHexString__MethodInfo);
IL2CPP_REGISTER_METHOD(0x019623D0, String *, VerifyName, (String * name));
IL2CPP_REGISTER_METHODINFO(0x047208C0, XmlConvert_VerifyName__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01962550, Exception *, TryVerifyName, (String * name));
IL2CPP_REGISTER_METHOD(0x01962830, String *, VerifyQName, (String * name, ExceptionType__Enum exceptionType));
IL2CPP_REGISTER_METHODINFO(0x0471D988, XmlConvert_VerifyQName__MethodInfo);
IL2CPP_REGISTER_METHOD(0x019629E0, String *, VerifyNCName, (String * name));
IL2CPP_REGISTER_METHOD(0x01962BD0, String *, VerifyNCName, (String * name, ExceptionType__Enum exceptionType));
IL2CPP_REGISTER_METHODINFO(0x04791680, XmlConvert_VerifyNCName_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01962D50, Exception *, TryVerifyNCName, (String * name));
IL2CPP_REGISTER_METHOD(0x01962E50, String *, VerifyTOKEN, (String * token));
IL2CPP_REGISTER_METHODINFO(0x04790260, XmlConvert_VerifyTOKEN__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01962FC0, Exception *, TryVerifyTOKEN, (String * token));
IL2CPP_REGISTER_METHOD(0x019631E0, Exception *, TryVerifyNMTOKEN, (String * name));
IL2CPP_REGISTER_METHOD(0x019635A0, Exception *, TryVerifyNormalizedString, (String * str));
IL2CPP_REGISTER_METHOD(0x01963760, String *, ToString, (bool value));
IL2CPP_REGISTER_METHOD(0x019637F0, String *, ToString, (uint16_t value));
IL2CPP_REGISTER_METHOD(0x01963810, String *, ToString, (Decimal value));
IL2CPP_REGISTER_METHOD(0x01963850, String *, ToString, (int8_t value));
IL2CPP_REGISTER_METHOD(0x01963880, String *, ToString, (int16_t value));
IL2CPP_REGISTER_METHOD(0x019638B0, String *, ToString, (int32_t value));
IL2CPP_REGISTER_METHOD(0x019638E0, String *, ToString, (int64_t value));
IL2CPP_REGISTER_METHOD(0x01963910, String *, ToString, (uint8_t value));
IL2CPP_REGISTER_METHOD(0x01963940, String *, ToString, (uint16_t value));
IL2CPP_REGISTER_METHOD(0x01963970, String *, ToString, (uint32_t value));
IL2CPP_REGISTER_METHOD(0x019639A0, String *, ToString, (uint64_t value));
IL2CPP_REGISTER_METHOD(0x019639D0, String *, ToString, (float value));
IL2CPP_REGISTER_METHOD(0x01963B00, String *, ToString, (double value));
IL2CPP_REGISTER_METHOD(0x01963C60, String *, ToString, (TimeSpan value));
IL2CPP_REGISTER_METHOD(0x01963CC0, String *, ToString, (DateTime value, String * format));
IL2CPP_REGISTER_METHOD(0x01963D70, String *, ToString, (DateTime value, XmlDateTimeSerializationMode__Enum dateTimeOption));
IL2CPP_REGISTER_METHODINFO(0x0470D708, XmlConvert_ToString_15__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01963F70, String *, ToString, (DateTimeOffset value));
IL2CPP_REGISTER_METHOD(0x01963FB0, String *, ToString, (Guid value));
IL2CPP_REGISTER_METHOD(0x01963FC0, bool, ToBoolean, (String * s));
IL2CPP_REGISTER_METHODINFO(0x04742A08, XmlConvert_ToBoolean__MethodInfo);
IL2CPP_REGISTER_METHOD(0x019641E0, Exception *, TryToBoolean, (String * s, bool * result));
IL2CPP_REGISTER_METHOD(0x01964500, uint16_t, ToChar, (String * s));
IL2CPP_REGISTER_METHODINFO(0x0474C2D0, XmlConvert_ToChar__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01964610, Exception *, TryToChar, (String * s, uint16_t * result));
IL2CPP_REGISTER_METHOD(0x019648A0, Decimal, ToDecimal, (String * s));
IL2CPP_REGISTER_METHOD(0x01964990, Exception *, TryToDecimal, (String * s, Decimal * result));
IL2CPP_REGISTER_METHOD(0x01964C30, Decimal, ToInteger, (String * s));
IL2CPP_REGISTER_METHOD(0x01964D20, Exception *, TryToInteger, (String * s, Decimal * result));
IL2CPP_REGISTER_METHOD(0x01964FC0, int8_t, ToSByte, (String * s));
IL2CPP_REGISTER_METHOD(0x01965010, Exception *, TryToSByte, (String * s, int8_t * result));
IL2CPP_REGISTER_METHOD(0x019652B0, int16_t, ToInt16, (String * s));
IL2CPP_REGISTER_METHOD(0x01965300, Exception *, TryToInt16, (String * s, int16_t * result));
IL2CPP_REGISTER_METHOD(0x019655A0, int32_t, ToInt32, (String * s));
IL2CPP_REGISTER_METHOD(0x019655F0, Exception *, TryToInt32, (String * s, int32_t * result));
IL2CPP_REGISTER_METHOD(0x01965870, int64_t, ToInt64, (String * s));
IL2CPP_REGISTER_METHOD(0x019658C0, Exception *, TryToInt64, (String * s, int64_t * result));
IL2CPP_REGISTER_METHOD(0x01965B40, uint8_t, ToByte, (String * s));
IL2CPP_REGISTER_METHOD(0x01965B90, Exception *, TryToByte, (String * s, uint8_t * result));
IL2CPP_REGISTER_METHOD(0x01965E00, uint16_t, ToUInt16, (String * s));
IL2CPP_REGISTER_METHOD(0x01965E50, Exception *, TryToUInt16, (String * s, uint16_t * result));
IL2CPP_REGISTER_METHOD(0x019660C0, uint32_t, ToUInt32, (String * s));
IL2CPP_REGISTER_METHOD(0x01966110, Exception *, TryToUInt32, (String * s, uint32_t * result));
IL2CPP_REGISTER_METHOD(0x01966390, uint64_t, ToUInt64, (String * s));
IL2CPP_REGISTER_METHOD(0x019663E0, Exception *, TryToUInt64, (String * s, uint64_t * result));
IL2CPP_REGISTER_METHOD(0x01966660, float, ToSingle, (String * s));
IL2CPP_REGISTER_METHOD(0x01966800, Exception *, TryToSingle, (String * s, float * result));
IL2CPP_REGISTER_METHOD(0x01966B80, double, ToDouble, (String * s));
IL2CPP_REGISTER_METHOD(0x01966D30, Exception *, TryToDouble, (String * s, double * result));
IL2CPP_REGISTER_METHOD(0x019670C0, double, ToXPathDouble, (Object * o));
IL2CPP_REGISTER_METHOD(0x01967320, TimeSpan, ToTimeSpan, (String * s));
IL2CPP_REGISTER_METHODINFO(0x0470B3D8, XmlConvert_ToTimeSpan__MethodInfo);
IL2CPP_REGISTER_METHOD(0x019674A0, Exception *, TryToTimeSpan, (String * s, TimeSpan * result));
IL2CPP_REGISTER_METHOD(0x019675B0, String__Array *, get_AllDateTimeFormats, ());
IL2CPP_REGISTER_METHOD(0x019676C0, void, CreateAllDateTimeFormats, ());
IL2CPP_REGISTER_METHOD(0x01968070, DateTime, ToDateTime, (String * s));
IL2CPP_REGISTER_METHOD(0x019682D0, DateTime, ToDateTime, (String * s, String__Array * formats));
IL2CPP_REGISTER_METHOD(0x019683C0, DateTime, ToDateTime, (String * s, XmlDateTimeSerializationMode__Enum dateTimeOption));
IL2CPP_REGISTER_METHODINFO(0x04759880, XmlConvert_ToDateTime_2__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01968600, DateTimeOffset, ToDateTimeOffset, (String * s));
IL2CPP_REGISTER_METHODINFO(0x047785A0, XmlConvert_ToDateTimeOffset__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01968720, Guid, ToGuid, (String * s));
IL2CPP_REGISTER_METHOD(0x01968740, Exception *, TryToGuid, (String * s, Guid * result));
IL2CPP_REGISTER_METHOD(0x01968A90, DateTime, SwitchToLocalTime, (DateTime value));
IL2CPP_REGISTER_METHOD(0x01968B20, DateTime, SwitchToUtcTime, (DateTime value));
IL2CPP_REGISTER_METHOD(0x01968BC0, Uri *, ToUri, (String * s));
IL2CPP_REGISTER_METHODINFO(0x04786240, XmlConvert_ToUri__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01968E30, Exception *, TryToUri, (String * s, Uri * * result));
IL2CPP_REGISTER_METHOD(0x01969260, bool, StrEqual, (Char__Array * chars, int32_t strPos1, int32_t strLen1, String * str2));
IL2CPP_REGISTER_METHOD(0x01969310, String *, TrimString, (String * value));
IL2CPP_REGISTER_METHOD(0x019693F0, String *, TrimStringStart, (String * value));
IL2CPP_REGISTER_METHOD(0x019694B0, String *, TrimStringEnd, (String * value));
IL2CPP_REGISTER_METHOD(0x01969570, String__Array *, SplitString, (String * value));
IL2CPP_REGISTER_METHOD(0x01969650, bool, IsNegativeZero, (double value));
IL2CPP_REGISTER_METHOD(0x01969710, int64_t, DoubleToInt64Bits, (double value));
IL2CPP_REGISTER_METHOD(0x01969720, void, VerifyCharData, (String * data, ExceptionType__Enum invCharExceptionType, ExceptionType__Enum invSurrogateExceptionType));
IL2CPP_REGISTER_METHODINFO(0x04782808, XmlConvert_VerifyCharData__MethodInfo);
IL2CPP_REGISTER_METHOD(0x019699C0, String *, EscapeValueForDebuggerDisplay, (String * value));
IL2CPP_REGISTER_METHOD(0x01969CD0, Exception *, CreateException, (String * res, ExceptionType__Enum exceptionType, int32_t lineNo, int32_t linePos));
IL2CPP_REGISTER_METHOD(0x01969F40, Exception *, CreateException, (String * res, String * arg, ExceptionType__Enum exceptionType, int32_t lineNo, int32_t linePos));
IL2CPP_REGISTER_METHOD(0x0196A220, Exception *, CreateException, (String * res, String__Array * args, ExceptionType__Enum exceptionType));
IL2CPP_REGISTER_METHOD(0x0196A2F0, Exception *, CreateException, (String * res, String__Array * args, ExceptionType__Enum exceptionType, int32_t lineNo, int32_t linePos));
IL2CPP_REGISTER_METHOD(0x0196A560, Exception *, CreateInvalidSurrogatePairException, (uint16_t low, uint16_t hi));
IL2CPP_REGISTER_METHOD(0x0196A6A0, Exception *, CreateInvalidSurrogatePairException, (uint16_t low, uint16_t hi, ExceptionType__Enum exceptionType));
IL2CPP_REGISTER_METHOD(0x0196A770, Exception *, CreateInvalidSurrogatePairException, (uint16_t low, uint16_t hi, ExceptionType__Enum exceptionType, int32_t lineNo, int32_t linePos));
IL2CPP_REGISTER_METHOD(0x0196A990, Exception *, CreateInvalidHighSurrogateCharException, (uint16_t hi));
IL2CPP_REGISTER_METHOD(0x0196AB90, Exception *, CreateInvalidHighSurrogateCharException, (uint16_t hi, ExceptionType__Enum exceptionType));
IL2CPP_REGISTER_METHOD(0x0196AD20, Exception *, CreateInvalidHighSurrogateCharException, (uint16_t hi, ExceptionType__Enum exceptionType, int32_t lineNo, int32_t linePos));
IL2CPP_REGISTER_METHOD(0x0196AE50, Exception *, CreateInvalidCharException, (String * data, int32_t invCharPos, ExceptionType__Enum exceptionType));
IL2CPP_REGISTER_METHOD(0x0196AF70, Exception *, CreateInvalidCharException, (uint16_t invChar, uint16_t nextChar));
IL2CPP_REGISTER_METHOD(0x0196B020, Exception *, CreateInvalidCharException, (uint16_t invChar, uint16_t nextChar, ExceptionType__Enum exceptionType));
IL2CPP_REGISTER_METHOD(0x0196B180, Exception *, CreateInvalidNameCharException, (String * name, int32_t index, ExceptionType__Enum exceptionType));
IL2CPP_REGISTER_METHOD(0x0196B2B0, ArgumentException *, CreateInvalidNameArgumentException, (String * name, String * argumentName));
IL2CPP_REGISTER_METHOD(0x0196B500, void, __cctor, ());
}
