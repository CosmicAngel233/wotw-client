#include <interception_macros.h>

namespace app::methods::System::Data::SqlTypes::SqlDecimal {
IL2CPP_REGISTER_METHOD(0x001E3420, uint8_t, CalculatePrecision, (SqlDecimal__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x001E3430, bool, VerifyPrecision, (SqlDecimal__Boxed * __this, uint8_t precision));
IL2CPP_REGISTER_METHODINFO(0x047182F0, SqlDecimal_VerifyPrecision__MethodInfo);
IL2CPP_REGISTER_METHOD(0x001E3440, void, __ctor, (SqlDecimal__Boxed * __this, bool fNull));
IL2CPP_REGISTER_METHOD(0x001E3450, void, __ctor, (SqlDecimal__Boxed * __this, Decimal value));
IL2CPP_REGISTER_METHOD(0x001E3470, void, __ctor, (SqlDecimal__Boxed * __this, int32_t value));
IL2CPP_REGISTER_METHOD(0x001E3480, void, __ctor, (SqlDecimal__Boxed * __this, int64_t value));
IL2CPP_REGISTER_METHOD(0x001E3490, void, __ctor, (SqlDecimal__Boxed * __this, UInt32__Array * rglData, uint8_t bLen, uint8_t bPrec, uint8_t bScale, bool fPositive));
IL2CPP_REGISTER_METHOD(0x001E34B0, bool, get_IsNull, (SqlDecimal__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x001E34C0, Decimal, get_Value, (SqlDecimal__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x001E34F0, bool, get_IsPositive, (SqlDecimal__Boxed * __this));
IL2CPP_REGISTER_METHODINFO(0x047909D0, SqlDecimal_get_IsPositive__MethodInfo);
IL2CPP_REGISTER_METHOD(0x001E3500, void, SetPositive, (SqlDecimal__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x001E3510, void, SetSignBit, (SqlDecimal__Boxed * __this, bool fPositive));
IL2CPP_REGISTER_METHOD(0x001E3520, uint8_t, get_Scale, (SqlDecimal__Boxed * __this));
IL2CPP_REGISTER_METHODINFO(0x0476CAA0, SqlDecimal_get_Scale__MethodInfo);
IL2CPP_REGISTER_METHOD(0x001E3530, Int32__Array *, get_Data, (SqlDecimal__Boxed * __this));
IL2CPP_REGISTER_METHODINFO(0x047140E0, SqlDecimal_get_Data__MethodInfo);
IL2CPP_REGISTER_METHOD(0x001E3540, String *, ToString, (SqlDecimal__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x022A6EC0, SqlDecimal, Parse, (String * s));
IL2CPP_REGISTER_METHODINFO(0x0474B5E8, SqlDecimal_Parse__MethodInfo);
IL2CPP_REGISTER_METHOD(0x001E3550, double, ToDouble, (SqlDecimal__Boxed * __this));
IL2CPP_REGISTER_METHODINFO(0x0473D478, SqlDecimal_ToDouble__MethodInfo);
IL2CPP_REGISTER_METHOD(0x001E34C0, Decimal, ToDecimal, (SqlDecimal__Boxed * __this));
IL2CPP_REGISTER_METHODINFO(0x04777DE0, SqlDecimal_ToDecimal__MethodInfo);
IL2CPP_REGISTER_METHOD(0x022A7980, SqlDecimal, operator_, (Decimal x));
IL2CPP_REGISTER_METHOD(0x022A79B0, SqlDecimal, operator_, (int64_t x));
IL2CPP_REGISTER_METHOD(0x022A7A20, SqlDecimal, operator__, (SqlDecimal x));
IL2CPP_REGISTER_METHOD(0x022A7B60, SqlDecimal, operator__, (SqlDecimal x, SqlDecimal y));
IL2CPP_REGISTER_METHODINFO(0x04739388, SqlDecimal_op_Addition__MethodInfo);
IL2CPP_REGISTER_METHOD(0x022A8320, SqlDecimal, operator__, (SqlDecimal x, SqlDecimal y));
IL2CPP_REGISTER_METHOD(0x022A8440, SqlDecimal, operator__, (SqlDecimal x, SqlDecimal y));
IL2CPP_REGISTER_METHODINFO(0x04796D10, SqlDecimal_op_Multiply__MethodInfo);
IL2CPP_REGISTER_METHOD(0x022A91A0, SqlDecimal, operator__, (SqlDecimal x, SqlDecimal y));
IL2CPP_REGISTER_METHODINFO(0x04799A58, SqlDecimal_op_Division__MethodInfo);
IL2CPP_REGISTER_METHOD(0x022A97F0, SqlDecimal, operator_, (SqlByte x));
IL2CPP_REGISTER_METHOD(0x022A9940, SqlDecimal, operator_, (SqlInt16 x));
IL2CPP_REGISTER_METHOD(0x022A9A90, SqlDecimal, operator_, (SqlInt32 x));
IL2CPP_REGISTER_METHOD(0x022A9BE0, SqlDecimal, operator_, (SqlInt64 x));
IL2CPP_REGISTER_METHOD(0x022A9CE0, SqlDecimal, operator_, (SqlMoney x));
IL2CPP_REGISTER_METHOD(0x022A9DF0, void, ZeroToMaxLen, (UInt32__Array * rgulData, int32_t cUI4sCur));
IL2CPP_REGISTER_METHOD(0x001E3560, bool, FZero, (SqlDecimal__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x001E3580, bool, FGt10_38, (SqlDecimal__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x001E35C0, bool, FGt10_38, (SqlDecimal__Boxed * __this, UInt32__Array * rglData));
IL2CPP_REGISTER_METHOD(0x022A9F60, uint8_t, BGetPrecUI4, (uint32_t value));
IL2CPP_REGISTER_METHOD(0x022AA1A0, uint8_t, BGetPrecUI8, (uint64_t dwlVal));
IL2CPP_REGISTER_METHOD(0x001E35D0, void, AddULong, (SqlDecimal__Boxed * __this, uint32_t ulAdd));
IL2CPP_REGISTER_METHODINFO(0x0471A2E8, SqlDecimal_AddULong__MethodInfo);
IL2CPP_REGISTER_METHOD(0x001E35E0, void, MultByULong, (SqlDecimal__Boxed * __this, uint32_t uiMultiplier));
IL2CPP_REGISTER_METHODINFO(0x04788120, SqlDecimal_MultByULong__MethodInfo);
IL2CPP_REGISTER_METHOD(0x001E35F0, uint32_t, DivByULong, (SqlDecimal__Boxed * __this, uint32_t iDivisor));
IL2CPP_REGISTER_METHODINFO(0x04756718, SqlDecimal_DivByULong__MethodInfo);
IL2CPP_REGISTER_METHOD(0x001E3600, void, AdjustScale, (SqlDecimal__Boxed * __this, int32_t digits, bool fRound));
IL2CPP_REGISTER_METHODINFO(0x0471A330, SqlDecimal_AdjustScale__MethodInfo);
IL2CPP_REGISTER_METHOD(0x001E3610, int32_t, LAbsCmp, (SqlDecimal__Boxed * __this, SqlDecimal snumOp));
IL2CPP_REGISTER_METHOD(0x022AB480, void, MpMove, (UInt32__Array * rgulS, int32_t ciulS, UInt32__Array * rgulD, int32_t * ciulD));
IL2CPP_REGISTER_METHOD(0x022AB4F0, void, MpSet, (UInt32__Array * rgulD, int32_t * ciulD, uint32_t iulN));
IL2CPP_REGISTER_METHOD(0x021E6970, void, MpNormalize, (UInt32__Array * rgulU, int32_t * ciulU));
IL2CPP_REGISTER_METHOD(0x022AB530, void, MpMul1, (UInt32__Array * piulD, int32_t * ciulD, uint32_t iulX));
IL2CPP_REGISTER_METHOD(0x022AB690, void, MpDiv1, (UInt32__Array * rgulU, int32_t * ciulU, uint32_t iulD, uint32_t * iulR));
IL2CPP_REGISTER_METHOD(0x022AB810, uint64_t, DWL, (uint32_t lo, uint32_t hi));
IL2CPP_REGISTER_METHOD(0x022AB820, uint32_t, HI, (uint64_t x));
IL2CPP_REGISTER_METHOD(0x006CE970, uint32_t, LO, (uint64_t x));
IL2CPP_REGISTER_METHOD(0x022AB830, void, MpDiv, (UInt32__Array * rgulU, int32_t ciulU, UInt32__Array * rgulD, int32_t ciulD, UInt32__Array * rgulQ, int32_t * ciulQ, UInt32__Array * rgulR, int32_t * ciulR));
IL2CPP_REGISTER_METHOD(0x001E3640, EComparison__Enum, CompareNm, (SqlDecimal__Boxed * __this, SqlDecimal snumOp));
IL2CPP_REGISTER_METHOD(0x022AC6E0, void, CheckValidPrecScale, (uint8_t bPrec, uint8_t bScale));
IL2CPP_REGISTER_METHODINFO(0x04707450, SqlDecimal_CheckValidPrecScale__MethodInfo);
IL2CPP_REGISTER_METHOD(0x022AC800, SqlBoolean, operator___, (SqlDecimal x, SqlDecimal y));
IL2CPP_REGISTER_METHOD(0x022AC900, SqlBoolean, operator__, (SqlDecimal x, SqlDecimal y));
IL2CPP_REGISTER_METHOD(0x022ACA00, SqlBoolean, operator__, (SqlDecimal x, SqlDecimal y));
IL2CPP_REGISTER_METHOD(0x022ACB00, SqlBoolean, LessThan, (SqlDecimal x, SqlDecimal y));
IL2CPP_REGISTER_METHOD(0x022ACBD0, SqlBoolean, GreaterThan, (SqlDecimal x, SqlDecimal y));
IL2CPP_REGISTER_METHOD(0x001E3670, SqlDouble, ToSqlDouble, (SqlDecimal__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x001E36A0, SqlInt64, ToSqlInt64, (SqlDecimal__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x001E36D0, SqlMoney, ToSqlMoney, (SqlDecimal__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x021E69C0, uint16_t, ChFromDigit, (uint32_t uiDigit));
IL2CPP_REGISTER_METHOD(0x001E3700, void, StoreFromWorkingArray, (SqlDecimal__Boxed * __this, UInt32__Array * rguiData));
IL2CPP_REGISTER_METHOD(0x001E3710, void, SetToZero, (SqlDecimal__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x001E3720, int32_t, CompareTo, (SqlDecimal__Boxed * __this, Object * value));
IL2CPP_REGISTER_METHODINFO(0x0475D030, SqlDecimal_CompareTo__MethodInfo);
IL2CPP_REGISTER_METHOD(0x001E3870, int32_t, CompareTo, (SqlDecimal__Boxed * __this, SqlDecimal value));
IL2CPP_REGISTER_METHOD(0x001E38A0, bool, Equals, (SqlDecimal__Boxed * __this, Object * value));
IL2CPP_REGISTER_METHOD(0x001E38B0, int32_t, GetHashCode, (SqlDecimal__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x0013BB70, XmlSchema *, IXmlSerializable_GetSchema, (SqlDecimal__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x001E3A00, void, IXmlSerializable_ReadXml, (SqlDecimal__Boxed * __this, XmlReader * reader));
IL2CPP_REGISTER_METHOD(0x001E3A10, void, IXmlSerializable_WriteXml, (SqlDecimal__Boxed * __this, XmlWriter * writer));
IL2CPP_REGISTER_METHOD(0x022AD760, XmlQualifiedName *, GetXsdType, (XmlSchemaSet * schemaSet));
IL2CPP_REGISTER_METHOD(0x022AD8B0, void, __cctor, ());
}
