using namespace app;

namespace app::methods::System::Data::ForeignKeyConstraint {
IL2CPP_REGISTER_METHOD(0x01F5EB80, void, __ctor, (ForeignKeyConstraint * __this, DataColumn * parentColumn, DataColumn * childColumn));
IL2CPP_REGISTER_METHOD(0x01F5EBA0, void, __ctor, (ForeignKeyConstraint * __this, String * constraintName, DataColumn * parentColumn, DataColumn * childColumn));
IL2CPP_REGISTER_METHOD(0x01F5ED50, void, __ctor, (ForeignKeyConstraint * __this, DataColumn__Array * parentColumns, DataColumn__Array * childColumns));
IL2CPP_REGISTER_METHOD(0x01F5EDB0, void, __ctor, (ForeignKeyConstraint * __this, String * constraintName, DataColumn__Array * parentColumns, DataColumn__Array * childColumns));
IL2CPP_REGISTER_METHOD(0x01F5EE20, void, __ctor, (ForeignKeyConstraint * __this, String * constraintName, String * parentTableName, String__Array * parentColumnNames, String__Array * childColumnNames, AcceptRejectRule__Enum acceptRejectRule, Rule__Enum deleteRule, Rule__Enum updateRule));
IL2CPP_REGISTER_METHOD(0x01F5EEA0, void, __ctor, (ForeignKeyConstraint * __this, String * constraintName, String * parentTableName, String * parentTableNamespace, String__Array * parentColumnNames, String__Array * childColumnNames, AcceptRejectRule__Enum acceptRejectRule, Rule__Enum deleteRule, Rule__Enum updateRule));
IL2CPP_REGISTER_METHOD(0x01F5EF20, DataKey, get_ChildKey, (ForeignKeyConstraint * __this));
IL2CPP_REGISTER_METHOD(0x01F5EF40, DataColumn__Array *, get_Columns, (ForeignKeyConstraint * __this));
IL2CPP_REGISTER_METHOD(0x01F5EF60, DataTable *, get_Table, (ForeignKeyConstraint * __this));
IL2CPP_REGISTER_METHOD(0x01F5EFB0, String__Array *, get_ParentColumnNames, (ForeignKeyConstraint * __this));
IL2CPP_REGISTER_METHOD(0x01F5EFC0, String__Array *, get_ChildColumnNames, (ForeignKeyConstraint * __this));
IL2CPP_REGISTER_METHOD(0x01F5EFD0, void, CheckCanAddToCollection, (ForeignKeyConstraint * __this, ConstraintCollection * constraints));
IL2CPP_REGISTER_METHODINFO(0x04711380, ForeignKeyConstraint_CheckCanAddToCollection__MethodInfo);
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, CanBeRemovedFromCollection, (ForeignKeyConstraint * __this, ConstraintCollection * constraints, bool fThrowException));
IL2CPP_REGISTER_METHOD(0x01F5F1B0, bool, IsKeyNull, (ForeignKeyConstraint * __this, Object__Array * values));
IL2CPP_REGISTER_METHOD(0x01F5F2B0, bool, IsConstraintViolated, (ForeignKeyConstraint * __this));
IL2CPP_REGISTER_METHOD(0x01F5F530, bool, CanEnableConstraint, (ForeignKeyConstraint * __this));
IL2CPP_REGISTER_METHOD(0x01F5F730, void, CascadeCommit, (ForeignKeyConstraint * __this, DataRow * row));
IL2CPP_REGISTER_METHOD(0x01F5F8D0, void, CascadeDelete, (ForeignKeyConstraint * __this, DataRow * row));
IL2CPP_REGISTER_METHODINFO(0x0473DD60, ForeignKeyConstraint_CascadeDelete__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01F5FF80, void, CascadeRollback, (ForeignKeyConstraint * __this, DataRow * row));
IL2CPP_REGISTER_METHODINFO(0x04761E10, ForeignKeyConstraint_CascadeRollback__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01F60280, void, CascadeUpdate, (ForeignKeyConstraint * __this, DataRow * row));
IL2CPP_REGISTER_METHODINFO(0x0472BC98, ForeignKeyConstraint_CascadeUpdate__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01F608C0, void, CheckCanClearParentTable, (ForeignKeyConstraint * __this, DataTable * table));
IL2CPP_REGISTER_METHODINFO(0x04708A08, ForeignKeyConstraint_CheckCanClearParentTable__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01F60A30, void, CheckCanRemoveParentRow, (ForeignKeyConstraint * __this, DataRow * row));
IL2CPP_REGISTER_METHODINFO(0x04764AB8, ForeignKeyConstraint_CheckCanRemoveParentRow__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01F60B50, void, CheckCascade, (ForeignKeyConstraint * __this, DataRow * row, DataRowAction__Enum action));
IL2CPP_REGISTER_METHOD(0x01F60CA0, void, CheckConstraint, (ForeignKeyConstraint * __this, DataRow * childRow, DataRowAction__Enum action));
IL2CPP_REGISTER_METHODINFO(0x0472A250, ForeignKeyConstraint_CheckConstraint__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01F61140, void, NonVirtualCheckState, (ForeignKeyConstraint * __this));
IL2CPP_REGISTER_METHODINFO(0x04705578, ForeignKeyConstraint_NonVirtualCheckState__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01F61540, void, CheckState, (ForeignKeyConstraint * __this));
IL2CPP_REGISTER_METHOD(0x01F61550, AcceptRejectRule__Enum, get_AcceptRejectRule, (ForeignKeyConstraint * __this));
IL2CPP_REGISTER_METHOD(0x01F61570, void, set_AcceptRejectRule, (ForeignKeyConstraint * __this, AcceptRejectRule__Enum value));
IL2CPP_REGISTER_METHODINFO(0x04795CF0, ForeignKeyConstraint_set_AcceptRejectRule__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01F61630, bool, ContainsColumn, (ForeignKeyConstraint * __this, DataColumn * column));
IL2CPP_REGISTER_METHOD(0x01F616E0, Constraint_1 *, Clone, (ForeignKeyConstraint * __this, DataSet * destination));
IL2CPP_REGISTER_METHOD(0x01F61700, Constraint_1 *, Clone, (ForeignKeyConstraint * __this, DataSet * destination, bool ignorNSforTableLookup));
IL2CPP_REGISTER_METHOD(0x01F61F70, ForeignKeyConstraint *, Clone, (ForeignKeyConstraint * __this, DataTable * destination));
IL2CPP_REGISTER_METHOD(0x01F625D0, void, Create, (ForeignKeyConstraint * __this, String * relationName, DataColumn__Array * parentColumns, DataColumn__Array * childColumns));
IL2CPP_REGISTER_METHODINFO(0x04781998, ForeignKeyConstraint_Create__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01F62820, Rule__Enum, get_DeleteRule, (ForeignKeyConstraint * __this));
IL2CPP_REGISTER_METHOD(0x01F62840, void, set_DeleteRule, (ForeignKeyConstraint * __this, Rule__Enum value));
IL2CPP_REGISTER_METHODINFO(0x04797C60, ForeignKeyConstraint_set_DeleteRule__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01F62900, bool, Equals, (ForeignKeyConstraint * __this, Object * key));
IL2CPP_REGISTER_METHOD(0x0194D440, int32_t, GetHashCode, (ForeignKeyConstraint * __this));
IL2CPP_REGISTER_METHOD(0x01F62A80, DataColumn__Array *, get_RelatedColumns, (ForeignKeyConstraint * __this));
IL2CPP_REGISTER_METHOD(0x01F62AA0, DataColumn__Array *, get_RelatedColumnsReference, (ForeignKeyConstraint * __this));
IL2CPP_REGISTER_METHOD(0x01F62AA0, DataKey, get_ParentKey, (ForeignKeyConstraint * __this));
IL2CPP_REGISTER_METHOD(0x01F62AC0, DataRelation *, FindParentRelation, (ForeignKeyConstraint * __this));
IL2CPP_REGISTER_METHOD(0x01F62BB0, DataTable *, get_RelatedTable, (ForeignKeyConstraint * __this));
IL2CPP_REGISTER_METHOD(0x01F62C00, Rule__Enum, get_UpdateRule, (ForeignKeyConstraint * __this));
IL2CPP_REGISTER_METHOD(0x01F62C20, void, set_UpdateRule, (ForeignKeyConstraint * __this, Rule__Enum value));
IL2CPP_REGISTER_METHODINFO(0x04767948, ForeignKeyConstraint_set_UpdateRule__MethodInfo);
}
