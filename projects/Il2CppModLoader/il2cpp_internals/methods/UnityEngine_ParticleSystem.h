using namespace app;

namespace app::methods::UnityEngine::ParticleSystem {
IL2CPP_REGISTER_METHOD(0x03132610, void, Emit, (ParticleSystem * __this, Vector3 position, Vector3 velocity, float size, float lifetime, Color32 color));
IL2CPP_REGISTER_METHOD(0x031327D0, void, Emit, (ParticleSystem * __this, ParticleSystem_Particle particle));
IL2CPP_REGISTER_METHOD(0x03132830, bool, get_loop, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x03132880, void, set_playOnAwake, (ParticleSystem * __this, bool value));
IL2CPP_REGISTER_METHOD(0x031328E0, float, get_duration, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x03132930, bool, get_enableEmission, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x03132980, void, set_enableEmission, (ParticleSystem * __this, bool value));
IL2CPP_REGISTER_METHOD(0x031329E0, float, get_emissionRate, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x03132A30, void, set_emissionRate, (ParticleSystem * __this, float value));
IL2CPP_REGISTER_METHOD(0x03132AC0, float, get_startSpeed, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x03132B10, void, set_startSpeed, (ParticleSystem * __this, float value));
IL2CPP_REGISTER_METHOD(0x03132B70, Color, get_startColor, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x03132C00, void, set_startColor, (ParticleSystem * __this, Color value));
IL2CPP_REGISTER_METHOD(0x03132CB0, int32_t, get_maxParticles, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x03132D00, void, set_simulationSpace, (ParticleSystem * __this, ParticleSystemSimulationSpace__Enum value));
IL2CPP_REGISTER_METHOD(0x03132D60, bool, get_isPlaying, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x03132DB0, int32_t, get_particleCount, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x03132E00, void, set_randomSeed, (ParticleSystem * __this, uint32_t value));
IL2CPP_REGISTER_METHOD(0x0238D4F0, ParticleSystem_MainModule, get_main, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x0238D4F0, ParticleSystem_EmissionModule, get_emission, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x0238D4F0, ParticleSystem_ShapeModule, get_shape, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x0238D4F0, ParticleSystem_VelocityOverLifetimeModule, get_velocityOverLifetime, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x0238D4F0, ParticleSystem_ForceOverLifetimeModule, get_forceOverLifetime, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x0238D4F0, ParticleSystem_ColorOverLifetimeModule, get_colorOverLifetime, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x0238D4F0, ParticleSystem_CollisionModule, get_collision, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x03132E60, void, SetParticles, (ParticleSystem * __this, ParticleSystem_Particle__Array * particles, int32_t size, int32_t offset));
IL2CPP_REGISTER_METHOD(0x03132EE0, void, SetParticles, (ParticleSystem * __this, ParticleSystem_Particle__Array * particles, int32_t size));
IL2CPP_REGISTER_METHOD(0x03132F60, int32_t, GetParticles, (ParticleSystem * __this, ParticleSystem_Particle__Array * particles, int32_t size, int32_t offset));
IL2CPP_REGISTER_METHOD(0x03132FE0, int32_t, GetParticles, (ParticleSystem * __this, ParticleSystem_Particle__Array * particles, int32_t size));
IL2CPP_REGISTER_METHOD(0x03133060, int32_t, GetParticles, (ParticleSystem * __this, ParticleSystem_Particle__Array * particles));
IL2CPP_REGISTER_METHOD(0x031330D0, void, Simulate, (ParticleSystem * __this, float t, bool withChildren, bool restart, bool fixedTimeStep));
IL2CPP_REGISTER_METHOD(0x03133160, void, Simulate, (ParticleSystem * __this, float t, bool withChildren, bool restart));
IL2CPP_REGISTER_METHOD(0x031331F0, void, Simulate, (ParticleSystem * __this, float t, bool withChildren));
IL2CPP_REGISTER_METHOD(0x03133210, void, Simulate, (ParticleSystem * __this, float t));
IL2CPP_REGISTER_METHOD(0x03133230, void, Play, (ParticleSystem * __this, bool withChildren));
IL2CPP_REGISTER_METHOD(0x03133290, void, Play, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x031332F0, void, Pause, (ParticleSystem * __this, bool withChildren));
IL2CPP_REGISTER_METHOD(0x03133350, void, Pause, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x031333B0, void, Stop, (ParticleSystem * __this, bool withChildren, ParticleSystemStopBehavior__Enum stopBehavior));
IL2CPP_REGISTER_METHOD(0x03133420, void, Stop, (ParticleSystem * __this, bool withChildren));
IL2CPP_REGISTER_METHOD(0x03133490, void, Stop, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x031334F0, void, Clear, (ParticleSystem * __this, bool withChildren));
IL2CPP_REGISTER_METHOD(0x03133550, void, Clear, (ParticleSystem * __this));
IL2CPP_REGISTER_METHOD(0x031335B0, void, Emit, (ParticleSystem * __this, int32_t count));
IL2CPP_REGISTER_METHOD(0x031335B0, void, Emit_Internal, (ParticleSystem * __this, int32_t count));
IL2CPP_REGISTER_METHOD(0x03133610, void, Emit, (ParticleSystem * __this, ParticleSystem_EmitParams emitParams, int32_t count));
IL2CPP_REGISTER_METHOD(0x03133680, bool, GetDeallocateInactiveParticles, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x031336D0, void, SetDeallocateInactiveParticles, (bool value));
IL2CPP_REGISTER_METHOD(0x03133720, bool, GetDisableAllParticles, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x03133770, void, SetDisableAllParticles, (bool value));
IL2CPP_REGISTER_METHOD(0x00490410, bool, GetDisableFixedTimestep, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x031337C0, void, SetDisableFixedTimestep, (bool value));
IL2CPP_REGISTER_METHOD(0x03133810, void, Internal_EmitOld, (ParticleSystem * __this, ParticleSystem_Particle * particle));
IL2CPP_REGISTER_METHOD(0x03133870, void, Emit_Injected, (ParticleSystem * __this, ParticleSystem_EmitParams * emitParams, int32_t count));
}
