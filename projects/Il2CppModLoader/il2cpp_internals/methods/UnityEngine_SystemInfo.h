using namespace app;

namespace app::methods::UnityEngine::SystemInfo {
IL2CPP_REGISTER_METHOD(0x02C648F0, String *, get_operatingSystem, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64940, OperatingSystemFamily__Enum, get_operatingSystemFamily, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64990, String *, get_processorType, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C649E0, int32_t, get_processorFrequency, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64A30, int32_t, get_processorCount, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64A80, int32_t, get_systemMemorySize, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64AD0, int32_t, get_executableSize, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64B20, uint64_t, get_allocatableSize, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64B70, uint64_t, get_totalFreeSize, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64BC0, uint64_t, get_totalAllocatedMemory, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64C10, uint64_t, get_firmwareFreeSize, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64C60, uint64_t, get_firmwareFreeSizeMinimum, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64CB0, uint64_t, get_totalReservedMemory, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64D00, uint64_t, get_gcUsedSize, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64D50, uint64_t, get_gcHeapSize, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64DA0, void, set_gcHeapSize, (uint64_t value));
IL2CPP_REGISTER_METHOD(0x02C64DF0, void, set_gcReservedHeapSize, (uint64_t value));
IL2CPP_REGISTER_METHOD(0x02C64E40, void, set_gcFreeSpaceDivisor, (int32_t value));
IL2CPP_REGISTER_METHOD(0x01A45C50, String *, get_deviceUniqueIdentifier, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64E90, String *, get_deviceName, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64EE0, String *, get_deviceModel, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64F30, bool, get_supportsAccelerometer, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64F80, bool, get_supportsGyroscope, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64FD0, bool, get_supportsLocationService, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65020, DeviceType__Enum, get_deviceType, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65070, int32_t, get_graphicsMemorySize, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C650C0, String *, get_graphicsDeviceName, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65110, String *, get_graphicsDeviceVendor, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65160, int32_t, get_graphicsDeviceID, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C651B0, int32_t, get_graphicsDeviceVendorID, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65200, GraphicsDeviceType__Enum, get_graphicsDeviceType, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65250, String *, get_graphicsDeviceVersion, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C652A0, int32_t, get_graphicsShaderLevel, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C652F0, bool, get_graphicsMultiThreaded, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01F1B650, bool, get_supportsRenderTextures, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65340, bool, get_supportsImageEffects, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65390, bool, get_supports3DTextures, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C653E0, CopyTextureSupport__Enum, get_copyTextureSupport, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65430, bool, get_supportsComputeShaders, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65480, int32_t, get_supportedRenderTargetCount, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C654D0, int32_t, get_supportedRandomWriteTargetCount, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65520, uint8_t *, GetDyingMessagePointer, (int32_t size));
IL2CPP_REGISTER_METHOD(0x02C65580, bool, IsValidEnumValue, (Enum value));
IL2CPP_REGISTER_METHOD(0x02C65650, bool, SupportsRenderTextureFormat, (RenderTextureFormat__Enum format));
IL2CPP_REGISTER_METHODINFO(0x04771D00, SystemInfo_SupportsRenderTextureFormat__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02C65760, bool, SupportsBlendingOnRenderTextureFormat, (RenderTextureFormat__Enum format));
IL2CPP_REGISTER_METHODINFO(0x04772C08, SystemInfo_SupportsBlendingOnRenderTextureFormat__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02C65870, bool, SupportsTextureFormat, (TextureFormat__Enum format));
IL2CPP_REGISTER_METHODINFO(0x04746420, SystemInfo_SupportsTextureFormat__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02C65980, NPOTSupport__Enum, get_npotSupport, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C648F0, String *, GetOperatingSystem, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64940, OperatingSystemFamily__Enum, GetOperatingSystemFamily, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64990, String *, GetProcessorType, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C649E0, int32_t, GetProcessorFrequencyMHz, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64A30, int32_t, GetProcessorCount, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64A80, int32_t, GetPhysicalMemoryMB, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64C10, uint64_t, GetFirmwareFreeSize, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64C60, uint64_t, GetFirmwareFreeSizeMinimum, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64AD0, int32_t, GetExecutableSizeMB, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64B20, uint64_t, GetAllocatableSize, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64B70, uint64_t, GetTotalFreeSize, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64BC0, uint64_t, GetTotalAllocatedMemory, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64CB0, uint64_t, GetTotalReservedMemory, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64D00, uint64_t, GetGCUsedSize, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64D50, uint64_t, GetGCHeapSize, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64DA0, void, SetGCHeapSize, (uint64_t newSize));
IL2CPP_REGISTER_METHOD(0x02C64DF0, void, SetGCReservedHeapSize, (uint64_t newSize));
IL2CPP_REGISTER_METHOD(0x02C659D0, int32_t, GCCollectALittle, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64E40, void, SetGCFreeSpaceDivisor, (int32_t newSize));
IL2CPP_REGISTER_METHOD(0x02C65A20, int64_t, GetDyingMessagePointerNative, (int32_t size));
IL2CPP_REGISTER_METHOD(0x01A45C50, String *, GetDeviceUniqueIdentifier, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64E90, String *, GetDeviceName, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64EE0, String *, GetDeviceModel, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64F30, bool, SupportsAccelerometer, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64F80, bool, IsGyroAvailable, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C64FD0, bool, SupportsLocationService, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65020, DeviceType__Enum, GetDeviceType, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65070, int32_t, GetGraphicsMemorySize, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C650C0, String *, GetGraphicsDeviceName, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65110, String *, GetGraphicsDeviceVendor, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65160, int32_t, GetGraphicsDeviceID, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C651B0, int32_t, GetGraphicsDeviceVendorID, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65200, GraphicsDeviceType__Enum, GetGraphicsDeviceType, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65250, String *, GetGraphicsDeviceVersion, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C652A0, int32_t, GetGraphicsShaderLevel, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C652F0, bool, GetGraphicsMultiThreaded, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65340, bool, SupportsImageEffects, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65390, bool, Supports3DTextures, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C653E0, CopyTextureSupport__Enum, GetCopyTextureSupport, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65430, bool, SupportsComputeShaders, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65480, int32_t, SupportedRenderTargetCount, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C654D0, int32_t, SupportedRandomWriteTargetCount, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65A70, bool, HasRenderTextureNative, (RenderTextureFormat__Enum format));
IL2CPP_REGISTER_METHOD(0x02C65AC0, bool, SupportsBlendingOnRenderTextureFormatNative, (RenderTextureFormat__Enum format));
IL2CPP_REGISTER_METHOD(0x02C65B10, bool, SupportsTextureFormatNative, (TextureFormat__Enum format));
IL2CPP_REGISTER_METHOD(0x02C65980, NPOTSupport__Enum, GetNPOTSupport, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65B60, void, SetGlobalMipBias, (float bias));
IL2CPP_REGISTER_METHOD(0x0048D990, float, GetGlobalMipBias, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02C65BC0, void, SetGlobalTexFilter, (int32_t state));
IL2CPP_REGISTER_METHOD(0x02C65C10, bool, IsFormatSupported, (GraphicsFormat__Enum format, FormatUsage__Enum usage));
}
