using namespace app;

namespace app::methods::AttackableSwitch {
IL2CPP_REGISTER_METHOD(0x00854340, bool, get_Activated, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x0061E2E0, void, set_Activated, (AttackableSwitch * __this, bool value));
IL2CPP_REGISTER_METHOD(0x008543B0, bool, ShouldCreateCheckpoint, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x008543C0, void, Reset, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854430, void, ToggleSwitch, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854550, void, TurnOn, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x008545C0, void, TurnOff, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854630, void, Perform, (AttackableSwitch * __this, StateChangeDefinition * def, AttackableSwitchSetupData * setupData));
IL2CPP_REGISTER_METHOD(0x00854770, void, FixedUpdate, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x0058E140, Vector3, get_Position, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, IsDead, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854880, bool, CanBeChargeFlamed, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854880, bool, CanBeChargeDashed, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854880, bool, CanBeGrenaded, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854880, bool, CanBeStomped, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, CanBeBashed, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854880, bool, CanBeSpiritFlamed, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854880, bool, IsStompBouncable, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854880, bool, CanBeLevelUpBlasted, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854880, bool, CanBeSpiritSlashed, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854880, bool, CanBeHeavySpiritSlashed, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854880, bool, CanBeSpiritLeashed, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854880, bool, CanBeHomingMissiled, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854880, bool, CanBeTrapped, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854880, bool, CanBeSpiritSpeared, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854880, bool, CanBeHitByBow, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854880, bool, CanBeHitByHammerHandle, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854880, bool, CanBeHitByMelee, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, CanBeTeleportedByBeacon, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, CanBeGlowed, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00854880, bool, get_CanBeHit, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x008548D0, void, OnRecieveDamage, (AttackableSwitch * __this, Damage * damage));
IL2CPP_REGISTER_METHOD(0x00854B10, bool, DoesReactTo, (AttackableSwitch * __this, DamageType__Enum damageType));
IL2CPP_REGISTER_METHOD(0x00854DA0, bool, Match, (AttackableSwitch * __this, AttackableSwitch_AttackTypes__Enum attack, DamageType__Enum damageType));
IL2CPP_REGISTER_METHOD(0x00854F10, void, OnRestoreCheckpoint, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHODINFO(0x04725660, AttackableSwitch_OnRestoreCheckpoint__MethodInfo);
IL2CPP_REGISTER_METHOD(0x00854F50, void, Awake, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x008552D0, void, CollectTransitions, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00855320, bool, get_IsOnActivatePerforming, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00855400, void, OnDestroy, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00762910, bool, get_IsSuspended, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x008555F0, void, set_IsSuspended, (AttackableSwitch * __this, bool value));
IL2CPP_REGISTER_METHOD(0x00855600, SuspendableMask__Enum, get_Mask, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00855610, void, set_Mask, (AttackableSwitch * __this, SuspendableMask__Enum value));
IL2CPP_REGISTER_METHOD(0x00420EE0, int32_t, get_SpiritSlashPriority, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnSpiritSlashHighlight, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnSpiritSlashDehighlight, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00597B10, int32_t, GetSpiritSlashDamageAmount, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00420EE0, int32_t, get_BashPriority, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnEnterBash, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnBashHighlight, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnBashDehighlight, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x008556D0, int32_t, get_BowPriority, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x008556E0, bool, get_BowEnableAutoTarget, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x0058E140, Vector3, get_BowAutoTargetPosition, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, ShouldArrowBeReflected, (AttackableSwitch * __this, ArrowHitData hitData));
IL2CPP_REGISTER_METHOD(0x00420EE0, int32_t, get_HammerPriority, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, get_HammerEnableAutoTarget, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00675C60, bool, ShouldArrowExplode, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00675C60, bool, CanDetonateProjectiles, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00855730, bool, get_IsOn, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00855740, IDesiredUberState *, GetRequirementsForTimeline, (AttackableSwitch * __this, MoonTimeline * timeline));
IL2CPP_REGISTER_METHOD(0x002FBD00, Action_1_Damage_ *, get_DamageReceived, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x002FBD10, void, set_DamageReceived, (AttackableSwitch * __this, Action_1_Damage_ * value));
IL2CPP_REGISTER_METHOD(0x002FBD20, IDamageReciever__Array *, get_AffectedReceivers, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x008559C0, void, __ctor, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x004F4750, GameObject *, IDamageReciever_get_gameObject, (AttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00506170, Transform *, IDamageReciever_get_transform, (AttackableSwitch * __this));
}
