using namespace app;

namespace app::methods::Steamworks::NativeMethods {
IL2CPP_REGISTER_METHOD(0x01600DD0, bool, SteamAPI_Init, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01600E60, void, SteamAPI_Shutdown, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01600EF0, bool, SteamAPI_RestartAppIfNecessary, (AppId_t unOwnAppID));
IL2CPP_REGISTER_METHOD(0x01600F90, void, SteamAPI_ReleaseCurrentThreadMemory, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01601020, void, SteamAPI_WriteMiniDump, (uint32_t uStructuredExceptionCode, void * pvExceptionInfo, uint32_t uBuildID));
IL2CPP_REGISTER_METHOD(0x016010D0, void, SteamAPI_SetMiniDumpComment, (InteropHelp_UTF8StringHandle * pchMsg));
IL2CPP_REGISTER_METHOD(0x016011C0, void, SteamAPI_RunCallbacks, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01601250, void, SteamAPI_RegisterCallback, (void * pCallback, int32_t iCallback));
IL2CPP_REGISTER_METHOD(0x01601300, void, SteamAPI_UnregisterCallback, (void * pCallback));
IL2CPP_REGISTER_METHOD(0x016013A0, void, SteamAPI_RegisterCallResult, (void * pCallback, uint64_t hAPICall));
IL2CPP_REGISTER_METHOD(0x01601450, void, SteamAPI_UnregisterCallResult, (void * pCallback, uint64_t hAPICall));
IL2CPP_REGISTER_METHOD(0x01601500, bool, SteamAPI_IsSteamRunning, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01601590, void, Steam_RunCallbacks, (HSteamPipe hSteamPipe, bool bGameServerCallbacks));
IL2CPP_REGISTER_METHOD(0x01601640, void, Steam_RegisterInterfaceFuncs, (void * hModule));
IL2CPP_REGISTER_METHOD(0x016016E0, int32_t, Steam_GetHSteamUserCurrent, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01601770, int32_t, SteamAPI_GetSteamInstallPath, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01601800, int32_t, SteamAPI_GetHSteamPipe, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01601890, void, SteamAPI_SetTryCatchCallbacks, (bool bTryCatchCallbacks));
IL2CPP_REGISTER_METHOD(0x01601930, int32_t, SteamAPI_GetHSteamUser, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x016019C0, void *, SteamInternal_ContextInit, (void * pContextInitData));
IL2CPP_REGISTER_METHOD(0x01601A60, void *, SteamInternal_CreateInterface, (InteropHelp_UTF8StringHandle * ver));
IL2CPP_REGISTER_METHOD(0x01601B50, void, SteamAPI_UseBreakpadCrashHandler, (InteropHelp_UTF8StringHandle * pchVersion, InteropHelp_UTF8StringHandle * pchDate, InteropHelp_UTF8StringHandle * pchTime, bool bFullMemoryDumps, void * pvContext, void * m_pfnPreMinidumpCallback));
IL2CPP_REGISTER_METHOD(0x01601D40, void, SteamAPI_SetBreakpadAppID, (uint32_t unAppID));
IL2CPP_REGISTER_METHOD(0x01601DE0, bool, SteamGameServer_Init, (uint32_t unIP, uint16_t usSteamPort, uint16_t usGamePort, uint16_t usQueryPort, EServerMode__Enum eServerMode, InteropHelp_UTF8StringHandle * pchVersionString));
IL2CPP_REGISTER_METHOD(0x01601F30, void, SteamGameServer_Shutdown, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x015FB390, void, SteamGameServer_RunCallbacks, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x015FB420, void, SteamGameServer_ReleaseCurrentThreadMemory, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x015FB4B0, bool, SteamGameServer_BSecure, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01601FC0, uint64_t, SteamGameServer_GetSteamID, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x015FB650, int32_t, SteamGameServer_GetHSteamPipe, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x015FB6E0, int32_t, SteamGameServer_GetHSteamUser, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01602050, bool, SteamInternal_GameServer_Init, (uint32_t unIP, uint16_t usPort, uint16_t usGamePort, uint16_t usQueryPort, EServerMode__Enum eServerMode, InteropHelp_UTF8StringHandle * pchVersionString));
IL2CPP_REGISTER_METHOD(0x016021A0, void *, SteamClient, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01602230, void *, SteamGameServerClient, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x016022C0, bool, SteamEncryptedAppTicket_BDecryptTicket, (Byte__Array * rgubTicketEncrypted, uint32_t cubTicketEncrypted, Byte__Array * rgubTicketDecrypted, uint32_t * pcubTicketDecrypted, Byte__Array * rgubKey, int32_t cubKey));
IL2CPP_REGISTER_METHOD(0x016023C0, bool, SteamEncryptedAppTicket_BIsTicketForApp, (Byte__Array * rgubTicketDecrypted, uint32_t cubTicketDecrypted, AppId_t nAppID));
IL2CPP_REGISTER_METHOD(0x01602480, uint32_t, SteamEncryptedAppTicket_GetTicketIssueTime, (Byte__Array * rgubTicketDecrypted, uint32_t cubTicketDecrypted));
IL2CPP_REGISTER_METHOD(0x01602530, void, SteamEncryptedAppTicket_GetTicketSteamID, (Byte__Array * rgubTicketDecrypted, uint32_t cubTicketDecrypted, CSteamID * psteamID));
IL2CPP_REGISTER_METHOD(0x016025F0, uint32_t, SteamEncryptedAppTicket_GetTicketAppID, (Byte__Array * rgubTicketDecrypted, uint32_t cubTicketDecrypted));
IL2CPP_REGISTER_METHOD(0x016026A0, bool, SteamEncryptedAppTicket_BUserOwnsAppInTicket, (Byte__Array * rgubTicketDecrypted, uint32_t cubTicketDecrypted, AppId_t nAppID));
IL2CPP_REGISTER_METHOD(0x01602760, bool, SteamEncryptedAppTicket_BUserIsVacBanned, (Byte__Array * rgubTicketDecrypted, uint32_t cubTicketDecrypted));
IL2CPP_REGISTER_METHOD(0x01602820, void *, SteamEncryptedAppTicket_GetUserVariableData, (Byte__Array * rgubTicketDecrypted, uint32_t cubTicketDecrypted, uint32_t * pcubUserData));
IL2CPP_REGISTER_METHOD(0x016028E0, bool, SteamEncryptedAppTicket_BIsTicketSigned, (Byte__Array * rgubTicketDecrypted, uint32_t cubTicketDecrypted, Byte__Array * pubRSAKey, uint32_t cubRSAKey));
IL2CPP_REGISTER_METHOD(0x016029C0, uint32_t, ISteamAppList_GetNumInstalledApps, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01602A60, uint32_t, ISteamAppList_GetInstalledApps, (void * instancePtr, AppId_t__Array * pvecAppID, uint32_t unMaxAppIDs));
IL2CPP_REGISTER_METHOD(0x01602B20, int32_t, ISteamAppList_GetAppName, (void * instancePtr, AppId_t nAppID, void * pchName, int32_t cchNameMax));
IL2CPP_REGISTER_METHOD(0x01602BE0, int32_t, ISteamAppList_GetAppInstallDir, (void * instancePtr, AppId_t nAppID, void * pchDirectory, int32_t cchNameMax));
IL2CPP_REGISTER_METHOD(0x01602CA0, int32_t, ISteamAppList_GetAppBuildId, (void * instancePtr, AppId_t nAppID));
IL2CPP_REGISTER_METHOD(0x01602D50, bool, ISteamApps_BIsSubscribed, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01602DF0, bool, ISteamApps_BIsLowViolence, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01602E90, bool, ISteamApps_BIsCybercafe, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01602F30, bool, ISteamApps_BIsVACBanned, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01602FD0, void *, ISteamApps_GetCurrentGameLanguage, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01603070, void *, ISteamApps_GetAvailableGameLanguages, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01603110, bool, ISteamApps_BIsSubscribedApp, (void * instancePtr, AppId_t appID));
IL2CPP_REGISTER_METHOD(0x016031C0, bool, ISteamApps_BIsDlcInstalled, (void * instancePtr, AppId_t appID));
IL2CPP_REGISTER_METHOD(0x01603270, uint32_t, ISteamApps_GetEarliestPurchaseUnixTime, (void * instancePtr, AppId_t nAppID));
IL2CPP_REGISTER_METHOD(0x01603320, bool, ISteamApps_BIsSubscribedFromFreeWeekend, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016033C0, int32_t, ISteamApps_GetDLCCount, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01603460, bool, ISteamApps_BGetDLCDataByIndex, (void * instancePtr, int32_t iDLC, AppId_t * pAppID, bool * pbAvailable, void * pchName, int32_t cchNameBufferSize));
IL2CPP_REGISTER_METHOD(0x01603560, void, ISteamApps_InstallDLC, (void * instancePtr, AppId_t nAppID));
IL2CPP_REGISTER_METHOD(0x01603610, void, ISteamApps_UninstallDLC, (void * instancePtr, AppId_t nAppID));
IL2CPP_REGISTER_METHOD(0x016036C0, void, ISteamApps_RequestAppProofOfPurchaseKey, (void * instancePtr, AppId_t nAppID));
IL2CPP_REGISTER_METHOD(0x01603770, bool, ISteamApps_GetCurrentBetaName, (void * instancePtr, void * pchName, int32_t cchNameBufferSize));
IL2CPP_REGISTER_METHOD(0x01603830, bool, ISteamApps_MarkContentCorrupt, (void * instancePtr, bool bMissingFilesOnly));
IL2CPP_REGISTER_METHOD(0x016038E0, uint32_t, ISteamApps_GetInstalledDepots, (void * instancePtr, AppId_t appID, DepotId_t__Array * pvecDepots, uint32_t cMaxDepots));
IL2CPP_REGISTER_METHOD(0x016039B0, uint32_t, ISteamApps_GetAppInstallDir, (void * instancePtr, AppId_t appID, void * pchFolder, uint32_t cchFolderBufferSize));
IL2CPP_REGISTER_METHOD(0x01603A70, bool, ISteamApps_BIsAppInstalled, (void * instancePtr, AppId_t appID));
IL2CPP_REGISTER_METHOD(0x01603B20, uint64_t, ISteamApps_GetAppOwner, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01603BC0, void *, ISteamApps_GetLaunchQueryParam, (void * instancePtr, InteropHelp_UTF8StringHandle * pchKey));
IL2CPP_REGISTER_METHOD(0x01603CC0, bool, ISteamApps_GetDlcDownloadProgress, (void * instancePtr, AppId_t nAppID, uint64_t * punBytesDownloaded, uint64_t * punBytesTotal));
IL2CPP_REGISTER_METHOD(0x01603D90, int32_t, ISteamApps_GetAppBuildId, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01603E30, void, ISteamApps_RequestAllProofOfPurchaseKeys, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01603ED0, uint64_t, ISteamApps_GetFileDetails, (void * instancePtr, InteropHelp_UTF8StringHandle * pszFileName));
IL2CPP_REGISTER_METHOD(0x01603FD0, int32_t, ISteamApps_GetLaunchCommandLine, (void * instancePtr, void * pszCommandLine, int32_t cubCommandLine));
IL2CPP_REGISTER_METHOD(0x01604080, bool, ISteamApps_BIsSubscribedFromFamilySharing, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01604120, int32_t, ISteamClient_CreateSteamPipe, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016041C0, bool, ISteamClient_BReleaseSteamPipe, (void * instancePtr, HSteamPipe hSteamPipe));
IL2CPP_REGISTER_METHOD(0x01604270, int32_t, ISteamClient_ConnectToGlobalUser, (void * instancePtr, HSteamPipe hSteamPipe));
IL2CPP_REGISTER_METHOD(0x01604320, int32_t, ISteamClient_CreateLocalUser, (void * instancePtr, HSteamPipe * phSteamPipe, EAccountType__Enum eAccountType));
IL2CPP_REGISTER_METHOD(0x016043D0, void, ISteamClient_ReleaseUser, (void * instancePtr, HSteamPipe hSteamPipe, HSteamUser hUser));
IL2CPP_REGISTER_METHOD(0x01604480, void *, ISteamClient_GetISteamUser, (void * instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01604590, void *, ISteamClient_GetISteamGameServer, (void * instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x016046A0, void, ISteamClient_SetLocalIPBinding, (void * instancePtr, uint32_t unIP, uint16_t usPort));
IL2CPP_REGISTER_METHOD(0x01604750, void *, ISteamClient_GetISteamFriends, (void * instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01604860, void *, ISteamClient_GetISteamUtils, (void * instancePtr, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01604960, void *, ISteamClient_GetISteamMatchmaking, (void * instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01604A70, void *, ISteamClient_GetISteamMatchmakingServers, (void * instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01604B80, void *, ISteamClient_GetISteamGenericInterface, (void * instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01604C90, void *, ISteamClient_GetISteamUserStats, (void * instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01604DA0, void *, ISteamClient_GetISteamGameServerStats, (void * instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01604EB0, void *, ISteamClient_GetISteamApps, (void * instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01604FC0, void *, ISteamClient_GetISteamNetworking, (void * instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x016050D0, void *, ISteamClient_GetISteamRemoteStorage, (void * instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x016051E0, void *, ISteamClient_GetISteamScreenshots, (void * instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x016052F0, void *, ISteamClient_GetISteamGameSearch, (void * instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01605400, uint32_t, ISteamClient_GetIPCCallCount, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016054A0, void, ISteamClient_SetWarningMessageHook, (void * instancePtr, SteamAPIWarningMessageHook_t * pFunction));
IL2CPP_REGISTER_METHOD(0x01605550, bool, ISteamClient_BShutdownIfAllPipesClosed, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016055F0, void *, ISteamClient_GetISteamHTTP, (void * instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01605700, void *, ISteamClient_GetISteamController, (void * instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01605810, void *, ISteamClient_GetISteamUGC, (void * instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01605920, void *, ISteamClient_GetISteamAppList, (void * instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01605A30, void *, ISteamClient_GetISteamMusic, (void * instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01605B40, void *, ISteamClient_GetISteamMusicRemote, (void * instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01605C50, void *, ISteamClient_GetISteamHTMLSurface, (void * instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01605D60, void *, ISteamClient_GetISteamInventory, (void * instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01605E70, void *, ISteamClient_GetISteamVideo, (void * instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01605F80, void *, ISteamClient_GetISteamParentalSettings, (void * instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x01606090, void *, ISteamClient_GetISteamInput, (void * instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x016061A0, void *, ISteamClient_GetISteamParties, (void * instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x016062B0, void *, ISteamClient_GetISteamRemotePlay, (void * instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp_UTF8StringHandle * pchVersion));
IL2CPP_REGISTER_METHOD(0x016063C0, bool, ISteamController_Init, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01606460, bool, ISteamController_Shutdown, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01606500, void, ISteamController_RunFrame, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016065A0, int32_t, ISteamController_GetConnectedControllers, (void * instancePtr, ControllerHandle_t__Array * handlesOut));
IL2CPP_REGISTER_METHOD(0x01606650, uint64_t, ISteamController_GetActionSetHandle, (void * instancePtr, InteropHelp_UTF8StringHandle * pszActionSetName));
IL2CPP_REGISTER_METHOD(0x01606750, void, ISteamController_ActivateActionSet, (void * instancePtr, ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetHandle));
IL2CPP_REGISTER_METHOD(0x01606800, uint64_t, ISteamController_GetCurrentActionSet, (void * instancePtr, ControllerHandle_t controllerHandle));
IL2CPP_REGISTER_METHOD(0x016068B0, void, ISteamController_ActivateActionSetLayer, (void * instancePtr, ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetLayerHandle));
IL2CPP_REGISTER_METHOD(0x01606960, void, ISteamController_DeactivateActionSetLayer, (void * instancePtr, ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetLayerHandle));
IL2CPP_REGISTER_METHOD(0x01606A10, void, ISteamController_DeactivateAllActionSetLayers, (void * instancePtr, ControllerHandle_t controllerHandle));
IL2CPP_REGISTER_METHOD(0x01606AC0, int32_t, ISteamController_GetActiveActionSetLayers, (void * instancePtr, ControllerHandle_t controllerHandle, ControllerActionSetHandle_t__Array * handlesOut));
IL2CPP_REGISTER_METHOD(0x01606B80, uint64_t, ISteamController_GetDigitalActionHandle, (void * instancePtr, InteropHelp_UTF8StringHandle * pszActionName));
IL2CPP_REGISTER_METHOD(0x01606C80, ControllerDigitalActionData_t, ISteamController_GetDigitalActionData, (void * instancePtr, ControllerHandle_t controllerHandle, ControllerDigitalActionHandle_t digitalActionHandle));
IL2CPP_REGISTER_METHOD(0x01606D30, int32_t, ISteamController_GetDigitalActionOrigins, (void * instancePtr, ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetHandle, ControllerDigitalActionHandle_t digitalActionHandle, EControllerActionOrigin__Enum__Array * originsOut));
IL2CPP_REGISTER_METHOD(0x01606E20, uint64_t, ISteamController_GetAnalogActionHandle, (void * instancePtr, InteropHelp_UTF8StringHandle * pszActionName));
IL2CPP_REGISTER_METHOD(0x01606F20, ControllerAnalogActionData_t, ISteamController_GetAnalogActionData, (void * instancePtr, ControllerHandle_t controllerHandle, ControllerAnalogActionHandle_t analogActionHandle));
IL2CPP_REGISTER_METHOD(0x01607000, int32_t, ISteamController_GetAnalogActionOrigins, (void * instancePtr, ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetHandle, ControllerAnalogActionHandle_t analogActionHandle, EControllerActionOrigin__Enum__Array * originsOut));
IL2CPP_REGISTER_METHOD(0x016070F0, void *, ISteamController_GetGlyphForActionOrigin, (void * instancePtr, EControllerActionOrigin__Enum eOrigin));
IL2CPP_REGISTER_METHOD(0x016071A0, void *, ISteamController_GetStringForActionOrigin, (void * instancePtr, EControllerActionOrigin__Enum eOrigin));
IL2CPP_REGISTER_METHOD(0x01607250, void, ISteamController_StopAnalogActionMomentum, (void * instancePtr, ControllerHandle_t controllerHandle, ControllerAnalogActionHandle_t eAction));
IL2CPP_REGISTER_METHOD(0x01607300, ControllerMotionData_t, ISteamController_GetMotionData, (void * instancePtr, ControllerHandle_t controllerHandle));
IL2CPP_REGISTER_METHOD(0x016073D0, void, ISteamController_TriggerHapticPulse, (void * instancePtr, ControllerHandle_t controllerHandle, ESteamControllerPad__Enum eTargetPad, uint16_t usDurationMicroSec));
IL2CPP_REGISTER_METHOD(0x016074A0, void, ISteamController_TriggerRepeatedHapticPulse, (void * instancePtr, ControllerHandle_t controllerHandle, ESteamControllerPad__Enum eTargetPad, uint16_t usDurationMicroSec, uint16_t usOffMicroSec, uint16_t unRepeat, uint32_t nFlags));
IL2CPP_REGISTER_METHOD(0x01607590, void, ISteamController_TriggerVibration, (void * instancePtr, ControllerHandle_t controllerHandle, uint16_t usLeftSpeed, uint16_t usRightSpeed));
IL2CPP_REGISTER_METHOD(0x01607660, void, ISteamController_SetLEDColor, (void * instancePtr, ControllerHandle_t controllerHandle, uint8_t nColorR, uint8_t nColorG, uint8_t nColorB, uint32_t nFlags));
IL2CPP_REGISTER_METHOD(0x01607740, bool, ISteamController_ShowBindingPanel, (void * instancePtr, ControllerHandle_t controllerHandle));
IL2CPP_REGISTER_METHOD(0x016077F0, ESteamInputType__Enum, ISteamController_GetInputTypeForHandle, (void * instancePtr, ControllerHandle_t controllerHandle));
IL2CPP_REGISTER_METHOD(0x016078A0, uint64_t, ISteamController_GetControllerForGamepadIndex, (void * instancePtr, int32_t nIndex));
IL2CPP_REGISTER_METHOD(0x01607950, int32_t, ISteamController_GetGamepadIndexForController, (void * instancePtr, ControllerHandle_t ulControllerHandle));
IL2CPP_REGISTER_METHOD(0x01607A00, void *, ISteamController_GetStringForXboxOrigin, (void * instancePtr, EXboxOrigin__Enum eOrigin));
IL2CPP_REGISTER_METHOD(0x01607AB0, void *, ISteamController_GetGlyphForXboxOrigin, (void * instancePtr, EXboxOrigin__Enum eOrigin));
IL2CPP_REGISTER_METHOD(0x01607B60, EControllerActionOrigin__Enum, ISteamController_GetActionOriginFromXboxOrigin, (void * instancePtr, ControllerHandle_t controllerHandle, EXboxOrigin__Enum eOrigin));
IL2CPP_REGISTER_METHOD(0x01607C10, EControllerActionOrigin__Enum, ISteamController_TranslateActionOrigin, (void * instancePtr, ESteamInputType__Enum eDestinationInputType, EControllerActionOrigin__Enum eSourceOrigin));
IL2CPP_REGISTER_METHOD(0x01607CC0, bool, ISteamController_GetControllerBindingRevision, (void * instancePtr, ControllerHandle_t controllerHandle, int32_t * pMajor, int32_t * pMinor));
IL2CPP_REGISTER_METHOD(0x01607D90, void *, ISteamFriends_GetPersonaName, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01607E30, uint64_t, ISteamFriends_SetPersonaName, (void * instancePtr, InteropHelp_UTF8StringHandle * pchPersonaName));
IL2CPP_REGISTER_METHOD(0x01607F30, EPersonaState__Enum, ISteamFriends_GetPersonaState, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01607FD0, int32_t, ISteamFriends_GetFriendCount, (void * instancePtr, EFriendFlags__Enum iFriendFlags));
IL2CPP_REGISTER_METHOD(0x01608080, uint64_t, ISteamFriends_GetFriendByIndex, (void * instancePtr, int32_t iFriend, EFriendFlags__Enum iFriendFlags));
IL2CPP_REGISTER_METHOD(0x01608130, EFriendRelationship__Enum, ISteamFriends_GetFriendRelationship, (void * instancePtr, CSteamID steamIDFriend));
IL2CPP_REGISTER_METHOD(0x016081E0, EPersonaState__Enum, ISteamFriends_GetFriendPersonaState, (void * instancePtr, CSteamID steamIDFriend));
IL2CPP_REGISTER_METHOD(0x01608290, void *, ISteamFriends_GetFriendPersonaName, (void * instancePtr, CSteamID steamIDFriend));
IL2CPP_REGISTER_METHOD(0x01608340, bool, ISteamFriends_GetFriendGamePlayed, (void * instancePtr, CSteamID steamIDFriend, FriendGameInfo_t * pFriendGameInfo));
IL2CPP_REGISTER_METHOD(0x01608400, void *, ISteamFriends_GetFriendPersonaNameHistory, (void * instancePtr, CSteamID steamIDFriend, int32_t iPersonaName));
IL2CPP_REGISTER_METHOD(0x016084B0, int32_t, ISteamFriends_GetFriendSteamLevel, (void * instancePtr, CSteamID steamIDFriend));
IL2CPP_REGISTER_METHOD(0x01608560, void *, ISteamFriends_GetPlayerNickname, (void * instancePtr, CSteamID steamIDPlayer));
IL2CPP_REGISTER_METHOD(0x01608610, int32_t, ISteamFriends_GetFriendsGroupCount, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016086B0, int16_t, ISteamFriends_GetFriendsGroupIDByIndex, (void * instancePtr, int32_t iFG));
IL2CPP_REGISTER_METHOD(0x01608760, void *, ISteamFriends_GetFriendsGroupName, (void * instancePtr, FriendsGroupID_t friendsGroupID));
IL2CPP_REGISTER_METHOD(0x01608810, int32_t, ISteamFriends_GetFriendsGroupMembersCount, (void * instancePtr, FriendsGroupID_t friendsGroupID));
IL2CPP_REGISTER_METHOD(0x016088C0, void, ISteamFriends_GetFriendsGroupMembersList, (void * instancePtr, FriendsGroupID_t friendsGroupID, CSteamID__Array * pOutSteamIDMembers, int32_t nMembersCount));
IL2CPP_REGISTER_METHOD(0x01608990, bool, ISteamFriends_HasFriend, (void * instancePtr, CSteamID steamIDFriend, EFriendFlags__Enum iFriendFlags));
IL2CPP_REGISTER_METHOD(0x01608A50, int32_t, ISteamFriends_GetClanCount, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01608AF0, uint64_t, ISteamFriends_GetClanByIndex, (void * instancePtr, int32_t iClan));
IL2CPP_REGISTER_METHOD(0x01608BA0, void *, ISteamFriends_GetClanName, (void * instancePtr, CSteamID steamIDClan));
IL2CPP_REGISTER_METHOD(0x01608C50, void *, ISteamFriends_GetClanTag, (void * instancePtr, CSteamID steamIDClan));
IL2CPP_REGISTER_METHOD(0x01608D00, bool, ISteamFriends_GetClanActivityCounts, (void * instancePtr, CSteamID steamIDClan, int32_t * pnOnline, int32_t * pnInGame, int32_t * pnChatting));
IL2CPP_REGISTER_METHOD(0x01608DE0, uint64_t, ISteamFriends_DownloadClanActivityCounts, (void * instancePtr, CSteamID__Array * psteamIDClans, int32_t cClansToRequest));
IL2CPP_REGISTER_METHOD(0x01608EA0, int32_t, ISteamFriends_GetFriendCountFromSource, (void * instancePtr, CSteamID steamIDSource));
IL2CPP_REGISTER_METHOD(0x01608F50, uint64_t, ISteamFriends_GetFriendFromSourceByIndex, (void * instancePtr, CSteamID steamIDSource, int32_t iFriend));
IL2CPP_REGISTER_METHOD(0x01609000, bool, ISteamFriends_IsUserInSource, (void * instancePtr, CSteamID steamIDUser, CSteamID steamIDSource));
IL2CPP_REGISTER_METHOD(0x016090C0, void, ISteamFriends_SetInGameVoiceSpeaking, (void * instancePtr, CSteamID steamIDUser, bool bSpeaking));
IL2CPP_REGISTER_METHOD(0x01609180, void, ISteamFriends_ActivateGameOverlay, (void * instancePtr, InteropHelp_UTF8StringHandle * pchDialog));
IL2CPP_REGISTER_METHOD(0x01609270, void, ISteamFriends_ActivateGameOverlayToUser, (void * instancePtr, InteropHelp_UTF8StringHandle * pchDialog, CSteamID steamID));
IL2CPP_REGISTER_METHOD(0x01609370, void, ISteamFriends_ActivateGameOverlayToWebPage, (void * instancePtr, InteropHelp_UTF8StringHandle * pchURL, EActivateGameOverlayToWebPageMode__Enum eMode));
IL2CPP_REGISTER_METHOD(0x01609470, void, ISteamFriends_ActivateGameOverlayToStore, (void * instancePtr, AppId_t nAppID, EOverlayToStoreFlag__Enum eFlag));
IL2CPP_REGISTER_METHOD(0x01609520, void, ISteamFriends_SetPlayedWith, (void * instancePtr, CSteamID steamIDUserPlayedWith));
IL2CPP_REGISTER_METHOD(0x016095D0, void, ISteamFriends_ActivateGameOverlayInviteDialog, (void * instancePtr, CSteamID steamIDLobby));
IL2CPP_REGISTER_METHOD(0x01609680, int32_t, ISteamFriends_GetSmallFriendAvatar, (void * instancePtr, CSteamID steamIDFriend));
IL2CPP_REGISTER_METHOD(0x01609730, int32_t, ISteamFriends_GetMediumFriendAvatar, (void * instancePtr, CSteamID steamIDFriend));
IL2CPP_REGISTER_METHOD(0x016097E0, int32_t, ISteamFriends_GetLargeFriendAvatar, (void * instancePtr, CSteamID steamIDFriend));
IL2CPP_REGISTER_METHOD(0x01609890, bool, ISteamFriends_RequestUserInformation, (void * instancePtr, CSteamID steamIDUser, bool bRequireNameOnly));
IL2CPP_REGISTER_METHOD(0x01609950, uint64_t, ISteamFriends_RequestClanOfficerList, (void * instancePtr, CSteamID steamIDClan));
IL2CPP_REGISTER_METHOD(0x01609A00, uint64_t, ISteamFriends_GetClanOwner, (void * instancePtr, CSteamID steamIDClan));
IL2CPP_REGISTER_METHOD(0x01609AB0, int32_t, ISteamFriends_GetClanOfficerCount, (void * instancePtr, CSteamID steamIDClan));
IL2CPP_REGISTER_METHOD(0x01609B60, uint64_t, ISteamFriends_GetClanOfficerByIndex, (void * instancePtr, CSteamID steamIDClan, int32_t iOfficer));
IL2CPP_REGISTER_METHOD(0x01609C10, uint32_t, ISteamFriends_GetUserRestrictions, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01609CB0, bool, ISteamFriends_SetRichPresence, (void * instancePtr, InteropHelp_UTF8StringHandle * pchKey, InteropHelp_UTF8StringHandle * pchValue));
IL2CPP_REGISTER_METHOD(0x01609E20, void, ISteamFriends_ClearRichPresence, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01609EC0, void *, ISteamFriends_GetFriendRichPresence, (void * instancePtr, CSteamID steamIDFriend, InteropHelp_UTF8StringHandle * pchKey));
IL2CPP_REGISTER_METHOD(0x01609FC0, int32_t, ISteamFriends_GetFriendRichPresenceKeyCount, (void * instancePtr, CSteamID steamIDFriend));
IL2CPP_REGISTER_METHOD(0x0160A070, void *, ISteamFriends_GetFriendRichPresenceKeyByIndex, (void * instancePtr, CSteamID steamIDFriend, int32_t iKey));
IL2CPP_REGISTER_METHOD(0x0160A120, void, ISteamFriends_RequestFriendRichPresence, (void * instancePtr, CSteamID steamIDFriend));
IL2CPP_REGISTER_METHOD(0x0160A1D0, bool, ISteamFriends_InviteUserToGame, (void * instancePtr, CSteamID steamIDFriend, InteropHelp_UTF8StringHandle * pchConnectString));
IL2CPP_REGISTER_METHOD(0x0160A2E0, int32_t, ISteamFriends_GetCoplayFriendCount, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0160A380, uint64_t, ISteamFriends_GetCoplayFriend, (void * instancePtr, int32_t iCoplayFriend));
IL2CPP_REGISTER_METHOD(0x0160A430, int32_t, ISteamFriends_GetFriendCoplayTime, (void * instancePtr, CSteamID steamIDFriend));
IL2CPP_REGISTER_METHOD(0x0160A4E0, uint32_t, ISteamFriends_GetFriendCoplayGame, (void * instancePtr, CSteamID steamIDFriend));
IL2CPP_REGISTER_METHOD(0x0160A590, uint64_t, ISteamFriends_JoinClanChatRoom, (void * instancePtr, CSteamID steamIDClan));
IL2CPP_REGISTER_METHOD(0x0160A640, bool, ISteamFriends_LeaveClanChatRoom, (void * instancePtr, CSteamID steamIDClan));
IL2CPP_REGISTER_METHOD(0x0160A6F0, int32_t, ISteamFriends_GetClanChatMemberCount, (void * instancePtr, CSteamID steamIDClan));
IL2CPP_REGISTER_METHOD(0x0160A7A0, uint64_t, ISteamFriends_GetChatMemberByIndex, (void * instancePtr, CSteamID steamIDClan, int32_t iUser));
IL2CPP_REGISTER_METHOD(0x0160A850, bool, ISteamFriends_SendClanChatMessage, (void * instancePtr, CSteamID steamIDClanChat, InteropHelp_UTF8StringHandle * pchText));
IL2CPP_REGISTER_METHOD(0x0160A960, int32_t, ISteamFriends_GetClanChatMessage, (void * instancePtr, CSteamID steamIDClanChat, int32_t iMessage, void * prgchText, int32_t cchTextMax, EChatEntryType__Enum * peChatEntryType, CSteamID * psteamidChatter));
IL2CPP_REGISTER_METHOD(0x0160AA30, bool, ISteamFriends_IsClanChatAdmin, (void * instancePtr, CSteamID steamIDClanChat, CSteamID steamIDUser));
IL2CPP_REGISTER_METHOD(0x0160AAF0, bool, ISteamFriends_IsClanChatWindowOpenInSteam, (void * instancePtr, CSteamID steamIDClanChat));
IL2CPP_REGISTER_METHOD(0x0160ABA0, bool, ISteamFriends_OpenClanChatWindowInSteam, (void * instancePtr, CSteamID steamIDClanChat));
IL2CPP_REGISTER_METHOD(0x0160AC50, bool, ISteamFriends_CloseClanChatWindowInSteam, (void * instancePtr, CSteamID steamIDClanChat));
IL2CPP_REGISTER_METHOD(0x0160AD00, bool, ISteamFriends_SetListenForFriendsMessages, (void * instancePtr, bool bInterceptEnabled));
IL2CPP_REGISTER_METHOD(0x0160ADB0, bool, ISteamFriends_ReplyToFriendMessage, (void * instancePtr, CSteamID steamIDFriend, InteropHelp_UTF8StringHandle * pchMsgToSend));
IL2CPP_REGISTER_METHOD(0x0160AEC0, int32_t, ISteamFriends_GetFriendMessage, (void * instancePtr, CSteamID steamIDFriend, int32_t iMessageID, void * pvData, int32_t cubData, EChatEntryType__Enum * peChatEntryType));
IL2CPP_REGISTER_METHOD(0x0160AF90, uint64_t, ISteamFriends_GetFollowerCount, (void * instancePtr, CSteamID steamID));
IL2CPP_REGISTER_METHOD(0x0160B040, uint64_t, ISteamFriends_IsFollowing, (void * instancePtr, CSteamID steamID));
IL2CPP_REGISTER_METHOD(0x0160B0F0, uint64_t, ISteamFriends_EnumerateFollowingList, (void * instancePtr, uint32_t unStartIndex));
IL2CPP_REGISTER_METHOD(0x0160B1A0, bool, ISteamFriends_IsClanPublic, (void * instancePtr, CSteamID steamIDClan));
IL2CPP_REGISTER_METHOD(0x0160B250, bool, ISteamFriends_IsClanOfficialGameGroup, (void * instancePtr, CSteamID steamIDClan));
IL2CPP_REGISTER_METHOD(0x0160B300, int32_t, ISteamFriends_GetNumChatsWithUnreadPriorityMessages, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0160B3A0, bool, ISteamGameServer_InitGameServer, (void * instancePtr, uint32_t unIP, uint16_t usGamePort, uint16_t usQueryPort, uint32_t unFlags, AppId_t nGameAppId, InteropHelp_UTF8StringHandle * pchVersionString));
IL2CPP_REGISTER_METHOD(0x0160B500, void, ISteamGameServer_SetProduct, (void * instancePtr, InteropHelp_UTF8StringHandle * pszProduct));
IL2CPP_REGISTER_METHOD(0x0160B5F0, void, ISteamGameServer_SetGameDescription, (void * instancePtr, InteropHelp_UTF8StringHandle * pszGameDescription));
IL2CPP_REGISTER_METHOD(0x0160B6E0, void, ISteamGameServer_SetModDir, (void * instancePtr, InteropHelp_UTF8StringHandle * pszModDir));
IL2CPP_REGISTER_METHOD(0x0160B7D0, void, ISteamGameServer_SetDedicatedServer, (void * instancePtr, bool bDedicated));
IL2CPP_REGISTER_METHOD(0x0160B880, void, ISteamGameServer_LogOn, (void * instancePtr, InteropHelp_UTF8StringHandle * pszToken));
IL2CPP_REGISTER_METHOD(0x0160B970, void, ISteamGameServer_LogOnAnonymous, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0160BA10, void, ISteamGameServer_LogOff, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0160BAB0, bool, ISteamGameServer_BLoggedOn, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0160BB50, bool, ISteamGameServer_BSecure, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0160BBF0, uint64_t, ISteamGameServer_GetSteamID, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0160BC90, bool, ISteamGameServer_WasRestartRequested, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0160BD30, void, ISteamGameServer_SetMaxPlayerCount, (void * instancePtr, int32_t cPlayersMax));
IL2CPP_REGISTER_METHOD(0x0160BDE0, void, ISteamGameServer_SetBotPlayerCount, (void * instancePtr, int32_t cBotplayers));
IL2CPP_REGISTER_METHOD(0x0160BE90, void, ISteamGameServer_SetServerName, (void * instancePtr, InteropHelp_UTF8StringHandle * pszServerName));
IL2CPP_REGISTER_METHOD(0x0160BF80, void, ISteamGameServer_SetMapName, (void * instancePtr, InteropHelp_UTF8StringHandle * pszMapName));
IL2CPP_REGISTER_METHOD(0x0160C070, void, ISteamGameServer_SetPasswordProtected, (void * instancePtr, bool bPasswordProtected));
IL2CPP_REGISTER_METHOD(0x0160C120, void, ISteamGameServer_SetSpectatorPort, (void * instancePtr, uint16_t unSpectatorPort));
IL2CPP_REGISTER_METHOD(0x0160C1D0, void, ISteamGameServer_SetSpectatorServerName, (void * instancePtr, InteropHelp_UTF8StringHandle * pszSpectatorServerName));
IL2CPP_REGISTER_METHOD(0x0160C2C0, void, ISteamGameServer_ClearAllKeyValues, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0160C360, void, ISteamGameServer_SetKeyValue, (void * instancePtr, InteropHelp_UTF8StringHandle * pKey, InteropHelp_UTF8StringHandle * pValue));
IL2CPP_REGISTER_METHOD(0x0160C4C0, void, ISteamGameServer_SetGameTags, (void * instancePtr, InteropHelp_UTF8StringHandle * pchGameTags));
IL2CPP_REGISTER_METHOD(0x0160C5B0, void, ISteamGameServer_SetGameData, (void * instancePtr, InteropHelp_UTF8StringHandle * pchGameData));
IL2CPP_REGISTER_METHOD(0x0160C6A0, void, ISteamGameServer_SetRegion, (void * instancePtr, InteropHelp_UTF8StringHandle * pszRegion));
IL2CPP_REGISTER_METHOD(0x0160C790, bool, ISteamGameServer_SendUserConnectAndAuthenticate, (void * instancePtr, uint32_t unIPClient, Byte__Array * pvAuthBlob, uint32_t cubAuthBlobSize, CSteamID * pSteamIDUser));
IL2CPP_REGISTER_METHOD(0x0160C870, uint64_t, ISteamGameServer_CreateUnauthenticatedUserConnection, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0160C910, void, ISteamGameServer_SendUserDisconnect, (void * instancePtr, CSteamID steamIDUser));
IL2CPP_REGISTER_METHOD(0x0160C9C0, bool, ISteamGameServer_BUpdateUserData, (void * instancePtr, CSteamID steamIDUser, InteropHelp_UTF8StringHandle * pchPlayerName, uint32_t uScore));
IL2CPP_REGISTER_METHOD(0x0160CAE0, uint32_t, ISteamGameServer_GetAuthSessionTicket, (void * instancePtr, Byte__Array * pTicket, int32_t cbMaxTicket, uint32_t * pcbTicket));
IL2CPP_REGISTER_METHOD(0x0160CBB0, EBeginAuthSessionResult__Enum, ISteamGameServer_BeginAuthSession, (void * instancePtr, Byte__Array * pAuthTicket, int32_t cbAuthTicket, CSteamID steamID));
IL2CPP_REGISTER_METHOD(0x0160CC80, void, ISteamGameServer_EndAuthSession, (void * instancePtr, CSteamID steamID));
IL2CPP_REGISTER_METHOD(0x0160CD30, void, ISteamGameServer_CancelAuthTicket, (void * instancePtr, HAuthTicket hAuthTicket));
IL2CPP_REGISTER_METHOD(0x0160CDE0, EUserHasLicenseForAppResult__Enum, ISteamGameServer_UserHasLicenseForApp, (void * instancePtr, CSteamID steamID, AppId_t appID));
IL2CPP_REGISTER_METHOD(0x0160CE90, bool, ISteamGameServer_RequestUserGroupStatus, (void * instancePtr, CSteamID steamIDUser, CSteamID steamIDGroup));
IL2CPP_REGISTER_METHOD(0x0160CF50, void, ISteamGameServer_GetGameplayStats, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0160CFF0, uint64_t, ISteamGameServer_GetServerReputation, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0160D090, uint32_t, ISteamGameServer_GetPublicIP, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0160D130, bool, ISteamGameServer_HandleIncomingPacket, (void * instancePtr, Byte__Array * pData, int32_t cbData, uint32_t srcIP, uint16_t srcPort));
IL2CPP_REGISTER_METHOD(0x0160D220, int32_t, ISteamGameServer_GetNextOutgoingPacket, (void * instancePtr, Byte__Array * pOut, int32_t cbMaxOut, uint32_t * pNetAdr, uint16_t * pPort));
IL2CPP_REGISTER_METHOD(0x0160D2F0, void, ISteamGameServer_EnableHeartbeats, (void * instancePtr, bool bActive));
IL2CPP_REGISTER_METHOD(0x0160D3A0, void, ISteamGameServer_SetHeartbeatInterval, (void * instancePtr, int32_t iHeartbeatInterval));
IL2CPP_REGISTER_METHOD(0x0160D450, void, ISteamGameServer_ForceHeartbeat, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0160D4F0, uint64_t, ISteamGameServer_AssociateWithClan, (void * instancePtr, CSteamID steamIDClan));
IL2CPP_REGISTER_METHOD(0x0160D5A0, uint64_t, ISteamGameServer_ComputeNewPlayerCompatibility, (void * instancePtr, CSteamID steamIDNewPlayer));
IL2CPP_REGISTER_METHOD(0x0160D650, uint64_t, ISteamGameServerStats_RequestUserStats, (void * instancePtr, CSteamID steamIDUser));
IL2CPP_REGISTER_METHOD(0x0160D700, bool, ISteamGameServerStats_GetUserStat, (void * instancePtr, CSteamID steamIDUser, InteropHelp_UTF8StringHandle * pchName, int32_t * pData));
IL2CPP_REGISTER_METHOD(0x0160D820, bool, ISteamGameServerStats_GetUserStat0, (void * instancePtr, CSteamID steamIDUser, InteropHelp_UTF8StringHandle * pchName, float * pData));
IL2CPP_REGISTER_METHOD(0x0160D940, bool, ISteamGameServerStats_GetUserAchievement, (void * instancePtr, CSteamID steamIDUser, InteropHelp_UTF8StringHandle * pchName, bool * pbAchieved));
IL2CPP_REGISTER_METHOD(0x0160DA70, bool, ISteamGameServerStats_SetUserStat, (void * instancePtr, CSteamID steamIDUser, InteropHelp_UTF8StringHandle * pchName, int32_t nData));
IL2CPP_REGISTER_METHOD(0x0160DB90, bool, ISteamGameServerStats_SetUserStat0, (void * instancePtr, CSteamID steamIDUser, InteropHelp_UTF8StringHandle * pchName, float fData));
IL2CPP_REGISTER_METHOD(0x0160DCB0, bool, ISteamGameServerStats_UpdateUserAvgRateStat, (void * instancePtr, CSteamID steamIDUser, InteropHelp_UTF8StringHandle * pchName, float flCountThisSession, double dSessionLength));
IL2CPP_REGISTER_METHOD(0x0160DDE0, bool, ISteamGameServerStats_SetUserAchievement, (void * instancePtr, CSteamID steamIDUser, InteropHelp_UTF8StringHandle * pchName));
IL2CPP_REGISTER_METHOD(0x0160DEF0, bool, ISteamGameServerStats_ClearUserAchievement, (void * instancePtr, CSteamID steamIDUser, InteropHelp_UTF8StringHandle * pchName));
IL2CPP_REGISTER_METHOD(0x0160E000, uint64_t, ISteamGameServerStats_StoreUserStats, (void * instancePtr, CSteamID steamIDUser));
IL2CPP_REGISTER_METHOD(0x0160E0B0, bool, ISteamHTMLSurface_Init, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0160E150, bool, ISteamHTMLSurface_Shutdown, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0160E1F0, uint64_t, ISteamHTMLSurface_CreateBrowser, (void * instancePtr, InteropHelp_UTF8StringHandle * pchUserAgent, InteropHelp_UTF8StringHandle * pchUserCSS));
IL2CPP_REGISTER_METHOD(0x0160E360, void, ISteamHTMLSurface_RemoveBrowser, (void * instancePtr, HHTMLBrowser unBrowserHandle));
IL2CPP_REGISTER_METHOD(0x0160E410, void, ISteamHTMLSurface_LoadURL, (void * instancePtr, HHTMLBrowser unBrowserHandle, InteropHelp_UTF8StringHandle * pchURL, InteropHelp_UTF8StringHandle * pchPostData));
IL2CPP_REGISTER_METHOD(0x0160E580, void, ISteamHTMLSurface_SetSize, (void * instancePtr, HHTMLBrowser unBrowserHandle, uint32_t unWidth, uint32_t unHeight));
IL2CPP_REGISTER_METHOD(0x0160E640, void, ISteamHTMLSurface_StopLoad, (void * instancePtr, HHTMLBrowser unBrowserHandle));
IL2CPP_REGISTER_METHOD(0x0160E6F0, void, ISteamHTMLSurface_Reload, (void * instancePtr, HHTMLBrowser unBrowserHandle));
IL2CPP_REGISTER_METHOD(0x0160E7A0, void, ISteamHTMLSurface_GoBack, (void * instancePtr, HHTMLBrowser unBrowserHandle));
IL2CPP_REGISTER_METHOD(0x0160E850, void, ISteamHTMLSurface_GoForward, (void * instancePtr, HHTMLBrowser unBrowserHandle));
IL2CPP_REGISTER_METHOD(0x0160E900, void, ISteamHTMLSurface_AddHeader, (void * instancePtr, HHTMLBrowser unBrowserHandle, InteropHelp_UTF8StringHandle * pchKey, InteropHelp_UTF8StringHandle * pchValue));
IL2CPP_REGISTER_METHOD(0x0160EA70, void, ISteamHTMLSurface_ExecuteJavascript, (void * instancePtr, HHTMLBrowser unBrowserHandle, InteropHelp_UTF8StringHandle * pchScript));
IL2CPP_REGISTER_METHOD(0x0160EB70, void, ISteamHTMLSurface_MouseUp, (void * instancePtr, HHTMLBrowser unBrowserHandle, EHTMLMouseButton__Enum eMouseButton));
IL2CPP_REGISTER_METHOD(0x0160EC20, void, ISteamHTMLSurface_MouseDown, (void * instancePtr, HHTMLBrowser unBrowserHandle, EHTMLMouseButton__Enum eMouseButton));
IL2CPP_REGISTER_METHOD(0x0160ECD0, void, ISteamHTMLSurface_MouseDoubleClick, (void * instancePtr, HHTMLBrowser unBrowserHandle, EHTMLMouseButton__Enum eMouseButton));
IL2CPP_REGISTER_METHOD(0x0160ED80, void, ISteamHTMLSurface_MouseMove, (void * instancePtr, HHTMLBrowser unBrowserHandle, int32_t x, int32_t y));
IL2CPP_REGISTER_METHOD(0x0160EE40, void, ISteamHTMLSurface_MouseWheel, (void * instancePtr, HHTMLBrowser unBrowserHandle, int32_t nDelta));
IL2CPP_REGISTER_METHOD(0x0160EEF0, void, ISteamHTMLSurface_KeyDown, (void * instancePtr, HHTMLBrowser unBrowserHandle, uint32_t nNativeKeyCode, EHTMLKeyModifiers__Enum eHTMLKeyModifiers, bool bIsSystemKey));
IL2CPP_REGISTER_METHOD(0x0160EFD0, void, ISteamHTMLSurface_KeyUp, (void * instancePtr, HHTMLBrowser unBrowserHandle, uint32_t nNativeKeyCode, EHTMLKeyModifiers__Enum eHTMLKeyModifiers));
IL2CPP_REGISTER_METHOD(0x0160F090, void, ISteamHTMLSurface_KeyChar, (void * instancePtr, HHTMLBrowser unBrowserHandle, uint32_t cUnicodeChar, EHTMLKeyModifiers__Enum eHTMLKeyModifiers));
IL2CPP_REGISTER_METHOD(0x0160F150, void, ISteamHTMLSurface_SetHorizontalScroll, (void * instancePtr, HHTMLBrowser unBrowserHandle, uint32_t nAbsolutePixelScroll));
IL2CPP_REGISTER_METHOD(0x0160F200, void, ISteamHTMLSurface_SetVerticalScroll, (void * instancePtr, HHTMLBrowser unBrowserHandle, uint32_t nAbsolutePixelScroll));
IL2CPP_REGISTER_METHOD(0x0160F2B0, void, ISteamHTMLSurface_SetKeyFocus, (void * instancePtr, HHTMLBrowser unBrowserHandle, bool bHasKeyFocus));
IL2CPP_REGISTER_METHOD(0x0160F360, void, ISteamHTMLSurface_ViewSource, (void * instancePtr, HHTMLBrowser unBrowserHandle));
IL2CPP_REGISTER_METHOD(0x0160F410, void, ISteamHTMLSurface_CopyToClipboard, (void * instancePtr, HHTMLBrowser unBrowserHandle));
IL2CPP_REGISTER_METHOD(0x0160F4C0, void, ISteamHTMLSurface_PasteFromClipboard, (void * instancePtr, HHTMLBrowser unBrowserHandle));
IL2CPP_REGISTER_METHOD(0x0160F570, void, ISteamHTMLSurface_Find, (void * instancePtr, HHTMLBrowser unBrowserHandle, InteropHelp_UTF8StringHandle * pchSearchStr, bool bCurrentlyInFind, bool bReverse));
IL2CPP_REGISTER_METHOD(0x0160F690, void, ISteamHTMLSurface_StopFind, (void * instancePtr, HHTMLBrowser unBrowserHandle));
IL2CPP_REGISTER_METHOD(0x0160F740, void, ISteamHTMLSurface_GetLinkAtPosition, (void * instancePtr, HHTMLBrowser unBrowserHandle, int32_t x, int32_t y));
IL2CPP_REGISTER_METHOD(0x0160F800, void, ISteamHTMLSurface_SetCookie, (void * instancePtr, InteropHelp_UTF8StringHandle * pchHostname, InteropHelp_UTF8StringHandle * pchKey, InteropHelp_UTF8StringHandle * pchValue, InteropHelp_UTF8StringHandle * pchPath, uint32_t nExpires, bool bSecure, bool bHTTPOnly));
IL2CPP_REGISTER_METHOD(0x0160FA70, void, ISteamHTMLSurface_SetPageScaleFactor, (void * instancePtr, HHTMLBrowser unBrowserHandle, float flZoom, int32_t nPointX, int32_t nPointY));
IL2CPP_REGISTER_METHOD(0x0160FB40, void, ISteamHTMLSurface_SetBackgroundMode, (void * instancePtr, HHTMLBrowser unBrowserHandle, bool bBackgroundMode));
IL2CPP_REGISTER_METHOD(0x0160FBF0, void, ISteamHTMLSurface_SetDPIScalingFactor, (void * instancePtr, HHTMLBrowser unBrowserHandle, float flDPIScaling));
IL2CPP_REGISTER_METHOD(0x0160FCB0, void, ISteamHTMLSurface_OpenDeveloperTools, (void * instancePtr, HHTMLBrowser unBrowserHandle));
IL2CPP_REGISTER_METHOD(0x0160FD60, void, ISteamHTMLSurface_AllowStartRequest, (void * instancePtr, HHTMLBrowser unBrowserHandle, bool bAllowed));
IL2CPP_REGISTER_METHOD(0x0160FE10, void, ISteamHTMLSurface_JSDialogResponse, (void * instancePtr, HHTMLBrowser unBrowserHandle, bool bResult));
IL2CPP_REGISTER_METHOD(0x0160FEC0, void, ISteamHTMLSurface_FileLoadDialogResponse, (void * instancePtr, HHTMLBrowser unBrowserHandle, void * pchSelectedFiles));
IL2CPP_REGISTER_METHOD(0x0160FF70, uint32_t, ISteamHTTP_CreateHTTPRequest, (void * instancePtr, EHTTPMethod__Enum eHTTPRequestMethod, InteropHelp_UTF8StringHandle * pchAbsoluteURL));
IL2CPP_REGISTER_METHOD(0x01610070, bool, ISteamHTTP_SetHTTPRequestContextValue, (void * instancePtr, HTTPRequestHandle hRequest, uint64_t ulContextValue));
IL2CPP_REGISTER_METHOD(0x01610130, bool, ISteamHTTP_SetHTTPRequestNetworkActivityTimeout, (void * instancePtr, HTTPRequestHandle hRequest, uint32_t unTimeoutSeconds));
IL2CPP_REGISTER_METHOD(0x016101F0, bool, ISteamHTTP_SetHTTPRequestHeaderValue, (void * instancePtr, HTTPRequestHandle hRequest, InteropHelp_UTF8StringHandle * pchHeaderName, InteropHelp_UTF8StringHandle * pchHeaderValue));
IL2CPP_REGISTER_METHOD(0x01610370, bool, ISteamHTTP_SetHTTPRequestGetOrPostParameter, (void * instancePtr, HTTPRequestHandle hRequest, InteropHelp_UTF8StringHandle * pchParamName, InteropHelp_UTF8StringHandle * pchParamValue));
IL2CPP_REGISTER_METHOD(0x016104F0, bool, ISteamHTTP_SendHTTPRequest, (void * instancePtr, HTTPRequestHandle hRequest, SteamAPICall_t * pCallHandle));
IL2CPP_REGISTER_METHOD(0x016105B0, bool, ISteamHTTP_SendHTTPRequestAndStreamResponse, (void * instancePtr, HTTPRequestHandle hRequest, SteamAPICall_t * pCallHandle));
IL2CPP_REGISTER_METHOD(0x01610670, bool, ISteamHTTP_DeferHTTPRequest, (void * instancePtr, HTTPRequestHandle hRequest));
IL2CPP_REGISTER_METHOD(0x01610720, bool, ISteamHTTP_PrioritizeHTTPRequest, (void * instancePtr, HTTPRequestHandle hRequest));
IL2CPP_REGISTER_METHOD(0x016107D0, bool, ISteamHTTP_GetHTTPResponseHeaderSize, (void * instancePtr, HTTPRequestHandle hRequest, InteropHelp_UTF8StringHandle * pchHeaderName, uint32_t * unResponseHeaderSize));
IL2CPP_REGISTER_METHOD(0x016108F0, bool, ISteamHTTP_GetHTTPResponseHeaderValue, (void * instancePtr, HTTPRequestHandle hRequest, InteropHelp_UTF8StringHandle * pchHeaderName, Byte__Array * pHeaderValueBuffer, uint32_t unBufferSize));
IL2CPP_REGISTER_METHOD(0x01610A20, bool, ISteamHTTP_GetHTTPResponseBodySize, (void * instancePtr, HTTPRequestHandle hRequest, uint32_t * unBodySize));
IL2CPP_REGISTER_METHOD(0x01610AE0, bool, ISteamHTTP_GetHTTPResponseBodyData, (void * instancePtr, HTTPRequestHandle hRequest, Byte__Array * pBodyDataBuffer, uint32_t unBufferSize));
IL2CPP_REGISTER_METHOD(0x01610BB0, bool, ISteamHTTP_GetHTTPStreamingResponseBodyData, (void * instancePtr, HTTPRequestHandle hRequest, uint32_t cOffset, Byte__Array * pBodyDataBuffer, uint32_t unBufferSize));
IL2CPP_REGISTER_METHOD(0x01610C90, bool, ISteamHTTP_ReleaseHTTPRequest, (void * instancePtr, HTTPRequestHandle hRequest));
IL2CPP_REGISTER_METHOD(0x01610D40, bool, ISteamHTTP_GetHTTPDownloadProgressPct, (void * instancePtr, HTTPRequestHandle hRequest, float * pflPercentOut));
IL2CPP_REGISTER_METHOD(0x01610E00, bool, ISteamHTTP_SetHTTPRequestRawPostBody, (void * instancePtr, HTTPRequestHandle hRequest, InteropHelp_UTF8StringHandle * pchContentType, Byte__Array * pubBody, uint32_t unBodyLen));
IL2CPP_REGISTER_METHOD(0x01610F30, uint32_t, ISteamHTTP_CreateCookieContainer, (void * instancePtr, bool bAllowResponsesToModify));
IL2CPP_REGISTER_METHOD(0x01610FE0, bool, ISteamHTTP_ReleaseCookieContainer, (void * instancePtr, HTTPCookieContainerHandle hCookieContainer));
IL2CPP_REGISTER_METHOD(0x01611090, bool, ISteamHTTP_SetCookie, (void * instancePtr, HTTPCookieContainerHandle hCookieContainer, InteropHelp_UTF8StringHandle * pchHost, InteropHelp_UTF8StringHandle * pchUrl, InteropHelp_UTF8StringHandle * pchCookie));
IL2CPP_REGISTER_METHOD(0x01611280, bool, ISteamHTTP_SetHTTPRequestCookieContainer, (void * instancePtr, HTTPRequestHandle hRequest, HTTPCookieContainerHandle hCookieContainer));
IL2CPP_REGISTER_METHOD(0x01611340, bool, ISteamHTTP_SetHTTPRequestUserAgentInfo, (void * instancePtr, HTTPRequestHandle hRequest, InteropHelp_UTF8StringHandle * pchUserAgentInfo));
IL2CPP_REGISTER_METHOD(0x01611440, bool, ISteamHTTP_SetHTTPRequestRequiresVerifiedCertificate, (void * instancePtr, HTTPRequestHandle hRequest, bool bRequireVerifiedCertificate));
IL2CPP_REGISTER_METHOD(0x01611500, bool, ISteamHTTP_SetHTTPRequestAbsoluteTimeoutMS, (void * instancePtr, HTTPRequestHandle hRequest, uint32_t unMilliseconds));
IL2CPP_REGISTER_METHOD(0x016115C0, bool, ISteamHTTP_GetHTTPRequestWasTimedOut, (void * instancePtr, HTTPRequestHandle hRequest, bool * pbWasTimedOut));
IL2CPP_REGISTER_METHOD(0x01611690, bool, ISteamInput_Init, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01611730, bool, ISteamInput_Shutdown, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016117D0, void, ISteamInput_RunFrame, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01611870, int32_t, ISteamInput_GetConnectedControllers, (void * instancePtr, InputHandle_t__Array * handlesOut));
IL2CPP_REGISTER_METHOD(0x01611920, uint64_t, ISteamInput_GetActionSetHandle, (void * instancePtr, InteropHelp_UTF8StringHandle * pszActionSetName));
IL2CPP_REGISTER_METHOD(0x01611A20, void, ISteamInput_ActivateActionSet, (void * instancePtr, InputHandle_t inputHandle, InputActionSetHandle_t actionSetHandle));
IL2CPP_REGISTER_METHOD(0x01611AD0, uint64_t, ISteamInput_GetCurrentActionSet, (void * instancePtr, InputHandle_t inputHandle));
IL2CPP_REGISTER_METHOD(0x01611B80, void, ISteamInput_ActivateActionSetLayer, (void * instancePtr, InputHandle_t inputHandle, InputActionSetHandle_t actionSetLayerHandle));
IL2CPP_REGISTER_METHOD(0x01611C30, void, ISteamInput_DeactivateActionSetLayer, (void * instancePtr, InputHandle_t inputHandle, InputActionSetHandle_t actionSetLayerHandle));
IL2CPP_REGISTER_METHOD(0x01611CE0, void, ISteamInput_DeactivateAllActionSetLayers, (void * instancePtr, InputHandle_t inputHandle));
IL2CPP_REGISTER_METHOD(0x01611D90, int32_t, ISteamInput_GetActiveActionSetLayers, (void * instancePtr, InputHandle_t inputHandle, InputActionSetHandle_t__Array * handlesOut));
IL2CPP_REGISTER_METHOD(0x01611E50, uint64_t, ISteamInput_GetDigitalActionHandle, (void * instancePtr, InteropHelp_UTF8StringHandle * pszActionName));
IL2CPP_REGISTER_METHOD(0x01611F50, InputDigitalActionData_t, ISteamInput_GetDigitalActionData, (void * instancePtr, InputHandle_t inputHandle, InputDigitalActionHandle_t digitalActionHandle));
IL2CPP_REGISTER_METHOD(0x01612000, int32_t, ISteamInput_GetDigitalActionOrigins, (void * instancePtr, InputHandle_t inputHandle, InputActionSetHandle_t actionSetHandle, InputDigitalActionHandle_t digitalActionHandle, EInputActionOrigin__Enum__Array * originsOut));
IL2CPP_REGISTER_METHOD(0x016120F0, uint64_t, ISteamInput_GetAnalogActionHandle, (void * instancePtr, InteropHelp_UTF8StringHandle * pszActionName));
IL2CPP_REGISTER_METHOD(0x016121F0, InputAnalogActionData_t, ISteamInput_GetAnalogActionData, (void * instancePtr, InputHandle_t inputHandle, InputAnalogActionHandle_t analogActionHandle));
IL2CPP_REGISTER_METHOD(0x016122D0, int32_t, ISteamInput_GetAnalogActionOrigins, (void * instancePtr, InputHandle_t inputHandle, InputActionSetHandle_t actionSetHandle, InputAnalogActionHandle_t analogActionHandle, EInputActionOrigin__Enum__Array * originsOut));
IL2CPP_REGISTER_METHOD(0x016123C0, void *, ISteamInput_GetGlyphForActionOrigin, (void * instancePtr, EInputActionOrigin__Enum eOrigin));
IL2CPP_REGISTER_METHOD(0x01612470, void *, ISteamInput_GetStringForActionOrigin, (void * instancePtr, EInputActionOrigin__Enum eOrigin));
IL2CPP_REGISTER_METHOD(0x01612520, void, ISteamInput_StopAnalogActionMomentum, (void * instancePtr, InputHandle_t inputHandle, InputAnalogActionHandle_t eAction));
IL2CPP_REGISTER_METHOD(0x016125D0, InputMotionData_t, ISteamInput_GetMotionData, (void * instancePtr, InputHandle_t inputHandle));
IL2CPP_REGISTER_METHOD(0x016126A0, void, ISteamInput_TriggerVibration, (void * instancePtr, InputHandle_t inputHandle, uint16_t usLeftSpeed, uint16_t usRightSpeed));
IL2CPP_REGISTER_METHOD(0x01612770, void, ISteamInput_SetLEDColor, (void * instancePtr, InputHandle_t inputHandle, uint8_t nColorR, uint8_t nColorG, uint8_t nColorB, uint32_t nFlags));
IL2CPP_REGISTER_METHOD(0x01612850, void, ISteamInput_TriggerHapticPulse, (void * instancePtr, InputHandle_t inputHandle, ESteamControllerPad__Enum eTargetPad, uint16_t usDurationMicroSec));
IL2CPP_REGISTER_METHOD(0x01612920, void, ISteamInput_TriggerRepeatedHapticPulse, (void * instancePtr, InputHandle_t inputHandle, ESteamControllerPad__Enum eTargetPad, uint16_t usDurationMicroSec, uint16_t usOffMicroSec, uint16_t unRepeat, uint32_t nFlags));
IL2CPP_REGISTER_METHOD(0x01612A10, bool, ISteamInput_ShowBindingPanel, (void * instancePtr, InputHandle_t inputHandle));
IL2CPP_REGISTER_METHOD(0x01612AC0, ESteamInputType__Enum, ISteamInput_GetInputTypeForHandle, (void * instancePtr, InputHandle_t inputHandle));
IL2CPP_REGISTER_METHOD(0x01612B70, uint64_t, ISteamInput_GetControllerForGamepadIndex, (void * instancePtr, int32_t nIndex));
IL2CPP_REGISTER_METHOD(0x01612C20, int32_t, ISteamInput_GetGamepadIndexForController, (void * instancePtr, InputHandle_t ulinputHandle));
IL2CPP_REGISTER_METHOD(0x01612CD0, void *, ISteamInput_GetStringForXboxOrigin, (void * instancePtr, EXboxOrigin__Enum eOrigin));
IL2CPP_REGISTER_METHOD(0x01612D80, void *, ISteamInput_GetGlyphForXboxOrigin, (void * instancePtr, EXboxOrigin__Enum eOrigin));
IL2CPP_REGISTER_METHOD(0x01612E30, EInputActionOrigin__Enum, ISteamInput_GetActionOriginFromXboxOrigin, (void * instancePtr, InputHandle_t inputHandle, EXboxOrigin__Enum eOrigin));
IL2CPP_REGISTER_METHOD(0x01612EE0, EInputActionOrigin__Enum, ISteamInput_TranslateActionOrigin, (void * instancePtr, ESteamInputType__Enum eDestinationInputType, EInputActionOrigin__Enum eSourceOrigin));
IL2CPP_REGISTER_METHOD(0x01612F90, bool, ISteamInput_GetDeviceBindingRevision, (void * instancePtr, InputHandle_t inputHandle, int32_t * pMajor, int32_t * pMinor));
IL2CPP_REGISTER_METHOD(0x01613060, uint32_t, ISteamInput_GetRemotePlaySessionID, (void * instancePtr, InputHandle_t inputHandle));
IL2CPP_REGISTER_METHOD(0x01613110, EResult__Enum, ISteamInventory_GetResultStatus, (void * instancePtr, SteamInventoryResult_t resultHandle));
IL2CPP_REGISTER_METHOD(0x016131C0, bool, ISteamInventory_GetResultItems, (void * instancePtr, SteamInventoryResult_t resultHandle, SteamItemDetails_t__Array * pOutItemsArray, uint32_t * punOutItemsArraySize));
IL2CPP_REGISTER_METHOD(0x01613290, bool, ISteamInventory_GetResultItemProperty, (void * instancePtr, SteamInventoryResult_t resultHandle, uint32_t unItemIndex, InteropHelp_UTF8StringHandle * pchPropertyName, void * pchValueBuffer, uint32_t * punValueBufferSizeOut));
IL2CPP_REGISTER_METHOD(0x016133C0, uint32_t, ISteamInventory_GetResultTimestamp, (void * instancePtr, SteamInventoryResult_t resultHandle));
IL2CPP_REGISTER_METHOD(0x01613470, bool, ISteamInventory_CheckResultSteamID, (void * instancePtr, SteamInventoryResult_t resultHandle, CSteamID steamIDExpected));
IL2CPP_REGISTER_METHOD(0x01613530, void, ISteamInventory_DestroyResult, (void * instancePtr, SteamInventoryResult_t resultHandle));
IL2CPP_REGISTER_METHOD(0x016135E0, bool, ISteamInventory_GetAllItems, (void * instancePtr, SteamInventoryResult_t * pResultHandle));
IL2CPP_REGISTER_METHOD(0x01613690, bool, ISteamInventory_GetItemsByID, (void * instancePtr, SteamInventoryResult_t * pResultHandle, SteamItemInstanceID_t__Array * pInstanceIDs, uint32_t unCountInstanceIDs));
IL2CPP_REGISTER_METHOD(0x01613760, bool, ISteamInventory_SerializeResult, (void * instancePtr, SteamInventoryResult_t resultHandle, Byte__Array * pOutBuffer, uint32_t * punOutBufferSize));
IL2CPP_REGISTER_METHOD(0x01613830, bool, ISteamInventory_DeserializeResult, (void * instancePtr, SteamInventoryResult_t * pOutResultHandle, Byte__Array * pBuffer, uint32_t unBufferSize, bool bRESERVED_MUST_BE_FALSE));
IL2CPP_REGISTER_METHOD(0x01613920, bool, ISteamInventory_GenerateItems, (void * instancePtr, SteamInventoryResult_t * pResultHandle, SteamItemDef_t__Array * pArrayItemDefs, UInt32__Array * punArrayQuantity, uint32_t unArrayLength));
IL2CPP_REGISTER_METHOD(0x01613A10, bool, ISteamInventory_GrantPromoItems, (void * instancePtr, SteamInventoryResult_t * pResultHandle));
IL2CPP_REGISTER_METHOD(0x01613AC0, bool, ISteamInventory_AddPromoItem, (void * instancePtr, SteamInventoryResult_t * pResultHandle, SteamItemDef_t itemDef));
IL2CPP_REGISTER_METHOD(0x01613B80, bool, ISteamInventory_AddPromoItems, (void * instancePtr, SteamInventoryResult_t * pResultHandle, SteamItemDef_t__Array * pArrayItemDefs, uint32_t unArrayLength));
IL2CPP_REGISTER_METHOD(0x01613C50, bool, ISteamInventory_ConsumeItem, (void * instancePtr, SteamInventoryResult_t * pResultHandle, SteamItemInstanceID_t itemConsume, uint32_t unQuantity));
IL2CPP_REGISTER_METHOD(0x01613D20, bool, ISteamInventory_ExchangeItems, (void * instancePtr, SteamInventoryResult_t * pResultHandle, SteamItemDef_t__Array * pArrayGenerate, UInt32__Array * punArrayGenerateQuantity, uint32_t unArrayGenerateLength, SteamItemInstanceID_t__Array * pArrayDestroy, UInt32__Array * punArrayDestroyQuantity, uint32_t unArrayDestroyLength));
IL2CPP_REGISTER_METHOD(0x01613E50, bool, ISteamInventory_TransferItemQuantity, (void * instancePtr, SteamInventoryResult_t * pResultHandle, SteamItemInstanceID_t itemIdSource, uint32_t unQuantity, SteamItemInstanceID_t itemIdDest));
IL2CPP_REGISTER_METHOD(0x01613F30, void, ISteamInventory_SendItemDropHeartbeat, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01613FD0, bool, ISteamInventory_TriggerItemDrop, (void * instancePtr, SteamInventoryResult_t * pResultHandle, SteamItemDef_t dropListDefinition));
IL2CPP_REGISTER_METHOD(0x01614090, bool, ISteamInventory_TradeItems, (void * instancePtr, SteamInventoryResult_t * pResultHandle, CSteamID steamIDTradePartner, SteamItemInstanceID_t__Array * pArrayGive, UInt32__Array * pArrayGiveQuantity, uint32_t nArrayGiveLength, SteamItemInstanceID_t__Array * pArrayGet, UInt32__Array * pArrayGetQuantity, uint32_t nArrayGetLength));
IL2CPP_REGISTER_METHOD(0x016141D0, bool, ISteamInventory_LoadItemDefinitions, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01614270, bool, ISteamInventory_GetItemDefinitionIDs, (void * instancePtr, SteamItemDef_t__Array * pItemDefIDs, uint32_t * punItemDefIDsArraySize));
IL2CPP_REGISTER_METHOD(0x01614330, bool, ISteamInventory_GetItemDefinitionProperty, (void * instancePtr, SteamItemDef_t iDefinition, InteropHelp_UTF8StringHandle * pchPropertyName, void * pchValueBuffer, uint32_t * punValueBufferSizeOut));
IL2CPP_REGISTER_METHOD(0x01614450, uint64_t, ISteamInventory_RequestEligiblePromoItemDefinitionsIDs, (void * instancePtr, CSteamID steamID));
IL2CPP_REGISTER_METHOD(0x01614500, bool, ISteamInventory_GetEligiblePromoItemDefinitionIDs, (void * instancePtr, CSteamID steamID, SteamItemDef_t__Array * pItemDefIDs, uint32_t * punItemDefIDsArraySize));
IL2CPP_REGISTER_METHOD(0x016145D0, uint64_t, ISteamInventory_StartPurchase, (void * instancePtr, SteamItemDef_t__Array * pArrayItemDefs, UInt32__Array * punArrayQuantity, uint32_t unArrayLength));
IL2CPP_REGISTER_METHOD(0x016146B0, uint64_t, ISteamInventory_RequestPrices, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01614750, uint32_t, ISteamInventory_GetNumItemsWithPrices, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016147F0, bool, ISteamInventory_GetItemsWithPrices, (void * instancePtr, SteamItemDef_t__Array * pArrayItemDefs, UInt64__Array * pCurrentPrices, UInt64__Array * pBasePrices, uint32_t unArrayLength));
IL2CPP_REGISTER_METHOD(0x016148E0, bool, ISteamInventory_GetItemPrice, (void * instancePtr, SteamItemDef_t iDefinition, uint64_t * pCurrentPrice, uint64_t * pBasePrice));
IL2CPP_REGISTER_METHOD(0x016149B0, uint64_t, ISteamInventory_StartUpdateProperties, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01614A50, bool, ISteamInventory_RemoveProperty, (void * instancePtr, SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, InteropHelp_UTF8StringHandle * pchPropertyName));
IL2CPP_REGISTER_METHOD(0x01614B70, bool, ISteamInventory_SetProperty, (void * instancePtr, SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, InteropHelp_UTF8StringHandle * pchPropertyName, InteropHelp_UTF8StringHandle * pchPropertyValue));
IL2CPP_REGISTER_METHOD(0x01614D00, bool, ISteamInventory_SetProperty0, (void * instancePtr, SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, InteropHelp_UTF8StringHandle * pchPropertyName, bool bValue));
IL2CPP_REGISTER_METHOD(0x01614E20, bool, ISteamInventory_SetProperty1, (void * instancePtr, SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, InteropHelp_UTF8StringHandle * pchPropertyName, int64_t nValue));
IL2CPP_REGISTER_METHOD(0x01614F40, bool, ISteamInventory_SetProperty2, (void * instancePtr, SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, InteropHelp_UTF8StringHandle * pchPropertyName, float flValue));
IL2CPP_REGISTER_METHOD(0x01615070, bool, ISteamInventory_SubmitUpdateProperties, (void * instancePtr, SteamInventoryUpdateHandle_t handle, SteamInventoryResult_t * pResultHandle));
IL2CPP_REGISTER_METHOD(0x01615130, int32_t, ISteamMatchmaking_GetFavoriteGameCount, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016151D0, bool, ISteamMatchmaking_GetFavoriteGame, (void * instancePtr, int32_t iGame, AppId_t * pnAppID, uint32_t * pnIP, uint16_t * pnConnPort, uint16_t * pnQueryPort, uint32_t * punFlags, uint32_t * pRTime32LastPlayedOnServer));
IL2CPP_REGISTER_METHOD(0x016152D0, int32_t, ISteamMatchmaking_AddFavoriteGame, (void * instancePtr, AppId_t nAppID, uint32_t nIP, uint16_t nConnPort, uint16_t nQueryPort, uint32_t unFlags, uint32_t rTime32LastPlayedOnServer));
IL2CPP_REGISTER_METHOD(0x016153B0, bool, ISteamMatchmaking_RemoveFavoriteGame, (void * instancePtr, AppId_t nAppID, uint32_t nIP, uint16_t nConnPort, uint16_t nQueryPort, uint32_t unFlags));
IL2CPP_REGISTER_METHOD(0x016154A0, uint64_t, ISteamMatchmaking_RequestLobbyList, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01615540, void, ISteamMatchmaking_AddRequestLobbyListStringFilter, (void * instancePtr, InteropHelp_UTF8StringHandle * pchKeyToMatch, InteropHelp_UTF8StringHandle * pchValueToMatch, ELobbyComparison__Enum eComparisonType));
IL2CPP_REGISTER_METHOD(0x016156B0, void, ISteamMatchmaking_AddRequestLobbyListNumericalFilter, (void * instancePtr, InteropHelp_UTF8StringHandle * pchKeyToMatch, int32_t nValueToMatch, ELobbyComparison__Enum eComparisonType));
IL2CPP_REGISTER_METHOD(0x016157C0, void, ISteamMatchmaking_AddRequestLobbyListNearValueFilter, (void * instancePtr, InteropHelp_UTF8StringHandle * pchKeyToMatch, int32_t nValueToBeCloseTo));
IL2CPP_REGISTER_METHOD(0x016158C0, void, ISteamMatchmaking_AddRequestLobbyListFilterSlotsAvailable, (void * instancePtr, int32_t nSlotsAvailable));
IL2CPP_REGISTER_METHOD(0x01615970, void, ISteamMatchmaking_AddRequestLobbyListDistanceFilter, (void * instancePtr, ELobbyDistanceFilter__Enum eLobbyDistanceFilter));
IL2CPP_REGISTER_METHOD(0x01615A20, void, ISteamMatchmaking_AddRequestLobbyListResultCountFilter, (void * instancePtr, int32_t cMaxResults));
IL2CPP_REGISTER_METHOD(0x01615AD0, void, ISteamMatchmaking_AddRequestLobbyListCompatibleMembersFilter, (void * instancePtr, CSteamID steamIDLobby));
IL2CPP_REGISTER_METHOD(0x01615B80, uint64_t, ISteamMatchmaking_GetLobbyByIndex, (void * instancePtr, int32_t iLobby));
IL2CPP_REGISTER_METHOD(0x01615C30, uint64_t, ISteamMatchmaking_CreateLobby, (void * instancePtr, ELobbyType__Enum eLobbyType, int32_t cMaxMembers));
IL2CPP_REGISTER_METHOD(0x01615CE0, uint64_t, ISteamMatchmaking_JoinLobby, (void * instancePtr, CSteamID steamIDLobby));
IL2CPP_REGISTER_METHOD(0x01615D90, void, ISteamMatchmaking_LeaveLobby, (void * instancePtr, CSteamID steamIDLobby));
IL2CPP_REGISTER_METHOD(0x01615E40, bool, ISteamMatchmaking_InviteUserToLobby, (void * instancePtr, CSteamID steamIDLobby, CSteamID steamIDInvitee));
IL2CPP_REGISTER_METHOD(0x01615F00, int32_t, ISteamMatchmaking_GetNumLobbyMembers, (void * instancePtr, CSteamID steamIDLobby));
IL2CPP_REGISTER_METHOD(0x01615FB0, uint64_t, ISteamMatchmaking_GetLobbyMemberByIndex, (void * instancePtr, CSteamID steamIDLobby, int32_t iMember));
IL2CPP_REGISTER_METHOD(0x01616060, void *, ISteamMatchmaking_GetLobbyData, (void * instancePtr, CSteamID steamIDLobby, InteropHelp_UTF8StringHandle * pchKey));
IL2CPP_REGISTER_METHOD(0x01616160, bool, ISteamMatchmaking_SetLobbyData, (void * instancePtr, CSteamID steamIDLobby, InteropHelp_UTF8StringHandle * pchKey, InteropHelp_UTF8StringHandle * pchValue));
IL2CPP_REGISTER_METHOD(0x016162E0, int32_t, ISteamMatchmaking_GetLobbyDataCount, (void * instancePtr, CSteamID steamIDLobby));
IL2CPP_REGISTER_METHOD(0x01616390, bool, ISteamMatchmaking_GetLobbyDataByIndex, (void * instancePtr, CSteamID steamIDLobby, int32_t iLobbyData, void * pchKey, int32_t cchKeyBufferSize, void * pchValue, int32_t cchValueBufferSize));
IL2CPP_REGISTER_METHOD(0x01616480, bool, ISteamMatchmaking_DeleteLobbyData, (void * instancePtr, CSteamID steamIDLobby, InteropHelp_UTF8StringHandle * pchKey));
IL2CPP_REGISTER_METHOD(0x01616590, void *, ISteamMatchmaking_GetLobbyMemberData, (void * instancePtr, CSteamID steamIDLobby, CSteamID steamIDUser, InteropHelp_UTF8StringHandle * pchKey));
IL2CPP_REGISTER_METHOD(0x016166B0, void, ISteamMatchmaking_SetLobbyMemberData, (void * instancePtr, CSteamID steamIDLobby, InteropHelp_UTF8StringHandle * pchKey, InteropHelp_UTF8StringHandle * pchValue));
IL2CPP_REGISTER_METHOD(0x01616820, bool, ISteamMatchmaking_SendLobbyChatMsg, (void * instancePtr, CSteamID steamIDLobby, Byte__Array * pvMsgBody, int32_t cubMsgBody));
IL2CPP_REGISTER_METHOD(0x016168F0, int32_t, ISteamMatchmaking_GetLobbyChatEntry, (void * instancePtr, CSteamID steamIDLobby, int32_t iChatID, CSteamID * pSteamIDUser, Byte__Array * pvData, int32_t cubData, EChatEntryType__Enum * peChatEntryType));
IL2CPP_REGISTER_METHOD(0x016169D0, bool, ISteamMatchmaking_RequestLobbyData, (void * instancePtr, CSteamID steamIDLobby));
IL2CPP_REGISTER_METHOD(0x01616A80, void, ISteamMatchmaking_SetLobbyGameServer, (void * instancePtr, CSteamID steamIDLobby, uint32_t unGameServerIP, uint16_t unGameServerPort, CSteamID steamIDGameServer));
IL2CPP_REGISTER_METHOD(0x01616B50, bool, ISteamMatchmaking_GetLobbyGameServer, (void * instancePtr, CSteamID steamIDLobby, uint32_t * punGameServerIP, uint16_t * punGameServerPort, CSteamID * psteamIDGameServer));
IL2CPP_REGISTER_METHOD(0x01616C30, bool, ISteamMatchmaking_SetLobbyMemberLimit, (void * instancePtr, CSteamID steamIDLobby, int32_t cMaxMembers));
IL2CPP_REGISTER_METHOD(0x01616CF0, int32_t, ISteamMatchmaking_GetLobbyMemberLimit, (void * instancePtr, CSteamID steamIDLobby));
IL2CPP_REGISTER_METHOD(0x01616DA0, bool, ISteamMatchmaking_SetLobbyType, (void * instancePtr, CSteamID steamIDLobby, ELobbyType__Enum eLobbyType));
IL2CPP_REGISTER_METHOD(0x01616E60, bool, ISteamMatchmaking_SetLobbyJoinable, (void * instancePtr, CSteamID steamIDLobby, bool bLobbyJoinable));
IL2CPP_REGISTER_METHOD(0x01616F20, uint64_t, ISteamMatchmaking_GetLobbyOwner, (void * instancePtr, CSteamID steamIDLobby));
IL2CPP_REGISTER_METHOD(0x01616FD0, bool, ISteamMatchmaking_SetLobbyOwner, (void * instancePtr, CSteamID steamIDLobby, CSteamID steamIDNewOwner));
IL2CPP_REGISTER_METHOD(0x01617090, bool, ISteamMatchmaking_SetLinkedLobby, (void * instancePtr, CSteamID steamIDLobby, CSteamID steamIDLobbyDependent));
IL2CPP_REGISTER_METHOD(0x01617150, void *, ISteamMatchmakingServers_RequestInternetServerList, (void * instancePtr, AppId_t iApp, void * ppchFilters, uint32_t nFilters, void * pRequestServersResponse));
IL2CPP_REGISTER_METHOD(0x01617220, void *, ISteamMatchmakingServers_RequestLANServerList, (void * instancePtr, AppId_t iApp, void * pRequestServersResponse));
IL2CPP_REGISTER_METHOD(0x016172D0, void *, ISteamMatchmakingServers_RequestFriendsServerList, (void * instancePtr, AppId_t iApp, void * ppchFilters, uint32_t nFilters, void * pRequestServersResponse));
IL2CPP_REGISTER_METHOD(0x016173A0, void *, ISteamMatchmakingServers_RequestFavoritesServerList, (void * instancePtr, AppId_t iApp, void * ppchFilters, uint32_t nFilters, void * pRequestServersResponse));
IL2CPP_REGISTER_METHOD(0x01617470, void *, ISteamMatchmakingServers_RequestHistoryServerList, (void * instancePtr, AppId_t iApp, void * ppchFilters, uint32_t nFilters, void * pRequestServersResponse));
IL2CPP_REGISTER_METHOD(0x01617540, void *, ISteamMatchmakingServers_RequestSpectatorServerList, (void * instancePtr, AppId_t iApp, void * ppchFilters, uint32_t nFilters, void * pRequestServersResponse));
IL2CPP_REGISTER_METHOD(0x01617610, void, ISteamMatchmakingServers_ReleaseRequest, (void * instancePtr, HServerListRequest hServerListRequest));
IL2CPP_REGISTER_METHOD(0x016176C0, void *, ISteamMatchmakingServers_GetServerDetails, (void * instancePtr, HServerListRequest hRequest, int32_t iServer));
IL2CPP_REGISTER_METHOD(0x01617770, void, ISteamMatchmakingServers_CancelQuery, (void * instancePtr, HServerListRequest hRequest));
IL2CPP_REGISTER_METHOD(0x01617820, void, ISteamMatchmakingServers_RefreshQuery, (void * instancePtr, HServerListRequest hRequest));
IL2CPP_REGISTER_METHOD(0x016178D0, bool, ISteamMatchmakingServers_IsRefreshing, (void * instancePtr, HServerListRequest hRequest));
IL2CPP_REGISTER_METHOD(0x01617980, int32_t, ISteamMatchmakingServers_GetServerCount, (void * instancePtr, HServerListRequest hRequest));
IL2CPP_REGISTER_METHOD(0x01617A30, void, ISteamMatchmakingServers_RefreshServer, (void * instancePtr, HServerListRequest hRequest, int32_t iServer));
IL2CPP_REGISTER_METHOD(0x01617AE0, int32_t, ISteamMatchmakingServers_PingServer, (void * instancePtr, uint32_t unIP, uint16_t usPort, void * pRequestServersResponse));
IL2CPP_REGISTER_METHOD(0x01617BA0, int32_t, ISteamMatchmakingServers_PlayerDetails, (void * instancePtr, uint32_t unIP, uint16_t usPort, void * pRequestServersResponse));
IL2CPP_REGISTER_METHOD(0x01617C60, int32_t, ISteamMatchmakingServers_ServerRules, (void * instancePtr, uint32_t unIP, uint16_t usPort, void * pRequestServersResponse));
IL2CPP_REGISTER_METHOD(0x01617D20, void, ISteamMatchmakingServers_CancelServerQuery, (void * instancePtr, HServerQuery hServerQuery));
IL2CPP_REGISTER_METHOD(0x01617DD0, EGameSearchErrorCode_t__Enum, ISteamGameSearch_AddGameSearchParams, (void * instancePtr, InteropHelp_UTF8StringHandle * pchKeyToFind, InteropHelp_UTF8StringHandle * pchValuesToFind));
IL2CPP_REGISTER_METHOD(0x01617F30, EGameSearchErrorCode_t__Enum, ISteamGameSearch_SearchForGameWithLobby, (void * instancePtr, CSteamID steamIDLobby, int32_t nPlayerMin, int32_t nPlayerMax));
IL2CPP_REGISTER_METHOD(0x01617FF0, EGameSearchErrorCode_t__Enum, ISteamGameSearch_SearchForGameSolo, (void * instancePtr, int32_t nPlayerMin, int32_t nPlayerMax));
IL2CPP_REGISTER_METHOD(0x016180A0, EGameSearchErrorCode_t__Enum, ISteamGameSearch_AcceptGame, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01618140, EGameSearchErrorCode_t__Enum, ISteamGameSearch_DeclineGame, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016181E0, EGameSearchErrorCode_t__Enum, ISteamGameSearch_RetrieveConnectionDetails, (void * instancePtr, CSteamID steamIDHost, void * pchConnectionDetails, int32_t cubConnectionDetails));
IL2CPP_REGISTER_METHOD(0x016182A0, EGameSearchErrorCode_t__Enum, ISteamGameSearch_EndGameSearch, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01618340, EGameSearchErrorCode_t__Enum, ISteamGameSearch_SetGameHostParams, (void * instancePtr, InteropHelp_UTF8StringHandle * pchKey, InteropHelp_UTF8StringHandle * pchValue));
IL2CPP_REGISTER_METHOD(0x016184A0, EGameSearchErrorCode_t__Enum, ISteamGameSearch_SetConnectionDetails, (void * instancePtr, InteropHelp_UTF8StringHandle * pchConnectionDetails, int32_t cubConnectionDetails));
IL2CPP_REGISTER_METHOD(0x016185A0, EGameSearchErrorCode_t__Enum, ISteamGameSearch_RequestPlayersForGame, (void * instancePtr, int32_t nPlayerMin, int32_t nPlayerMax, int32_t nMaxTeamSize));
IL2CPP_REGISTER_METHOD(0x01618660, EGameSearchErrorCode_t__Enum, ISteamGameSearch_HostConfirmGameStart, (void * instancePtr, uint64_t ullUniqueGameID));
IL2CPP_REGISTER_METHOD(0x01618710, EGameSearchErrorCode_t__Enum, ISteamGameSearch_CancelRequestPlayersForGame, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016187B0, EGameSearchErrorCode_t__Enum, ISteamGameSearch_SubmitPlayerResult, (void * instancePtr, uint64_t ullUniqueGameID, CSteamID steamIDPlayer, EPlayerResult_t__Enum EPlayerResult));
IL2CPP_REGISTER_METHOD(0x01618870, EGameSearchErrorCode_t__Enum, ISteamGameSearch_EndGame, (void * instancePtr, uint64_t ullUniqueGameID));
IL2CPP_REGISTER_METHOD(0x01618920, uint32_t, ISteamParties_GetNumActiveBeacons, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016189C0, uint64_t, ISteamParties_GetBeaconByIndex, (void * instancePtr, uint32_t unIndex));
IL2CPP_REGISTER_METHOD(0x01618A70, bool, ISteamParties_GetBeaconDetails, (void * instancePtr, PartyBeaconID_t ulBeaconID, CSteamID * pSteamIDBeaconOwner, SteamPartyBeaconLocation_t * pLocation, void * pchMetadata, int32_t cchMetadata));
IL2CPP_REGISTER_METHOD(0x01618B60, uint64_t, ISteamParties_JoinParty, (void * instancePtr, PartyBeaconID_t ulBeaconID));
IL2CPP_REGISTER_METHOD(0x01618C10, bool, ISteamParties_GetNumAvailableBeaconLocations, (void * instancePtr, uint32_t * puNumLocations));
IL2CPP_REGISTER_METHOD(0x01618CC0, bool, ISteamParties_GetAvailableBeaconLocations, (void * instancePtr, SteamPartyBeaconLocation_t__Array * pLocationList, uint32_t uMaxNumLocations));
IL2CPP_REGISTER_METHOD(0x01618D80, uint64_t, ISteamParties_CreateBeacon, (void * instancePtr, uint32_t unOpenSlots, SteamPartyBeaconLocation_t * pBeaconLocation, InteropHelp_UTF8StringHandle * pchConnectString, InteropHelp_UTF8StringHandle * pchMetadata));
IL2CPP_REGISTER_METHOD(0x01618F10, void, ISteamParties_OnReservationCompleted, (void * instancePtr, PartyBeaconID_t ulBeacon, CSteamID steamIDUser));
IL2CPP_REGISTER_METHOD(0x01618FC0, void, ISteamParties_CancelReservation, (void * instancePtr, PartyBeaconID_t ulBeacon, CSteamID steamIDUser));
IL2CPP_REGISTER_METHOD(0x01619070, uint64_t, ISteamParties_ChangeNumOpenSlots, (void * instancePtr, PartyBeaconID_t ulBeacon, uint32_t unOpenSlots));
IL2CPP_REGISTER_METHOD(0x01619120, bool, ISteamParties_DestroyBeacon, (void * instancePtr, PartyBeaconID_t ulBeacon));
IL2CPP_REGISTER_METHOD(0x016191D0, bool, ISteamParties_GetBeaconLocationData, (void * instancePtr, SteamPartyBeaconLocation_t BeaconLocation, ESteamPartyBeaconLocationData__Enum eData, void * pchDataStringOut, int32_t cchDataStringOut));
IL2CPP_REGISTER_METHOD(0x016192B0, bool, ISteamMusic_BIsEnabled, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01619350, bool, ISteamMusic_BIsPlaying, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016193F0, AudioPlayback_Status__Enum, ISteamMusic_GetPlaybackStatus, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01619490, void, ISteamMusic_Play, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01619530, void, ISteamMusic_Pause, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016195D0, void, ISteamMusic_PlayPrevious, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01619670, void, ISteamMusic_PlayNext, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01619710, void, ISteamMusic_SetVolume, (void * instancePtr, float flVolume));
IL2CPP_REGISTER_METHOD(0x016197C0, float, ISteamMusic_GetVolume, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01619860, bool, ISteamMusicRemote_RegisterSteamMusicRemote, (void * instancePtr, InteropHelp_UTF8StringHandle * pchName));
IL2CPP_REGISTER_METHOD(0x01619960, bool, ISteamMusicRemote_DeregisterSteamMusicRemote, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01619A00, bool, ISteamMusicRemote_BIsCurrentMusicRemote, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01619AA0, bool, ISteamMusicRemote_BActivationSuccess, (void * instancePtr, bool bValue));
IL2CPP_REGISTER_METHOD(0x01619B50, bool, ISteamMusicRemote_SetDisplayName, (void * instancePtr, InteropHelp_UTF8StringHandle * pchDisplayName));
IL2CPP_REGISTER_METHOD(0x01619C50, bool, ISteamMusicRemote_SetPNGIcon_64x64, (void * instancePtr, Byte__Array * pvBuffer, uint32_t cbBufferLength));
IL2CPP_REGISTER_METHOD(0x01619D10, bool, ISteamMusicRemote_EnablePlayPrevious, (void * instancePtr, bool bValue));
IL2CPP_REGISTER_METHOD(0x01619DC0, bool, ISteamMusicRemote_EnablePlayNext, (void * instancePtr, bool bValue));
IL2CPP_REGISTER_METHOD(0x01619E70, bool, ISteamMusicRemote_EnableShuffled, (void * instancePtr, bool bValue));
IL2CPP_REGISTER_METHOD(0x01619F20, bool, ISteamMusicRemote_EnableLooped, (void * instancePtr, bool bValue));
IL2CPP_REGISTER_METHOD(0x01619FD0, bool, ISteamMusicRemote_EnableQueue, (void * instancePtr, bool bValue));
IL2CPP_REGISTER_METHOD(0x0161A080, bool, ISteamMusicRemote_EnablePlaylists, (void * instancePtr, bool bValue));
IL2CPP_REGISTER_METHOD(0x0161A130, bool, ISteamMusicRemote_UpdatePlaybackStatus, (void * instancePtr, AudioPlayback_Status__Enum nStatus));
IL2CPP_REGISTER_METHOD(0x0161A1E0, bool, ISteamMusicRemote_UpdateShuffled, (void * instancePtr, bool bValue));
IL2CPP_REGISTER_METHOD(0x0161A290, bool, ISteamMusicRemote_UpdateLooped, (void * instancePtr, bool bValue));
IL2CPP_REGISTER_METHOD(0x0161A340, bool, ISteamMusicRemote_UpdateVolume, (void * instancePtr, float flValue));
IL2CPP_REGISTER_METHOD(0x0161A3F0, bool, ISteamMusicRemote_CurrentEntryWillChange, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0161A490, bool, ISteamMusicRemote_CurrentEntryIsAvailable, (void * instancePtr, bool bAvailable));
IL2CPP_REGISTER_METHOD(0x0161A540, bool, ISteamMusicRemote_UpdateCurrentEntryText, (void * instancePtr, InteropHelp_UTF8StringHandle * pchText));
IL2CPP_REGISTER_METHOD(0x0161A640, bool, ISteamMusicRemote_UpdateCurrentEntryElapsedSeconds, (void * instancePtr, int32_t nValue));
IL2CPP_REGISTER_METHOD(0x0161A6F0, bool, ISteamMusicRemote_UpdateCurrentEntryCoverArt, (void * instancePtr, Byte__Array * pvBuffer, uint32_t cbBufferLength));
IL2CPP_REGISTER_METHOD(0x0161A7B0, bool, ISteamMusicRemote_CurrentEntryDidChange, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0161A850, bool, ISteamMusicRemote_QueueWillChange, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0161A8F0, bool, ISteamMusicRemote_ResetQueueEntries, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0161A990, bool, ISteamMusicRemote_SetQueueEntry, (void * instancePtr, int32_t nID, int32_t nPosition, InteropHelp_UTF8StringHandle * pchEntryText));
IL2CPP_REGISTER_METHOD(0x0161AAB0, bool, ISteamMusicRemote_SetCurrentQueueEntry, (void * instancePtr, int32_t nID));
IL2CPP_REGISTER_METHOD(0x0161AB60, bool, ISteamMusicRemote_QueueDidChange, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0161AC00, bool, ISteamMusicRemote_PlaylistWillChange, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0161ACA0, bool, ISteamMusicRemote_ResetPlaylistEntries, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0161AD40, bool, ISteamMusicRemote_SetPlaylistEntry, (void * instancePtr, int32_t nID, int32_t nPosition, InteropHelp_UTF8StringHandle * pchEntryText));
IL2CPP_REGISTER_METHOD(0x0161AE60, bool, ISteamMusicRemote_SetCurrentPlaylistEntry, (void * instancePtr, int32_t nID));
IL2CPP_REGISTER_METHOD(0x0161AF10, bool, ISteamMusicRemote_PlaylistDidChange, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0161AFB0, bool, ISteamNetworking_SendP2PPacket, (void * instancePtr, CSteamID steamIDRemote, Byte__Array * pubData, uint32_t cubData, EP2PSend__Enum eP2PSendType, int32_t nChannel));
IL2CPP_REGISTER_METHOD(0x0161B0A0, bool, ISteamNetworking_IsP2PPacketAvailable, (void * instancePtr, uint32_t * pcubMsgSize, int32_t nChannel));
IL2CPP_REGISTER_METHOD(0x0161B160, bool, ISteamNetworking_ReadP2PPacket, (void * instancePtr, Byte__Array * pubDest, uint32_t cubDest, uint32_t * pcubMsgSize, CSteamID * psteamIDRemote, int32_t nChannel));
IL2CPP_REGISTER_METHOD(0x0161B250, bool, ISteamNetworking_AcceptP2PSessionWithUser, (void * instancePtr, CSteamID steamIDRemote));
IL2CPP_REGISTER_METHOD(0x0161B300, bool, ISteamNetworking_CloseP2PSessionWithUser, (void * instancePtr, CSteamID steamIDRemote));
IL2CPP_REGISTER_METHOD(0x0161B3B0, bool, ISteamNetworking_CloseP2PChannelWithUser, (void * instancePtr, CSteamID steamIDRemote, int32_t nChannel));
IL2CPP_REGISTER_METHOD(0x0161B470, bool, ISteamNetworking_GetP2PSessionState, (void * instancePtr, CSteamID steamIDRemote, P2PSessionState_t * pConnectionState));
IL2CPP_REGISTER_METHOD(0x0161B530, bool, ISteamNetworking_AllowP2PPacketRelay, (void * instancePtr, bool bAllow));
IL2CPP_REGISTER_METHOD(0x0161B5E0, uint32_t, ISteamNetworking_CreateListenSocket, (void * instancePtr, int32_t nVirtualP2PPort, uint32_t nIP, uint16_t nPort, bool bAllowUseOfPacketRelay));
IL2CPP_REGISTER_METHOD(0x0161B6C0, uint32_t, ISteamNetworking_CreateP2PConnectionSocket, (void * instancePtr, CSteamID steamIDTarget, int32_t nVirtualPort, int32_t nTimeoutSec, bool bAllowUseOfPacketRelay));
IL2CPP_REGISTER_METHOD(0x0161B7A0, uint32_t, ISteamNetworking_CreateConnectionSocket, (void * instancePtr, uint32_t nIP, uint16_t nPort, int32_t nTimeoutSec));
IL2CPP_REGISTER_METHOD(0x0161B860, bool, ISteamNetworking_DestroySocket, (void * instancePtr, SNetSocket_t hSocket, bool bNotifyRemoteEnd));
IL2CPP_REGISTER_METHOD(0x0161B920, bool, ISteamNetworking_DestroyListenSocket, (void * instancePtr, SNetListenSocket_t hSocket, bool bNotifyRemoteEnd));
IL2CPP_REGISTER_METHOD(0x0161B9E0, bool, ISteamNetworking_SendDataOnSocket, (void * instancePtr, SNetSocket_t hSocket, Byte__Array * pubData, uint32_t cubData, bool bReliable));
IL2CPP_REGISTER_METHOD(0x0161BAC0, bool, ISteamNetworking_IsDataAvailableOnSocket, (void * instancePtr, SNetSocket_t hSocket, uint32_t * pcubMsgSize));
IL2CPP_REGISTER_METHOD(0x0161BB80, bool, ISteamNetworking_RetrieveDataFromSocket, (void * instancePtr, SNetSocket_t hSocket, Byte__Array * pubDest, uint32_t cubDest, uint32_t * pcubMsgSize));
IL2CPP_REGISTER_METHOD(0x0161BC60, bool, ISteamNetworking_IsDataAvailable, (void * instancePtr, SNetListenSocket_t hListenSocket, uint32_t * pcubMsgSize, SNetSocket_t * phSocket));
IL2CPP_REGISTER_METHOD(0x0161BD30, bool, ISteamNetworking_RetrieveData, (void * instancePtr, SNetListenSocket_t hListenSocket, Byte__Array * pubDest, uint32_t cubDest, uint32_t * pcubMsgSize, SNetSocket_t * phSocket));
IL2CPP_REGISTER_METHOD(0x0161BE20, bool, ISteamNetworking_GetSocketInfo, (void * instancePtr, SNetSocket_t hSocket, CSteamID * pSteamIDRemote, int32_t * peSocketStatus, uint32_t * punIPRemote, uint16_t * punPortRemote));
IL2CPP_REGISTER_METHOD(0x0161BF10, bool, ISteamNetworking_GetListenSocketInfo, (void * instancePtr, SNetListenSocket_t hListenSocket, uint32_t * pnIP, uint16_t * pnPort));
IL2CPP_REGISTER_METHOD(0x0161BFE0, ESNetSocketConnectionType__Enum, ISteamNetworking_GetSocketConnectionType, (void * instancePtr, SNetSocket_t hSocket));
IL2CPP_REGISTER_METHOD(0x0161C090, int32_t, ISteamNetworking_GetMaxPacketSize, (void * instancePtr, SNetSocket_t hSocket));
IL2CPP_REGISTER_METHOD(0x0161C140, bool, ISteamParentalSettings_BIsParentalLockEnabled, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0161C1E0, bool, ISteamParentalSettings_BIsParentalLockLocked, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0161C280, bool, ISteamParentalSettings_BIsAppBlocked, (void * instancePtr, AppId_t nAppID));
IL2CPP_REGISTER_METHOD(0x0161C330, bool, ISteamParentalSettings_BIsAppInBlockList, (void * instancePtr, AppId_t nAppID));
IL2CPP_REGISTER_METHOD(0x0161C3E0, bool, ISteamParentalSettings_BIsFeatureBlocked, (void * instancePtr, EParentalFeature__Enum eFeature));
IL2CPP_REGISTER_METHOD(0x0161C490, bool, ISteamParentalSettings_BIsFeatureInBlockList, (void * instancePtr, EParentalFeature__Enum eFeature));
IL2CPP_REGISTER_METHOD(0x0161C540, uint32_t, ISteamRemotePlay_GetSessionCount, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0161C5E0, uint32_t, ISteamRemotePlay_GetSessionID, (void * instancePtr, int32_t iSessionIndex));
IL2CPP_REGISTER_METHOD(0x0161C690, uint64_t, ISteamRemotePlay_GetSessionSteamID, (void * instancePtr, uint32_t unSessionID));
IL2CPP_REGISTER_METHOD(0x0161C740, void *, ISteamRemotePlay_GetSessionClientName, (void * instancePtr, uint32_t unSessionID));
IL2CPP_REGISTER_METHOD(0x0161C7F0, ESteamDeviceFormFactor__Enum, ISteamRemotePlay_GetSessionClientFormFactor, (void * instancePtr, uint32_t unSessionID));
IL2CPP_REGISTER_METHOD(0x0161C8A0, bool, ISteamRemotePlay_BGetSessionClientResolution, (void * instancePtr, uint32_t unSessionID, int32_t * pnResolutionX, int32_t * pnResolutionY));
IL2CPP_REGISTER_METHOD(0x0161C970, bool, ISteamRemoteStorage_FileWrite, (void * instancePtr, InteropHelp_UTF8StringHandle * pchFile, Byte__Array * pvData, int32_t cubData));
IL2CPP_REGISTER_METHOD(0x0161CA90, int32_t, ISteamRemoteStorage_FileRead, (void * instancePtr, InteropHelp_UTF8StringHandle * pchFile, Byte__Array * pvData, int32_t cubDataToRead));
IL2CPP_REGISTER_METHOD(0x0161CBB0, uint64_t, ISteamRemoteStorage_FileWriteAsync, (void * instancePtr, InteropHelp_UTF8StringHandle * pchFile, Byte__Array * pvData, uint32_t cubData));
IL2CPP_REGISTER_METHOD(0x0161CCD0, uint64_t, ISteamRemoteStorage_FileReadAsync, (void * instancePtr, InteropHelp_UTF8StringHandle * pchFile, uint32_t nOffset, uint32_t cubToRead));
IL2CPP_REGISTER_METHOD(0x0161CDF0, bool, ISteamRemoteStorage_FileReadAsyncComplete, (void * instancePtr, SteamAPICall_t hReadCall, Byte__Array * pvBuffer, uint32_t cubToRead));
IL2CPP_REGISTER_METHOD(0x0161CEC0, bool, ISteamRemoteStorage_FileForget, (void * instancePtr, InteropHelp_UTF8StringHandle * pchFile));
IL2CPP_REGISTER_METHOD(0x0161CFC0, bool, ISteamRemoteStorage_FileDelete, (void * instancePtr, InteropHelp_UTF8StringHandle * pchFile));
IL2CPP_REGISTER_METHOD(0x0161D0C0, uint64_t, ISteamRemoteStorage_FileShare, (void * instancePtr, InteropHelp_UTF8StringHandle * pchFile));
IL2CPP_REGISTER_METHOD(0x0161D1C0, bool, ISteamRemoteStorage_SetSyncPlatforms, (void * instancePtr, InteropHelp_UTF8StringHandle * pchFile, ERemoteStoragePlatform__Enum eRemoteStoragePlatform));
IL2CPP_REGISTER_METHOD(0x0161D2D0, uint64_t, ISteamRemoteStorage_FileWriteStreamOpen, (void * instancePtr, InteropHelp_UTF8StringHandle * pchFile));
IL2CPP_REGISTER_METHOD(0x0161D3D0, bool, ISteamRemoteStorage_FileWriteStreamWriteChunk, (void * instancePtr, UGCFileWriteStreamHandle_t writeHandle, Byte__Array * pvData, int32_t cubData));
IL2CPP_REGISTER_METHOD(0x0161D4A0, bool, ISteamRemoteStorage_FileWriteStreamClose, (void * instancePtr, UGCFileWriteStreamHandle_t writeHandle));
IL2CPP_REGISTER_METHOD(0x0161D550, bool, ISteamRemoteStorage_FileWriteStreamCancel, (void * instancePtr, UGCFileWriteStreamHandle_t writeHandle));
IL2CPP_REGISTER_METHOD(0x0161D600, bool, ISteamRemoteStorage_FileExists, (void * instancePtr, InteropHelp_UTF8StringHandle * pchFile));
IL2CPP_REGISTER_METHOD(0x0161D700, bool, ISteamRemoteStorage_FilePersisted, (void * instancePtr, InteropHelp_UTF8StringHandle * pchFile));
IL2CPP_REGISTER_METHOD(0x0161D800, int32_t, ISteamRemoteStorage_GetFileSize, (void * instancePtr, InteropHelp_UTF8StringHandle * pchFile));
IL2CPP_REGISTER_METHOD(0x0161D900, int64_t, ISteamRemoteStorage_GetFileTimestamp, (void * instancePtr, InteropHelp_UTF8StringHandle * pchFile));
IL2CPP_REGISTER_METHOD(0x0161DA00, ERemoteStoragePlatform__Enum, ISteamRemoteStorage_GetSyncPlatforms, (void * instancePtr, InteropHelp_UTF8StringHandle * pchFile));
IL2CPP_REGISTER_METHOD(0x0161DB00, int32_t, ISteamRemoteStorage_GetFileCount, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0161DBA0, void *, ISteamRemoteStorage_GetFileNameAndSize, (void * instancePtr, int32_t iFile, int32_t * pnFileSizeInBytes));
IL2CPP_REGISTER_METHOD(0x0161DC50, bool, ISteamRemoteStorage_GetQuota, (void * instancePtr, uint64_t * pnTotalBytes, uint64_t * puAvailableBytes));
IL2CPP_REGISTER_METHOD(0x0161DD10, bool, ISteamRemoteStorage_IsCloudEnabledForAccount, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0161DDB0, bool, ISteamRemoteStorage_IsCloudEnabledForApp, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0161DE50, void, ISteamRemoteStorage_SetCloudEnabledForApp, (void * instancePtr, bool bEnabled));
IL2CPP_REGISTER_METHOD(0x0161DF00, uint64_t, ISteamRemoteStorage_UGCDownload, (void * instancePtr, UGCHandle_t hContent, uint32_t unPriority));
IL2CPP_REGISTER_METHOD(0x0161DFB0, bool, ISteamRemoteStorage_GetUGCDownloadProgress, (void * instancePtr, UGCHandle_t hContent, int32_t * pnBytesDownloaded, int32_t * pnBytesExpected));
IL2CPP_REGISTER_METHOD(0x0161E080, bool, ISteamRemoteStorage_GetUGCDetails, (void * instancePtr, UGCHandle_t hContent, AppId_t * pnAppID, void * * ppchName, int32_t * pnFileSizeInBytes, CSteamID * pSteamIDOwner));
IL2CPP_REGISTER_METHOD(0x0161E170, int32_t, ISteamRemoteStorage_UGCRead, (void * instancePtr, UGCHandle_t hContent, Byte__Array * pvData, int32_t cubDataToRead, uint32_t cOffset, EUGCReadAction__Enum eAction));
IL2CPP_REGISTER_METHOD(0x0161E240, int32_t, ISteamRemoteStorage_GetCachedUGCCount, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0161E2E0, uint64_t, ISteamRemoteStorage_GetCachedUGCHandle, (void * instancePtr, int32_t iCachedContent));
IL2CPP_REGISTER_METHOD(0x0161E390, uint64_t, ISteamRemoteStorage_PublishWorkshopFile, (void * instancePtr, InteropHelp_UTF8StringHandle * pchFile, InteropHelp_UTF8StringHandle * pchPreviewFile, AppId_t nConsumerAppId, InteropHelp_UTF8StringHandle * pchTitle, InteropHelp_UTF8StringHandle * pchDescription, ERemoteStoragePublishedFileVisibility__Enum eVisibility, void * pTags, EWorkshopFileType__Enum eWorkshopFileType));
IL2CPP_REGISTER_METHOD(0x0161E620, uint64_t, ISteamRemoteStorage_CreatePublishedFileUpdateRequest, (void * instancePtr, PublishedFileId_t unPublishedFileId));
IL2CPP_REGISTER_METHOD(0x0161E6D0, bool, ISteamRemoteStorage_UpdatePublishedFileFile, (void * instancePtr, PublishedFileUpdateHandle_t updateHandle, InteropHelp_UTF8StringHandle * pchFile));
IL2CPP_REGISTER_METHOD(0x0161E7E0, bool, ISteamRemoteStorage_UpdatePublishedFilePreviewFile, (void * instancePtr, PublishedFileUpdateHandle_t updateHandle, InteropHelp_UTF8StringHandle * pchPreviewFile));
IL2CPP_REGISTER_METHOD(0x0161E8F0, bool, ISteamRemoteStorage_UpdatePublishedFileTitle, (void * instancePtr, PublishedFileUpdateHandle_t updateHandle, InteropHelp_UTF8StringHandle * pchTitle));
IL2CPP_REGISTER_METHOD(0x0161EA00, bool, ISteamRemoteStorage_UpdatePublishedFileDescription, (void * instancePtr, PublishedFileUpdateHandle_t updateHandle, InteropHelp_UTF8StringHandle * pchDescription));
IL2CPP_REGISTER_METHOD(0x0161EB10, bool, ISteamRemoteStorage_UpdatePublishedFileVisibility, (void * instancePtr, PublishedFileUpdateHandle_t updateHandle, ERemoteStoragePublishedFileVisibility__Enum eVisibility));
IL2CPP_REGISTER_METHOD(0x0161EBD0, bool, ISteamRemoteStorage_UpdatePublishedFileTags, (void * instancePtr, PublishedFileUpdateHandle_t updateHandle, void * pTags));
IL2CPP_REGISTER_METHOD(0x0161EC90, uint64_t, ISteamRemoteStorage_CommitPublishedFileUpdate, (void * instancePtr, PublishedFileUpdateHandle_t updateHandle));
IL2CPP_REGISTER_METHOD(0x0161ED40, uint64_t, ISteamRemoteStorage_GetPublishedFileDetails, (void * instancePtr, PublishedFileId_t unPublishedFileId, uint32_t unMaxSecondsOld));
IL2CPP_REGISTER_METHOD(0x0161EDF0, uint64_t, ISteamRemoteStorage_DeletePublishedFile, (void * instancePtr, PublishedFileId_t unPublishedFileId));
IL2CPP_REGISTER_METHOD(0x0161EEA0, uint64_t, ISteamRemoteStorage_EnumerateUserPublishedFiles, (void * instancePtr, uint32_t unStartIndex));
IL2CPP_REGISTER_METHOD(0x0161EF50, uint64_t, ISteamRemoteStorage_SubscribePublishedFile, (void * instancePtr, PublishedFileId_t unPublishedFileId));
IL2CPP_REGISTER_METHOD(0x0161F000, uint64_t, ISteamRemoteStorage_EnumerateUserSubscribedFiles, (void * instancePtr, uint32_t unStartIndex));
IL2CPP_REGISTER_METHOD(0x0161F0B0, uint64_t, ISteamRemoteStorage_UnsubscribePublishedFile, (void * instancePtr, PublishedFileId_t unPublishedFileId));
IL2CPP_REGISTER_METHOD(0x0161F160, bool, ISteamRemoteStorage_UpdatePublishedFileSetChangeDescription, (void * instancePtr, PublishedFileUpdateHandle_t updateHandle, InteropHelp_UTF8StringHandle * pchChangeDescription));
IL2CPP_REGISTER_METHOD(0x0161F270, uint64_t, ISteamRemoteStorage_GetPublishedItemVoteDetails, (void * instancePtr, PublishedFileId_t unPublishedFileId));
IL2CPP_REGISTER_METHOD(0x0161F320, uint64_t, ISteamRemoteStorage_UpdateUserPublishedItemVote, (void * instancePtr, PublishedFileId_t unPublishedFileId, bool bVoteUp));
IL2CPP_REGISTER_METHOD(0x0161F3E0, uint64_t, ISteamRemoteStorage_GetUserPublishedItemVoteDetails, (void * instancePtr, PublishedFileId_t unPublishedFileId));
IL2CPP_REGISTER_METHOD(0x0161F490, uint64_t, ISteamRemoteStorage_EnumerateUserSharedWorkshopFiles, (void * instancePtr, CSteamID steamId, uint32_t unStartIndex, void * pRequiredTags, void * pExcludedTags));
IL2CPP_REGISTER_METHOD(0x0161F560, uint64_t, ISteamRemoteStorage_PublishVideo, (void * instancePtr, EWorkshopVideoProvider__Enum eVideoProvider, InteropHelp_UTF8StringHandle * pchVideoAccount, InteropHelp_UTF8StringHandle * pchVideoIdentifier, InteropHelp_UTF8StringHandle * pchPreviewFile, AppId_t nConsumerAppId, InteropHelp_UTF8StringHandle * pchTitle, InteropHelp_UTF8StringHandle * pchDescription, ERemoteStoragePublishedFileVisibility__Enum eVisibility, void * pTags));
IL2CPP_REGISTER_METHOD(0x0161F830, uint64_t, ISteamRemoteStorage_SetUserPublishedFileAction, (void * instancePtr, PublishedFileId_t unPublishedFileId, EWorkshopFileAction__Enum eAction));
IL2CPP_REGISTER_METHOD(0x0161F8E0, uint64_t, ISteamRemoteStorage_EnumeratePublishedFilesByUserAction, (void * instancePtr, EWorkshopFileAction__Enum eAction, uint32_t unStartIndex));
IL2CPP_REGISTER_METHOD(0x0161F990, uint64_t, ISteamRemoteStorage_EnumeratePublishedWorkshopFiles, (void * instancePtr, EWorkshopEnumerationType__Enum eEnumerationType, uint32_t unStartIndex, uint32_t unCount, uint32_t unDays, void * pTags, void * pUserTags));
IL2CPP_REGISTER_METHOD(0x0161FA60, uint64_t, ISteamRemoteStorage_UGCDownloadToLocation, (void * instancePtr, UGCHandle_t hContent, InteropHelp_UTF8StringHandle * pchLocation, uint32_t unPriority));
IL2CPP_REGISTER_METHOD(0x0161FB80, uint32_t, ISteamScreenshots_WriteScreenshot, (void * instancePtr, Byte__Array * pubRGB, uint32_t cubRGB, int32_t nWidth, int32_t nHeight));
IL2CPP_REGISTER_METHOD(0x0161FC50, uint32_t, ISteamScreenshots_AddScreenshotToLibrary, (void * instancePtr, InteropHelp_UTF8StringHandle * pchFilename, InteropHelp_UTF8StringHandle * pchThumbnailFilename, int32_t nWidth, int32_t nHeight));
IL2CPP_REGISTER_METHOD(0x0161FDD0, void, ISteamScreenshots_TriggerScreenshot, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x0161FE70, void, ISteamScreenshots_HookScreenshots, (void * instancePtr, bool bHook));
IL2CPP_REGISTER_METHOD(0x0161FF20, bool, ISteamScreenshots_SetLocation, (void * instancePtr, ScreenshotHandle hScreenshot, InteropHelp_UTF8StringHandle * pchLocation));
IL2CPP_REGISTER_METHOD(0x01620020, bool, ISteamScreenshots_TagUser, (void * instancePtr, ScreenshotHandle hScreenshot, CSteamID steamID));
IL2CPP_REGISTER_METHOD(0x016200E0, bool, ISteamScreenshots_TagPublishedFile, (void * instancePtr, ScreenshotHandle hScreenshot, PublishedFileId_t unPublishedFileID));
IL2CPP_REGISTER_METHOD(0x016201A0, bool, ISteamScreenshots_IsScreenshotsHooked, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01620240, uint32_t, ISteamScreenshots_AddVRScreenshotToLibrary, (void * instancePtr, EVRScreenshotType__Enum_1 eType, InteropHelp_UTF8StringHandle * pchFilename, InteropHelp_UTF8StringHandle * pchVRFilename));
IL2CPP_REGISTER_METHOD(0x016203B0, uint64_t, ISteamUGC_CreateQueryUserUGCRequest, (void * instancePtr, AccountID_t unAccountID, EUserUGCList__Enum eListType, EUGCMatchingUGCType__Enum eMatchingUGCType, EUserUGCListSortOrder__Enum eSortOrder, AppId_t nCreatorAppID, AppId_t nConsumerAppID, uint32_t unPage));
IL2CPP_REGISTER_METHOD(0x01620480, uint64_t, ISteamUGC_CreateQueryAllUGCRequest, (void * instancePtr, EUGCQuery__Enum eQueryType, EUGCMatchingUGCType__Enum eMatchingeMatchingUGCTypeFileType, AppId_t nCreatorAppID, AppId_t nConsumerAppID, uint32_t unPage));
IL2CPP_REGISTER_METHOD(0x01620550, uint64_t, ISteamUGC_CreateQueryAllUGCRequest0, (void * instancePtr, EUGCQuery__Enum eQueryType, EUGCMatchingUGCType__Enum eMatchingeMatchingUGCTypeFileType, AppId_t nCreatorAppID, AppId_t nConsumerAppID, InteropHelp_UTF8StringHandle * pchCursor));
IL2CPP_REGISTER_METHOD(0x016206A0, uint64_t, ISteamUGC_CreateQueryUGCDetailsRequest, (void * instancePtr, PublishedFileId_t__Array * pvecPublishedFileID, uint32_t unNumPublishedFileIDs));
IL2CPP_REGISTER_METHOD(0x01620760, uint64_t, ISteamUGC_SendQueryUGCRequest, (void * instancePtr, UGCQueryHandle_t handle));
IL2CPP_REGISTER_METHOD(0x01620810, bool, ISteamUGC_GetQueryUGCResult, (void * instancePtr, UGCQueryHandle_t handle, uint32_t index, SteamUGCDetails_t * pDetails));
IL2CPP_REGISTER_METHOD(0x016209A0, bool, ISteamUGC_GetQueryUGCPreviewURL, (void * instancePtr, UGCQueryHandle_t handle, uint32_t index, void * pchURL, uint32_t cchURLSize));
IL2CPP_REGISTER_METHOD(0x01620A80, bool, ISteamUGC_GetQueryUGCMetadata, (void * instancePtr, UGCQueryHandle_t handle, uint32_t index, void * pchMetadata, uint32_t cchMetadatasize));
IL2CPP_REGISTER_METHOD(0x01620B60, bool, ISteamUGC_GetQueryUGCChildren, (void * instancePtr, UGCQueryHandle_t handle, uint32_t index, PublishedFileId_t__Array * pvecPublishedFileID, uint32_t cMaxEntries));
IL2CPP_REGISTER_METHOD(0x01620C40, bool, ISteamUGC_GetQueryUGCStatistic, (void * instancePtr, UGCQueryHandle_t handle, uint32_t index, EItemStatistic__Enum eStatType, uint64_t * pStatValue));
IL2CPP_REGISTER_METHOD(0x01620D20, uint32_t, ISteamUGC_GetQueryUGCNumAdditionalPreviews, (void * instancePtr, UGCQueryHandle_t handle, uint32_t index));
IL2CPP_REGISTER_METHOD(0x01620DD0, bool, ISteamUGC_GetQueryUGCAdditionalPreview, (void * instancePtr, UGCQueryHandle_t handle, uint32_t index, uint32_t previewIndex, void * pchURLOrVideoID, uint32_t cchURLSize, void * pchOriginalFileName, uint32_t cchOriginalFileNameSize, EItemPreviewType__Enum * pPreviewType));
IL2CPP_REGISTER_METHOD(0x01620EE0, uint32_t, ISteamUGC_GetQueryUGCNumKeyValueTags, (void * instancePtr, UGCQueryHandle_t handle, uint32_t index));
IL2CPP_REGISTER_METHOD(0x01620F90, bool, ISteamUGC_GetQueryUGCKeyValueTag, (void * instancePtr, UGCQueryHandle_t handle, uint32_t index, uint32_t keyValueTagIndex, void * pchKey, uint32_t cchKeySize, void * pchValue, uint32_t cchValueSize));
IL2CPP_REGISTER_METHOD(0x01621090, bool, ISteamUGC_GetQueryUGCKeyValueTag0, (void * instancePtr, UGCQueryHandle_t handle, uint32_t index, InteropHelp_UTF8StringHandle * pchKey, void * pchValue, uint32_t cchValueSize));
IL2CPP_REGISTER_METHOD(0x016211C0, bool, ISteamUGC_ReleaseQueryUGCRequest, (void * instancePtr, UGCQueryHandle_t handle));
IL2CPP_REGISTER_METHOD(0x01621270, bool, ISteamUGC_AddRequiredTag, (void * instancePtr, UGCQueryHandle_t handle, InteropHelp_UTF8StringHandle * pTagName));
IL2CPP_REGISTER_METHOD(0x01621380, bool, ISteamUGC_AddExcludedTag, (void * instancePtr, UGCQueryHandle_t handle, InteropHelp_UTF8StringHandle * pTagName));
IL2CPP_REGISTER_METHOD(0x01621490, bool, ISteamUGC_SetReturnOnlyIDs, (void * instancePtr, UGCQueryHandle_t handle, bool bReturnOnlyIDs));
IL2CPP_REGISTER_METHOD(0x01621550, bool, ISteamUGC_SetReturnKeyValueTags, (void * instancePtr, UGCQueryHandle_t handle, bool bReturnKeyValueTags));
IL2CPP_REGISTER_METHOD(0x01621610, bool, ISteamUGC_SetReturnLongDescription, (void * instancePtr, UGCQueryHandle_t handle, bool bReturnLongDescription));
IL2CPP_REGISTER_METHOD(0x016216D0, bool, ISteamUGC_SetReturnMetadata, (void * instancePtr, UGCQueryHandle_t handle, bool bReturnMetadata));
IL2CPP_REGISTER_METHOD(0x01621790, bool, ISteamUGC_SetReturnChildren, (void * instancePtr, UGCQueryHandle_t handle, bool bReturnChildren));
IL2CPP_REGISTER_METHOD(0x01621850, bool, ISteamUGC_SetReturnAdditionalPreviews, (void * instancePtr, UGCQueryHandle_t handle, bool bReturnAdditionalPreviews));
IL2CPP_REGISTER_METHOD(0x01621910, bool, ISteamUGC_SetReturnTotalOnly, (void * instancePtr, UGCQueryHandle_t handle, bool bReturnTotalOnly));
IL2CPP_REGISTER_METHOD(0x016219D0, bool, ISteamUGC_SetReturnPlaytimeStats, (void * instancePtr, UGCQueryHandle_t handle, uint32_t unDays));
IL2CPP_REGISTER_METHOD(0x01621A90, bool, ISteamUGC_SetLanguage, (void * instancePtr, UGCQueryHandle_t handle, InteropHelp_UTF8StringHandle * pchLanguage));
IL2CPP_REGISTER_METHOD(0x01621BA0, bool, ISteamUGC_SetAllowCachedResponse, (void * instancePtr, UGCQueryHandle_t handle, uint32_t unMaxAgeSeconds));
IL2CPP_REGISTER_METHOD(0x01621C60, bool, ISteamUGC_SetCloudFileNameFilter, (void * instancePtr, UGCQueryHandle_t handle, InteropHelp_UTF8StringHandle * pMatchCloudFileName));
IL2CPP_REGISTER_METHOD(0x01621D70, bool, ISteamUGC_SetMatchAnyTag, (void * instancePtr, UGCQueryHandle_t handle, bool bMatchAnyTag));
IL2CPP_REGISTER_METHOD(0x01621E30, bool, ISteamUGC_SetSearchText, (void * instancePtr, UGCQueryHandle_t handle, InteropHelp_UTF8StringHandle * pSearchText));
IL2CPP_REGISTER_METHOD(0x01621F40, bool, ISteamUGC_SetRankedByTrendDays, (void * instancePtr, UGCQueryHandle_t handle, uint32_t unDays));
IL2CPP_REGISTER_METHOD(0x01622000, bool, ISteamUGC_AddRequiredKeyValueTag, (void * instancePtr, UGCQueryHandle_t handle, InteropHelp_UTF8StringHandle * pKey, InteropHelp_UTF8StringHandle * pValue));
IL2CPP_REGISTER_METHOD(0x01622180, uint64_t, ISteamUGC_RequestUGCDetails, (void * instancePtr, PublishedFileId_t nPublishedFileID, uint32_t unMaxAgeSeconds));
IL2CPP_REGISTER_METHOD(0x01622230, uint64_t, ISteamUGC_CreateItem, (void * instancePtr, AppId_t nConsumerAppId, EWorkshopFileType__Enum eFileType));
IL2CPP_REGISTER_METHOD(0x016222E0, uint64_t, ISteamUGC_StartItemUpdate, (void * instancePtr, AppId_t nConsumerAppId, PublishedFileId_t nPublishedFileID));
IL2CPP_REGISTER_METHOD(0x01622390, bool, ISteamUGC_SetItemTitle, (void * instancePtr, UGCUpdateHandle_t handle, InteropHelp_UTF8StringHandle * pchTitle));
IL2CPP_REGISTER_METHOD(0x016224A0, bool, ISteamUGC_SetItemDescription, (void * instancePtr, UGCUpdateHandle_t handle, InteropHelp_UTF8StringHandle * pchDescription));
IL2CPP_REGISTER_METHOD(0x016225B0, bool, ISteamUGC_SetItemUpdateLanguage, (void * instancePtr, UGCUpdateHandle_t handle, InteropHelp_UTF8StringHandle * pchLanguage));
IL2CPP_REGISTER_METHOD(0x016226C0, bool, ISteamUGC_SetItemMetadata, (void * instancePtr, UGCUpdateHandle_t handle, InteropHelp_UTF8StringHandle * pchMetaData));
IL2CPP_REGISTER_METHOD(0x016227D0, bool, ISteamUGC_SetItemVisibility, (void * instancePtr, UGCUpdateHandle_t handle, ERemoteStoragePublishedFileVisibility__Enum eVisibility));
IL2CPP_REGISTER_METHOD(0x01622890, bool, ISteamUGC_SetItemTags, (void * instancePtr, UGCUpdateHandle_t updateHandle, void * pTags));
IL2CPP_REGISTER_METHOD(0x01622950, bool, ISteamUGC_SetItemContent, (void * instancePtr, UGCUpdateHandle_t handle, InteropHelp_UTF8StringHandle * pszContentFolder));
IL2CPP_REGISTER_METHOD(0x01622A60, bool, ISteamUGC_SetItemPreview, (void * instancePtr, UGCUpdateHandle_t handle, InteropHelp_UTF8StringHandle * pszPreviewFile));
IL2CPP_REGISTER_METHOD(0x01622B70, bool, ISteamUGC_SetAllowLegacyUpload, (void * instancePtr, UGCUpdateHandle_t handle, bool bAllowLegacyUpload));
IL2CPP_REGISTER_METHOD(0x01622C30, bool, ISteamUGC_RemoveAllItemKeyValueTags, (void * instancePtr, UGCUpdateHandle_t handle));
IL2CPP_REGISTER_METHOD(0x01622CE0, bool, ISteamUGC_RemoveItemKeyValueTags, (void * instancePtr, UGCUpdateHandle_t handle, InteropHelp_UTF8StringHandle * pchKey));
IL2CPP_REGISTER_METHOD(0x01622DF0, bool, ISteamUGC_AddItemKeyValueTag, (void * instancePtr, UGCUpdateHandle_t handle, InteropHelp_UTF8StringHandle * pchKey, InteropHelp_UTF8StringHandle * pchValue));
IL2CPP_REGISTER_METHOD(0x01622F70, bool, ISteamUGC_AddItemPreviewFile, (void * instancePtr, UGCUpdateHandle_t handle, InteropHelp_UTF8StringHandle * pszPreviewFile, EItemPreviewType__Enum type));
IL2CPP_REGISTER_METHOD(0x01623090, bool, ISteamUGC_AddItemPreviewVideo, (void * instancePtr, UGCUpdateHandle_t handle, InteropHelp_UTF8StringHandle * pszVideoID));
IL2CPP_REGISTER_METHOD(0x016231A0, bool, ISteamUGC_UpdateItemPreviewFile, (void * instancePtr, UGCUpdateHandle_t handle, uint32_t index, InteropHelp_UTF8StringHandle * pszPreviewFile));
IL2CPP_REGISTER_METHOD(0x016232C0, bool, ISteamUGC_UpdateItemPreviewVideo, (void * instancePtr, UGCUpdateHandle_t handle, uint32_t index, InteropHelp_UTF8StringHandle * pszVideoID));
IL2CPP_REGISTER_METHOD(0x016233E0, bool, ISteamUGC_RemoveItemPreview, (void * instancePtr, UGCUpdateHandle_t handle, uint32_t index));
IL2CPP_REGISTER_METHOD(0x016234A0, uint64_t, ISteamUGC_SubmitItemUpdate, (void * instancePtr, UGCUpdateHandle_t handle, InteropHelp_UTF8StringHandle * pchChangeNote));
IL2CPP_REGISTER_METHOD(0x016235A0, EItemUpdateStatus__Enum, ISteamUGC_GetItemUpdateProgress, (void * instancePtr, UGCUpdateHandle_t handle, uint64_t * punBytesProcessed, uint64_t * punBytesTotal));
IL2CPP_REGISTER_METHOD(0x01623660, uint64_t, ISteamUGC_SetUserItemVote, (void * instancePtr, PublishedFileId_t nPublishedFileID, bool bVoteUp));
IL2CPP_REGISTER_METHOD(0x01623720, uint64_t, ISteamUGC_GetUserItemVote, (void * instancePtr, PublishedFileId_t nPublishedFileID));
IL2CPP_REGISTER_METHOD(0x016237D0, uint64_t, ISteamUGC_AddItemToFavorites, (void * instancePtr, AppId_t nAppId, PublishedFileId_t nPublishedFileID));
IL2CPP_REGISTER_METHOD(0x01623880, uint64_t, ISteamUGC_RemoveItemFromFavorites, (void * instancePtr, AppId_t nAppId, PublishedFileId_t nPublishedFileID));
IL2CPP_REGISTER_METHOD(0x01623930, uint64_t, ISteamUGC_SubscribeItem, (void * instancePtr, PublishedFileId_t nPublishedFileID));
IL2CPP_REGISTER_METHOD(0x016239E0, uint64_t, ISteamUGC_UnsubscribeItem, (void * instancePtr, PublishedFileId_t nPublishedFileID));
IL2CPP_REGISTER_METHOD(0x01623A90, uint32_t, ISteamUGC_GetNumSubscribedItems, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01623B30, uint32_t, ISteamUGC_GetSubscribedItems, (void * instancePtr, PublishedFileId_t__Array * pvecPublishedFileID, uint32_t cMaxEntries));
IL2CPP_REGISTER_METHOD(0x01623BF0, uint32_t, ISteamUGC_GetItemState, (void * instancePtr, PublishedFileId_t nPublishedFileID));
IL2CPP_REGISTER_METHOD(0x01623CA0, bool, ISteamUGC_GetItemInstallInfo, (void * instancePtr, PublishedFileId_t nPublishedFileID, uint64_t * punSizeOnDisk, void * pchFolder, uint32_t cchFolderSize, uint32_t * punTimeStamp));
IL2CPP_REGISTER_METHOD(0x01623D90, bool, ISteamUGC_GetItemDownloadInfo, (void * instancePtr, PublishedFileId_t nPublishedFileID, uint64_t * punBytesDownloaded, uint64_t * punBytesTotal));
IL2CPP_REGISTER_METHOD(0x01623E60, bool, ISteamUGC_DownloadItem, (void * instancePtr, PublishedFileId_t nPublishedFileID, bool bHighPriority));
IL2CPP_REGISTER_METHOD(0x01623F20, bool, ISteamUGC_BInitWorkshopForGameServer, (void * instancePtr, DepotId_t unWorkshopDepotID, InteropHelp_UTF8StringHandle * pszFolder));
IL2CPP_REGISTER_METHOD(0x01624020, void, ISteamUGC_SuspendDownloads, (void * instancePtr, bool bSuspend));
IL2CPP_REGISTER_METHOD(0x016240D0, uint64_t, ISteamUGC_StartPlaytimeTracking, (void * instancePtr, PublishedFileId_t__Array * pvecPublishedFileID, uint32_t unNumPublishedFileIDs));
IL2CPP_REGISTER_METHOD(0x01624190, uint64_t, ISteamUGC_StopPlaytimeTracking, (void * instancePtr, PublishedFileId_t__Array * pvecPublishedFileID, uint32_t unNumPublishedFileIDs));
IL2CPP_REGISTER_METHOD(0x01624250, uint64_t, ISteamUGC_StopPlaytimeTrackingForAllItems, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016242F0, uint64_t, ISteamUGC_AddDependency, (void * instancePtr, PublishedFileId_t nParentPublishedFileID, PublishedFileId_t nChildPublishedFileID));
IL2CPP_REGISTER_METHOD(0x016243A0, uint64_t, ISteamUGC_RemoveDependency, (void * instancePtr, PublishedFileId_t nParentPublishedFileID, PublishedFileId_t nChildPublishedFileID));
IL2CPP_REGISTER_METHOD(0x01624450, uint64_t, ISteamUGC_AddAppDependency, (void * instancePtr, PublishedFileId_t nPublishedFileID, AppId_t nAppID));
IL2CPP_REGISTER_METHOD(0x01624500, uint64_t, ISteamUGC_RemoveAppDependency, (void * instancePtr, PublishedFileId_t nPublishedFileID, AppId_t nAppID));
IL2CPP_REGISTER_METHOD(0x016245B0, uint64_t, ISteamUGC_GetAppDependencies, (void * instancePtr, PublishedFileId_t nPublishedFileID));
IL2CPP_REGISTER_METHOD(0x01624660, uint64_t, ISteamUGC_DeleteItem, (void * instancePtr, PublishedFileId_t nPublishedFileID));
IL2CPP_REGISTER_METHOD(0x01624710, int32_t, ISteamUser_GetHSteamUser, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016247B0, bool, ISteamUser_BLoggedOn, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01624850, uint64_t, ISteamUser_GetSteamID, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016248F0, int32_t, ISteamUser_InitiateGameConnection, (void * instancePtr, Byte__Array * pAuthBlob, int32_t cbMaxAuthBlob, CSteamID steamIDGameServer, uint32_t unIPServer, uint16_t usPortServer, bool bSecure));
IL2CPP_REGISTER_METHOD(0x016249E0, void, ISteamUser_TerminateGameConnection, (void * instancePtr, uint32_t unIPServer, uint16_t usPortServer));
IL2CPP_REGISTER_METHOD(0x01624A90, void, ISteamUser_TrackAppUsageEvent, (void * instancePtr, CGameID gameID, int32_t eAppUsageEvent, InteropHelp_UTF8StringHandle * pchExtraInfo));
IL2CPP_REGISTER_METHOD(0x01624BA0, bool, ISteamUser_GetUserDataFolder, (void * instancePtr, void * pchBuffer, int32_t cubBuffer));
IL2CPP_REGISTER_METHOD(0x01624C60, void, ISteamUser_StartVoiceRecording, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01624D00, void, ISteamUser_StopVoiceRecording, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01624DA0, EVoiceResult__Enum, ISteamUser_GetAvailableVoice, (void * instancePtr, uint32_t * pcbCompressed, void * pcbUncompressed_Deprecated, uint32_t nUncompressedVoiceDesiredSampleRate_Deprecated));
IL2CPP_REGISTER_METHOD(0x01624E60, EVoiceResult__Enum, ISteamUser_GetVoice, (void * instancePtr, bool bWantCompressed, Byte__Array * pDestBuffer, uint32_t cbDestBufferSize, uint32_t * nBytesWritten, bool bWantUncompressed_Deprecated, void * pUncompressedDestBuffer_Deprecated, uint32_t cbUncompressedDestBufferSize_Deprecated, void * nUncompressBytesWritten_Deprecated, uint32_t nUncompressedVoiceDesiredSampleRate_Deprecated));
IL2CPP_REGISTER_METHOD(0x01624F50, EVoiceResult__Enum, ISteamUser_DecompressVoice, (void * instancePtr, Byte__Array * pCompressed, uint32_t cbCompressed, Byte__Array * pDestBuffer, uint32_t cbDestBufferSize, uint32_t * nBytesWritten, uint32_t nDesiredSampleRate));
IL2CPP_REGISTER_METHOD(0x01625030, uint32_t, ISteamUser_GetVoiceOptimalSampleRate, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016250D0, uint32_t, ISteamUser_GetAuthSessionTicket, (void * instancePtr, Byte__Array * pTicket, int32_t cbMaxTicket, uint32_t * pcbTicket));
IL2CPP_REGISTER_METHOD(0x016251A0, EBeginAuthSessionResult__Enum, ISteamUser_BeginAuthSession, (void * instancePtr, Byte__Array * pAuthTicket, int32_t cbAuthTicket, CSteamID steamID));
IL2CPP_REGISTER_METHOD(0x01625270, void, ISteamUser_EndAuthSession, (void * instancePtr, CSteamID steamID));
IL2CPP_REGISTER_METHOD(0x01625320, void, ISteamUser_CancelAuthTicket, (void * instancePtr, HAuthTicket hAuthTicket));
IL2CPP_REGISTER_METHOD(0x016253D0, EUserHasLicenseForAppResult__Enum, ISteamUser_UserHasLicenseForApp, (void * instancePtr, CSteamID steamID, AppId_t appID));
IL2CPP_REGISTER_METHOD(0x01625480, bool, ISteamUser_BIsBehindNAT, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01625520, void, ISteamUser_AdvertiseGame, (void * instancePtr, CSteamID steamIDGameServer, uint32_t unIPServer, uint16_t usPortServer));
IL2CPP_REGISTER_METHOD(0x016255F0, uint64_t, ISteamUser_RequestEncryptedAppTicket, (void * instancePtr, Byte__Array * pDataToInclude, int32_t cbDataToInclude));
IL2CPP_REGISTER_METHOD(0x016256B0, bool, ISteamUser_GetEncryptedAppTicket, (void * instancePtr, Byte__Array * pTicket, int32_t cbMaxTicket, uint32_t * pcbTicket));
IL2CPP_REGISTER_METHOD(0x01625780, int32_t, ISteamUser_GetGameBadgeLevel, (void * instancePtr, int32_t nSeries, bool bFoil));
IL2CPP_REGISTER_METHOD(0x01625830, int32_t, ISteamUser_GetPlayerSteamLevel, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016258D0, uint64_t, ISteamUser_RequestStoreAuthURL, (void * instancePtr, InteropHelp_UTF8StringHandle * pchRedirectURL));
IL2CPP_REGISTER_METHOD(0x016259D0, bool, ISteamUser_BIsPhoneVerified, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01625A70, bool, ISteamUser_BIsTwoFactorEnabled, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01625B10, bool, ISteamUser_BIsPhoneIdentifying, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01625BB0, bool, ISteamUser_BIsPhoneRequiringVerification, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01625C50, uint64_t, ISteamUser_GetMarketEligibility, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01625CF0, uint64_t, ISteamUser_GetDurationControl, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01625D90, bool, ISteamUserStats_RequestCurrentStats, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01625E30, bool, ISteamUserStats_GetStat, (void * instancePtr, InteropHelp_UTF8StringHandle * pchName, int32_t * pData));
IL2CPP_REGISTER_METHOD(0x01625F40, bool, ISteamUserStats_GetStat0, (void * instancePtr, InteropHelp_UTF8StringHandle * pchName, float * pData));
IL2CPP_REGISTER_METHOD(0x01626050, bool, ISteamUserStats_SetStat, (void * instancePtr, InteropHelp_UTF8StringHandle * pchName, int32_t nData));
IL2CPP_REGISTER_METHOD(0x01626160, bool, ISteamUserStats_SetStat0, (void * instancePtr, InteropHelp_UTF8StringHandle * pchName, float fData));
IL2CPP_REGISTER_METHOD(0x01626270, bool, ISteamUserStats_UpdateAvgRateStat, (void * instancePtr, InteropHelp_UTF8StringHandle * pchName, float flCountThisSession, double dSessionLength));
IL2CPP_REGISTER_METHOD(0x01626390, bool, ISteamUserStats_GetAchievement, (void * instancePtr, InteropHelp_UTF8StringHandle * pchName, bool * pbAchieved));
IL2CPP_REGISTER_METHOD(0x016264B0, bool, ISteamUserStats_SetAchievement, (void * instancePtr, InteropHelp_UTF8StringHandle * pchName));
IL2CPP_REGISTER_METHOD(0x016265B0, bool, ISteamUserStats_ClearAchievement, (void * instancePtr, InteropHelp_UTF8StringHandle * pchName));
IL2CPP_REGISTER_METHOD(0x016266B0, bool, ISteamUserStats_GetAchievementAndUnlockTime, (void * instancePtr, InteropHelp_UTF8StringHandle * pchName, bool * pbAchieved, uint32_t * punUnlockTime));
IL2CPP_REGISTER_METHOD(0x016267E0, bool, ISteamUserStats_StoreStats, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01626880, int32_t, ISteamUserStats_GetAchievementIcon, (void * instancePtr, InteropHelp_UTF8StringHandle * pchName));
IL2CPP_REGISTER_METHOD(0x01626980, void *, ISteamUserStats_GetAchievementDisplayAttribute, (void * instancePtr, InteropHelp_UTF8StringHandle * pchName, InteropHelp_UTF8StringHandle * pchKey));
IL2CPP_REGISTER_METHOD(0x01626AF0, bool, ISteamUserStats_IndicateAchievementProgress, (void * instancePtr, InteropHelp_UTF8StringHandle * pchName, uint32_t nCurProgress, uint32_t nMaxProgress));
IL2CPP_REGISTER_METHOD(0x01626C10, uint32_t, ISteamUserStats_GetNumAchievements, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01626CB0, void *, ISteamUserStats_GetAchievementName, (void * instancePtr, uint32_t iAchievement));
IL2CPP_REGISTER_METHOD(0x01626D60, uint64_t, ISteamUserStats_RequestUserStats, (void * instancePtr, CSteamID steamIDUser));
IL2CPP_REGISTER_METHOD(0x01626E10, bool, ISteamUserStats_GetUserStat, (void * instancePtr, CSteamID steamIDUser, InteropHelp_UTF8StringHandle * pchName, int32_t * pData));
IL2CPP_REGISTER_METHOD(0x01626F30, bool, ISteamUserStats_GetUserStat0, (void * instancePtr, CSteamID steamIDUser, InteropHelp_UTF8StringHandle * pchName, float * pData));
IL2CPP_REGISTER_METHOD(0x01627050, bool, ISteamUserStats_GetUserAchievement, (void * instancePtr, CSteamID steamIDUser, InteropHelp_UTF8StringHandle * pchName, bool * pbAchieved));
IL2CPP_REGISTER_METHOD(0x01627180, bool, ISteamUserStats_GetUserAchievementAndUnlockTime, (void * instancePtr, CSteamID steamIDUser, InteropHelp_UTF8StringHandle * pchName, bool * pbAchieved, uint32_t * punUnlockTime));
IL2CPP_REGISTER_METHOD(0x016272C0, bool, ISteamUserStats_ResetAllStats, (void * instancePtr, bool bAchievementsToo));
IL2CPP_REGISTER_METHOD(0x01627370, uint64_t, ISteamUserStats_FindOrCreateLeaderboard, (void * instancePtr, InteropHelp_UTF8StringHandle * pchLeaderboardName, ELeaderboardSortMethod__Enum eLeaderboardSortMethod, ELeaderboardDisplayType__Enum eLeaderboardDisplayType));
IL2CPP_REGISTER_METHOD(0x01627490, uint64_t, ISteamUserStats_FindLeaderboard, (void * instancePtr, InteropHelp_UTF8StringHandle * pchLeaderboardName));
IL2CPP_REGISTER_METHOD(0x01627590, void *, ISteamUserStats_GetLeaderboardName, (void * instancePtr, SteamLeaderboard_t hSteamLeaderboard));
IL2CPP_REGISTER_METHOD(0x01627640, int32_t, ISteamUserStats_GetLeaderboardEntryCount, (void * instancePtr, SteamLeaderboard_t hSteamLeaderboard));
IL2CPP_REGISTER_METHOD(0x016276F0, ELeaderboardSortMethod__Enum, ISteamUserStats_GetLeaderboardSortMethod, (void * instancePtr, SteamLeaderboard_t hSteamLeaderboard));
IL2CPP_REGISTER_METHOD(0x016277A0, ELeaderboardDisplayType__Enum, ISteamUserStats_GetLeaderboardDisplayType, (void * instancePtr, SteamLeaderboard_t hSteamLeaderboard));
IL2CPP_REGISTER_METHOD(0x01627850, uint64_t, ISteamUserStats_DownloadLeaderboardEntries, (void * instancePtr, SteamLeaderboard_t hSteamLeaderboard, ELeaderboardDataRequest__Enum eLeaderboardDataRequest, int32_t nRangeStart, int32_t nRangeEnd));
IL2CPP_REGISTER_METHOD(0x01627920, uint64_t, ISteamUserStats_DownloadLeaderboardEntriesForUsers, (void * instancePtr, SteamLeaderboard_t hSteamLeaderboard, CSteamID__Array * prgUsers, int32_t cUsers));
IL2CPP_REGISTER_METHOD(0x016279F0, bool, ISteamUserStats_GetDownloadedLeaderboardEntry, (void * instancePtr, SteamLeaderboardEntries_t hSteamLeaderboardEntries, int32_t index, LeaderboardEntry_t * pLeaderboardEntry, Int32__Array * pDetails, int32_t cDetailsMax));
IL2CPP_REGISTER_METHOD(0x01627AE0, uint64_t, ISteamUserStats_UploadLeaderboardScore, (void * instancePtr, SteamLeaderboard_t hSteamLeaderboard, ELeaderboardUploadScoreMethod__Enum eLeaderboardUploadScoreMethod, int32_t nScore, Int32__Array * pScoreDetails, int32_t cScoreDetailsCount));
IL2CPP_REGISTER_METHOD(0x01627BD0, uint64_t, ISteamUserStats_AttachLeaderboardUGC, (void * instancePtr, SteamLeaderboard_t hSteamLeaderboard, UGCHandle_t hUGC));
IL2CPP_REGISTER_METHOD(0x01627C80, uint64_t, ISteamUserStats_GetNumberOfCurrentPlayers, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01627D20, uint64_t, ISteamUserStats_RequestGlobalAchievementPercentages, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01627DC0, int32_t, ISteamUserStats_GetMostAchievedAchievementInfo, (void * instancePtr, void * pchName, uint32_t unNameBufLen, float * pflPercent, bool * pbAchieved));
IL2CPP_REGISTER_METHOD(0x01627EB0, int32_t, ISteamUserStats_GetNextMostAchievedAchievementInfo, (void * instancePtr, int32_t iIteratorPrevious, void * pchName, uint32_t unNameBufLen, float * pflPercent, bool * pbAchieved));
IL2CPP_REGISTER_METHOD(0x01627FB0, bool, ISteamUserStats_GetAchievementAchievedPercent, (void * instancePtr, InteropHelp_UTF8StringHandle * pchName, float * pflPercent));
IL2CPP_REGISTER_METHOD(0x016280C0, uint64_t, ISteamUserStats_RequestGlobalStats, (void * instancePtr, int32_t nHistoryDays));
IL2CPP_REGISTER_METHOD(0x01628170, bool, ISteamUserStats_GetGlobalStat, (void * instancePtr, InteropHelp_UTF8StringHandle * pchStatName, int64_t * pData));
IL2CPP_REGISTER_METHOD(0x01628280, bool, ISteamUserStats_GetGlobalStat0, (void * instancePtr, InteropHelp_UTF8StringHandle * pchStatName, double * pData));
IL2CPP_REGISTER_METHOD(0x01628390, int32_t, ISteamUserStats_GetGlobalStatHistory, (void * instancePtr, InteropHelp_UTF8StringHandle * pchStatName, Int64__Array * pData, uint32_t cubData));
IL2CPP_REGISTER_METHOD(0x016284B0, int32_t, ISteamUserStats_GetGlobalStatHistory0, (void * instancePtr, InteropHelp_UTF8StringHandle * pchStatName, Double__Array * pData, uint32_t cubData));
IL2CPP_REGISTER_METHOD(0x016285D0, uint32_t, ISteamUtils_GetSecondsSinceAppActive, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01628670, uint32_t, ISteamUtils_GetSecondsSinceComputerActive, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01628710, EUniverse__Enum, ISteamUtils_GetConnectedUniverse, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016287B0, uint32_t, ISteamUtils_GetServerRealTime, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01628850, void *, ISteamUtils_GetIPCountry, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016288F0, bool, ISteamUtils_GetImageSize, (void * instancePtr, int32_t iImage, uint32_t * pnWidth, uint32_t * pnHeight));
IL2CPP_REGISTER_METHOD(0x016289C0, bool, ISteamUtils_GetImageRGBA, (void * instancePtr, int32_t iImage, Byte__Array * pubDest, int32_t nDestBufferSize));
IL2CPP_REGISTER_METHOD(0x01628A90, bool, ISteamUtils_GetCSERIPPort, (void * instancePtr, uint32_t * unIP, uint16_t * usPort));
IL2CPP_REGISTER_METHOD(0x01628B50, uint8_t, ISteamUtils_GetCurrentBatteryPower, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01628BF0, uint32_t, ISteamUtils_GetAppID, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01628C90, void, ISteamUtils_SetOverlayNotificationPosition, (void * instancePtr, ENotificationPosition__Enum eNotificationPosition));
IL2CPP_REGISTER_METHOD(0x01628D40, bool, ISteamUtils_IsAPICallCompleted, (void * instancePtr, SteamAPICall_t hSteamAPICall, bool * pbFailed));
IL2CPP_REGISTER_METHOD(0x01628E10, ESteamAPICallFailure__Enum, ISteamUtils_GetAPICallFailureReason, (void * instancePtr, SteamAPICall_t hSteamAPICall));
IL2CPP_REGISTER_METHOD(0x01628EC0, bool, ISteamUtils_GetAPICallResult, (void * instancePtr, SteamAPICall_t hSteamAPICall, void * pCallback, int32_t cubCallback, int32_t iCallbackExpected, bool * pbFailed));
IL2CPP_REGISTER_METHOD(0x01628FC0, uint32_t, ISteamUtils_GetIPCCallCount, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01629060, void, ISteamUtils_SetWarningMessageHook, (void * instancePtr, SteamAPIWarningMessageHook_t * pFunction));
IL2CPP_REGISTER_METHOD(0x01629110, bool, ISteamUtils_IsOverlayEnabled, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016291B0, bool, ISteamUtils_BOverlayNeedsPresent, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01629250, uint64_t, ISteamUtils_CheckFileSignature, (void * instancePtr, InteropHelp_UTF8StringHandle * szFileName));
IL2CPP_REGISTER_METHOD(0x01629350, bool, ISteamUtils_ShowGamepadTextInput, (void * instancePtr, EGamepadTextInputMode__Enum eInputMode, EGamepadTextInputLineMode__Enum eLineInputMode, InteropHelp_UTF8StringHandle * pchDescription, uint32_t unCharMax, InteropHelp_UTF8StringHandle * pchExistingText));
IL2CPP_REGISTER_METHOD(0x016294F0, uint32_t, ISteamUtils_GetEnteredGamepadTextLength, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01629590, bool, ISteamUtils_GetEnteredGamepadTextInput, (void * instancePtr, void * pchText, uint32_t cchText));
IL2CPP_REGISTER_METHOD(0x01629650, void *, ISteamUtils_GetSteamUILanguage, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016296F0, bool, ISteamUtils_IsSteamRunningInVR, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01629790, void, ISteamUtils_SetOverlayNotificationInset, (void * instancePtr, int32_t nHorizontalInset, int32_t nVerticalInset));
IL2CPP_REGISTER_METHOD(0x01629840, bool, ISteamUtils_IsSteamInBigPictureMode, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x016298E0, void, ISteamUtils_StartVRDashboard, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01629980, bool, ISteamUtils_IsVRHeadsetStreamingEnabled, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01629A20, void, ISteamUtils_SetVRHeadsetStreamingEnabled, (void * instancePtr, bool bEnabled));
IL2CPP_REGISTER_METHOD(0x01629AD0, bool, ISteamUtils_IsSteamChinaLauncher, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01629B70, bool, ISteamUtils_InitFilterText, (void * instancePtr));
IL2CPP_REGISTER_METHOD(0x01629C10, int32_t, ISteamUtils_FilterText, (void * instancePtr, void * pchOutFilteredText, uint32_t nByteSizeOutFilteredText, InteropHelp_UTF8StringHandle * pchInputMessage, bool bLegalOnly));
IL2CPP_REGISTER_METHOD(0x01629D30, void, ISteamVideo_GetVideoURL, (void * instancePtr, AppId_t unVideoAppID));
IL2CPP_REGISTER_METHOD(0x01629DE0, bool, ISteamVideo_IsBroadcasting, (void * instancePtr, int32_t * pnNumViewers));
IL2CPP_REGISTER_METHOD(0x01629E90, void, ISteamVideo_GetOPFSettings, (void * instancePtr, AppId_t unVideoAppID));
IL2CPP_REGISTER_METHOD(0x01629F40, bool, ISteamVideo_GetOPFStringForApp, (void * instancePtr, AppId_t unVideoAppID, void * pchBuffer, int32_t * pnBufferSize));
}
