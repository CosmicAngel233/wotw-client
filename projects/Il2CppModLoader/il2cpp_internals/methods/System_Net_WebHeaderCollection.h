#include <interception_macros.h>

namespace app::methods::System_Net::WebHeaderCollection {
IL2CPP_REGISTER_METHOD(0x01D70310, String *, get_ContentLength, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D70420, String *, get_CacheControl, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D70530, String *, get_ContentType, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D70640, String *, get_Date, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D70750, String *, get_Expires, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D70860, String *, get_ETag, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D70970, String *, get_LastModified, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D70A80, String *, get_Location, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D70BA0, String *, get_ProxyAuthenticate, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D70CB0, String *, get_SetCookie2, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D70DC0, String *, get_SetCookie, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D70EE0, String *, get_Server, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D71000, String *, get_Via, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D71120, void, NormalizeCommonHeaders, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D712F0, NameValueCollection *, get_InnerCollection, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D71490, bool, AllowMultiValues, (app::String * name));
IL2CPP_REGISTER_METHOD(0x01D715A0, bool, get_AllowHttpRequestHeader, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D715E0, bool, get_AllowHttpResponseHeader, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D71620, String *, get_Item_1, (app::WebHeaderCollection * this_ptr, app::HttpRequestHeader__Enum header));
IL2CPP_REGISTER_METHODINFO(0x0471E580, WebHeaderCollection_get_Item__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D71750, void, set_Item_1, (app::WebHeaderCollection * this_ptr, app::HttpRequestHeader__Enum header, app::String * value));
IL2CPP_REGISTER_METHODINFO(0x04731B20, WebHeaderCollection_set_Item__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D71880, String *, get_Item_2, (app::WebHeaderCollection * this_ptr, app::HttpResponseHeader__Enum header));
IL2CPP_REGISTER_METHODINFO(0x04748F58, WebHeaderCollection_get_Item_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D71A10, void, set_Item_2, (app::WebHeaderCollection * this_ptr, app::HttpResponseHeader__Enum header, app::String * value));
IL2CPP_REGISTER_METHODINFO(0x0473FC78, WebHeaderCollection_set_Item_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D71C10, void, Add_1, (app::WebHeaderCollection * this_ptr, app::HttpRequestHeader__Enum header, app::String * value));
IL2CPP_REGISTER_METHODINFO(0x04702F00, WebHeaderCollection_Add__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D71D40, void, Add_2, (app::WebHeaderCollection * this_ptr, app::HttpResponseHeader__Enum header, app::String * value));
IL2CPP_REGISTER_METHODINFO(0x04783810, WebHeaderCollection_Add_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D71F40, void, Set_1, (app::WebHeaderCollection * this_ptr, app::HttpRequestHeader__Enum header, app::String * value));
IL2CPP_REGISTER_METHODINFO(0x0471E2B0, WebHeaderCollection_Set__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D72070, void, Set_2, (app::WebHeaderCollection * this_ptr, app::HttpResponseHeader__Enum header, app::String * value));
IL2CPP_REGISTER_METHODINFO(0x04793EB8, WebHeaderCollection_Set_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D72270, void, SetInternal_1, (app::WebHeaderCollection * this_ptr, app::HttpResponseHeader__Enum header, app::String * value));
IL2CPP_REGISTER_METHODINFO(0x04707588, WebHeaderCollection_SetInternal__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D72460, void, Remove_1, (app::WebHeaderCollection * this_ptr, app::HttpRequestHeader__Enum header));
IL2CPP_REGISTER_METHODINFO(0x04725C90, WebHeaderCollection_Remove__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D72590, void, Remove_2, (app::WebHeaderCollection * this_ptr, app::HttpResponseHeader__Enum header));
IL2CPP_REGISTER_METHODINFO(0x0477C140, WebHeaderCollection_Remove_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D726C0, void, AddWithoutValidate, (app::WebHeaderCollection * this_ptr, app::String * header_name, app::String * header_value));
IL2CPP_REGISTER_METHODINFO(0x0477C218, WebHeaderCollection_AddWithoutValidate__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D72890, void, SetAddVerified, (app::WebHeaderCollection * this_ptr, app::String * name, app::String * value));
IL2CPP_REGISTER_METHOD(0x01D72A00, void, AddInternal, (app::WebHeaderCollection * this_ptr, app::String * name, app::String * value));
IL2CPP_REGISTER_METHOD(0x01D72A70, void, ChangeInternal, (app::WebHeaderCollection * this_ptr, app::String * name, app::String * value));
IL2CPP_REGISTER_METHOD(0x01D72AE0, void, RemoveInternal, (app::WebHeaderCollection * this_ptr, app::String * name));
IL2CPP_REGISTER_METHOD(0x01D72B30, void, CheckUpdate, (app::WebHeaderCollection * this_ptr, app::String * name, app::String * value));
IL2CPP_REGISTER_METHOD(0x01D72C30, void, AddInternalNotCommon, (app::WebHeaderCollection * this_ptr, app::String * name, app::String * value));
IL2CPP_REGISTER_METHOD(0x01D72C80, String *, CheckBadChars, (app::String * name, bool is_header_value));
IL2CPP_REGISTER_METHODINFO(0x04735D30, WebHeaderCollection_CheckBadChars__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D73150, bool, IsValidToken, (app::String * token));
IL2CPP_REGISTER_METHOD(0x01D73290, bool, ContainsNonAsciiChars, (app::String * token));
IL2CPP_REGISTER_METHOD(0x01D73300, void, ThrowOnRestrictedHeader, (app::WebHeaderCollection * this_ptr, app::String * header_name));
IL2CPP_REGISTER_METHODINFO(0x04736ED0, WebHeaderCollection_ThrowOnRestrictedHeader__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D73560, void, Add_3, (app::WebHeaderCollection * this_ptr, app::String * name, app::String * value));
IL2CPP_REGISTER_METHODINFO(0x04789728, WebHeaderCollection_Add_2__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D73740, void, Add_4, (app::WebHeaderCollection * this_ptr, app::String * header));
IL2CPP_REGISTER_METHODINFO(0x0474A9B8, WebHeaderCollection_Add_3__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D73A10, void, Set_3, (app::WebHeaderCollection * this_ptr, app::String * name, app::String * value));
IL2CPP_REGISTER_METHODINFO(0x0473DAF0, WebHeaderCollection_Set_2__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D73C50, void, SetInternal_2, (app::WebHeaderCollection * this_ptr, app::String * name, app::String * value));
IL2CPP_REGISTER_METHODINFO(0x0472B4C8, WebHeaderCollection_SetInternal_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D73E80, void, Remove_3, (app::WebHeaderCollection * this_ptr, app::String * name));
IL2CPP_REGISTER_METHODINFO(0x0475F8F8, WebHeaderCollection_Remove_2__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D73FD0, String__Array *, GetValues_1, (app::WebHeaderCollection * this_ptr, app::String * header));
IL2CPP_REGISTER_METHOD(0x01D74300, String *, ToString_1, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D743A0, String *, ToString_2, (app::WebHeaderCollection * this_ptr, bool for_trace));
IL2CPP_REGISTER_METHOD(0x01D74440, String *, GetAsString, (app::NameValueCollection * cc, bool win_inet_compat, bool for_trace));
IL2CPP_REGISTER_METHODINFO(0x0476FFE0, WebHeaderCollection_GetAsString__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D747B0, Byte__Array *, ToByteArray, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D748C0, bool, IsRestricted_1, (app::String * header_name));
IL2CPP_REGISTER_METHOD(0x01D74A20, bool, IsRestricted_2, (app::String * header_name, bool response));
IL2CPP_REGISTER_METHOD(0x01D74B80, void, __ctor_1, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D74C30, void, __ctor_2, (app::WebHeaderCollection * this_ptr, app::WebHeaderCollectionType__Enum type));
IL2CPP_REGISTER_METHOD(0x01D74D50, void, __ctor_3, (app::WebHeaderCollection * this_ptr, app::NameValueCollection * cc));
IL2CPP_REGISTER_METHOD(0x01D75040, void, __ctor_4, (app::WebHeaderCollection * this_ptr, app::SerializationInfo * serialization_info, app::StreamingContext streaming_context));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnDeserialization, (app::WebHeaderCollection * this_ptr, app::Object * sender));
IL2CPP_REGISTER_METHOD(0x01D752E0, void, GetObjectData, (app::WebHeaderCollection * this_ptr, app::SerializationInfo * serialization_info, app::StreamingContext streaming_context));
IL2CPP_REGISTER_METHOD(0x01D754A0, DataParseStatus__Enum, ParseHeaders, (app::WebHeaderCollection * this_ptr, app::Byte__Array * buffer, int32_t size, app::int32_t * unparsed, app::int32_t * total_response_headers_length, int32_t maximum_response_headers_length, app::WebParseError * parse_error));
IL2CPP_REGISTER_METHOD(0x01D75940, DataParseStatus__Enum, ParseHeadersStrict, (app::WebHeaderCollection * this_ptr, app::Byte__Array * buffer, int32_t size, app::int32_t * unparsed, app::int32_t * total_response_headers_length, int32_t maximum_response_headers_length, app::WebParseError * parse_error));
IL2CPP_REGISTER_METHOD(0x01D76590, void, ISerializable_GetObjectData, (app::WebHeaderCollection * this_ptr, app::SerializationInfo * serialization_info, app::StreamingContext streaming_context));
IL2CPP_REGISTER_METHOD(0x01D765C0, String *, Get_1, (app::WebHeaderCollection * this_ptr, app::String * name));
IL2CPP_REGISTER_METHOD(0x01D76A00, IEnumerator *, GetEnumerator, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D76B70, int32_t, get_Count, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D76BB0, NameObjectCollectionBase_KeysCollection *, get_Keys, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D76BF0, bool, InternalHasKeys, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D76C30, String *, Get_2, (app::WebHeaderCollection * this_ptr, int32_t index));
IL2CPP_REGISTER_METHOD(0x01D76C80, String__Array *, GetValues_2, (app::WebHeaderCollection * this_ptr, int32_t index));
IL2CPP_REGISTER_METHOD(0x01D76CD0, String *, GetKey, (app::WebHeaderCollection * this_ptr, int32_t index));
IL2CPP_REGISTER_METHOD(0x01D76D20, String__Array *, get_AllKeys, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D76D60, void, Clear, (app::WebHeaderCollection * this_ptr));
IL2CPP_REGISTER_METHOD(0x01D76D90, void, __cctor, ());
}
