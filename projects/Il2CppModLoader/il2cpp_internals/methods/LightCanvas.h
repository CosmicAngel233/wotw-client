#include <interception_macros.h>

namespace app::methods::LightCanvas {
IL2CPP_REGISTER_METHOD(0x00989BF0, int32_t, get_CurrentStateGuid, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x0070DEC0, int32_t, get_DesiredStateGuid, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x0113FD20, bool, get_DefaultStateActive, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x002FB9B0, LightCanvas_BindData *, get_DefaultBindData, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x00413160, bool, get_IsInPrefab, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x00413170, void, set_IsInPrefab, (LightCanvas * __this, bool value));
IL2CPP_REGISTER_METHOD(0x0043D9A0, SelectableCategory__Enum, get_Category, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x0113FD30, LightCanvas_SubLayerSettings *, get_CanvasSubLayerSettings, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x0113FD70, void, set_CanvasSubLayerSettings, (LightCanvas * __this, LightCanvas_SubLayerSettings * value));
IL2CPP_REGISTER_METHOD(0x0113FDB0, Texture2D *, get_LightTexture, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x0113FDB0, Texture2D *, get_LightTextureAsset, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x0113FDF0, LightCanvas_LightCanvasStateData *, get_CurrentStateData, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x0113FE00, LightCanvas_BindData *, get_CurrentBindData, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, get_IsSelectable, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x00BB6AB0, bool, get_ShouldReloadAssets, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x00BB6AC0, void, set_ShouldReloadAssets, (LightCanvas * __this, bool value));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnEnable, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnDisable, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x0113FE40, void, Awake, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x0113FE50, void, OnDestroy, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x0113FE90, void, Update, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x0113FF20, Texture2D *, GetLightTextureForState, (LightCanvas * __this, int32_t stateGuid));
IL2CPP_REGISTER_METHOD(0x0113FF20, Texture2D *, GetLightTextureAssetForState, (LightCanvas * __this, int32_t stateGuid));
IL2CPP_REGISTER_METHOD(0x0113FF50, void, LoadInTextureAsset, (LightCanvas * __this, Texture2D * newTexture));
IL2CPP_REGISTER_METHOD(0x01140040, void, AddAttached, (LightCanvas * __this, Transform * t));
IL2CPP_REGISTER_METHOD(0x011402C0, void, SetTempRenderersList, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x01140360, void, UpdateUberShaderLightCanvasPos, (LightCanvas * __this, bool forceUpdate));
IL2CPP_REGISTER_METHOD(0x01140AB0, void, UpdateLightCanvasScale, (LightCanvas * __this, bool forceUpdate));
IL2CPP_REGISTER_METHOD(0x011411A0, void, ApplyLightCanvasOnRenderer, (LightCanvas * __this, Renderer * renderer));
IL2CPP_REGISTER_METHOD(0x011415E0, void, ApplyLightCanvasOnRenderer, (LightCanvas * __this, Renderer * renderer, LightCanvasShadingZone_LightCanvasShadingZonesFlags__Enum applyFlags));
IL2CPP_REGISTER_METHOD(0x01141790, void, ClearLightCanvasOnRenderer, (LightCanvas * __this, Renderer * rend));
IL2CPP_REGISTER_METHOD(0x01141850, void, ApplyDynamicLightCanvasOnRenderer, (LightCanvas * __this, Renderer * renderer, UberShaderProperty_Texture__Enum textureProperty, UberShaderProperty_Vector__Enum boundsProperty, UberShaderProperty_Vector__Enum positionProperty, UberShaderProperty_Vector__Enum uvsProperty, UberShaderProperty_Vector__Enum atlasMinMaxProperty, UberShaderProperty_Float__Enum atlasFlipProperty));
IL2CPP_REGISTER_METHOD(0x01141CD0, bool, HasApplyFlag, (LightCanvas * __this, LightCanvasShadingZone_LightCanvasShadingZonesFlags__Enum flag, LightCanvasShadingZone_LightCanvasShadingZonesFlags__Enum test));
IL2CPP_REGISTER_METHOD(0x01141CE0, Bounds, GetCustomBounds, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x01141F50, void, SetState, (LightCanvas * __this, int32_t state));
IL2CPP_REGISTER_METHOD(0x01142050, void, ApplyKnownState, (LightCanvas * __this, int32_t stateGUID));
IL2CPP_REGISTER_METHOD(0x01142220, LightCanvas_LightCanvasStateData *, GetCanvasStateData, (LightCanvas * __this, int32_t stateGuid));
IL2CPP_REGISTER_METHOD(0x002FA000, void, SetStateEnable, (LightCanvas * __this, int32_t stateGuid, bool enabled, bool apply));
IL2CPP_REGISTER_METHOD(0x01142330, void, UpdateStatesDefinition, (LightCanvas * __this, List_1_LightCanvasStateController_LightCanvasState_ * newStates));
IL2CPP_REGISTER_METHOD(0x011427F0, void, RebindAllChildrenRuntime, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x011428E0, Vector4, MakeBakedLightingLightColorMask, (LightCanvas_SubLayerSettings * subLayerSettings, Vector3 lightCanvasComp, float ubershaderCompZ));
IL2CPP_REGISTER_METHOD(0x01142D40, void, UpdateBakeLightingValues, (Renderer * renderer, Texture * lightTexture, Rect canvasRect, LightCanvas_SubLayerSettings * subLayerSettings, Vector3 lightCanvasPosition, Vector4 lightColorMask, Vector4 uvs, Vector4 atlasMinMax, bool atlasFlip));
IL2CPP_REGISTER_METHOD(0x01143030, void, UpdateDynamicBakeLightingValues, (Renderer * renderer, Texture * lightTexture, Rect canvasRect, Vector3 lightCanvasPosition, Vector4 uvs, Vector4 atlasMinMax, bool atlasFlip, UberShaderProperty_Texture__Enum textureProperty, UberShaderProperty_Vector__Enum boundsProperty, UberShaderProperty_Vector__Enum positionProperty, UberShaderProperty_Vector__Enum uvsProperty, UberShaderProperty_Vector__Enum atlasMinMaxProperty, UberShaderProperty_Float__Enum atlasFlipProperty));
IL2CPP_REGISTER_METHOD(0x002FA000, void, DrawSceneWarning, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x01143260, void, __ctor, (LightCanvas * __this));
IL2CPP_REGISTER_METHOD(0x01143A50, void, __cctor, ());
}
