using namespace app;

namespace app::methods::ShootableCreepLogic {
IL2CPP_REGISTER_METHOD(0x005B9760, IUberState *, get_UberState, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x004C50A0, Object_1 *, get_ObjectReference, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x002FB9D0, MoonReference_1_IGenericUberState_ *, get_SharedState, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x002FB9E0, void, set_SharedState, (ShootableCreepLogic * __this, MoonReference_1_IGenericUberState_ * value));
IL2CPP_REGISTER_METHOD(0x002FB9B0, IMoonSetupAnimator *, get_MoonSetupAnimator, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x005B9820, void, set_MoonSetupAnimator, (ShootableCreepLogic * __this, IMoonSetupAnimator * value));
IL2CPP_REGISTER_METHOD(0x005B98F0, void, Awake, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x005B9AB0, void, OnDestroy, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x005B9C60, void, OnEnable, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x005B9D00, void, OnDisable, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x005B9DA0, void, OnDamageReceived, (ShootableCreepLogic * __this, DamageResult result));
IL2CPP_REGISTER_METHODINFO(0x04784940, ShootableCreepLogic_OnDamageReceived__MethodInfo);
IL2CPP_REGISTER_METHOD(0x005BA050, void, ChangeState, (ShootableCreepLogic * __this, bool destroyed));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, get_ApplyOnEditor, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x005BA0C0, void, Apply, (ShootableCreepLogic * __this, UberStateApplyContext__Enum context));
IL2CPP_REGISTER_METHOD(0x005BA210, IUberState__Array *, get_AffectingUberStates, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x005BA330, List_1_UnityEngine_GameObject_ *, get_AllTargets, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x005BA4F0, void, SetHitboxParametersFromVisuals, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x005BA8A0, void, __ctor, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x002FB990, IMoonTypeResolver *, GetResolverForType, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x002FB990, IMoonTypeResolver *, GetResolverForType, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x002FB990, IMoonTypeResolver *, GetResolverForType, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x002FB990, IMoonTypeResolver *, GetResolverForType, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x002FB990, IMoonTypeResolver *, GetResolverForType, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x002FB990, IMoonTypeResolver *, GetResolverForType, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x002FB990, IMoonTypeResolver *, GetResolverForType, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x002FB990, IMoonTypeResolver *, GetResolverForType, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x002FB990, IMoonTypeResolver *, GetResolverForType, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x002FB990, IMoonTypeResolver *, GetResolverForType, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x002FB990, IMoonTypeResolver *, GetResolverForType, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x002FB990, IMoonTypeResolver *, GetResolverForType, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x002FB990, IMoonTypeResolver *, GetResolverForType, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x002FB990, IMoonTypeResolver *, GetResolverForType, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x002FB990, IMoonTypeResolver *, GetResolverForType, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x002FB990, IMoonTypeResolver *, GetResolverForType, (ShootableCreepLogic * __this));
IL2CPP_REGISTER_METHOD(0x002FB990, IMoonTypeResolver *, GetResolverForType, (ShootableCreepLogic * __this));
}
