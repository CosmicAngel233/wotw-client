using namespace app;

namespace app::methods::System::Globalization::CultureInfo {
IL2CPP_REGISTER_METHOD(0x025F5100, CultureInfo *, get_InvariantCulture, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x025F51B0, CultureInfo *, get_CurrentCulture, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x025F51E0, CultureInfo *, get_CurrentUICulture, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x025F5210, CultureInfo *, ConstructCurrentCulture, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x025F5450, CultureInfo *, ConstructCurrentUICulture, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x002FBBE0, String *, get_Territory, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x00CC59E0, int32_t, get_LCID, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x002FB9F0, String *, get_Name, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x025F54E0, Calendar *, get_Calendar, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x025F55B0, CultureInfo *, get_Parent, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x025F5B00, TextInfo *, get_TextInfo, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x025F5D70, Object *, Clone, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x025F6020, bool, Equals, (CultureInfo * __this, Object * value));
IL2CPP_REGISTER_METHOD(0x025F6140, CultureInfo__Array *, GetCultures, (CultureTypes__Enum types));
IL2CPP_REGISTER_METHOD(0x025F6680, CultureInfo_Data, GetTextInfoData, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x00CC59E0, int32_t, GetHashCode, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x025F66A0, CultureInfo *, ReadOnly, (CultureInfo * ci));
IL2CPP_REGISTER_METHODINFO(0x0477F4F8, CultureInfo_ReadOnly__MethodInfo);
IL2CPP_REGISTER_METHOD(0x002FB9F0, String *, ToString, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x025F6990, CompareInfo *, get_CompareInfo, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x025F6BE0, bool, get_IsNeutralCulture, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, CheckNeutral, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x025F6C20, NumberFormatInfo *, get_NumberFormat, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x025F6DB0, void, set_NumberFormat, (CultureInfo * __this, NumberFormatInfo * value));
IL2CPP_REGISTER_METHODINFO(0x047143C0, CultureInfo_set_NumberFormat__MethodInfo);
IL2CPP_REGISTER_METHOD(0x025F6F00, DateTimeFormatInfo *, get_DateTimeFormat, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x025F70E0, void, set_DateTimeFormat, (CultureInfo * __this, DateTimeFormatInfo * value));
IL2CPP_REGISTER_METHODINFO(0x0472A258, CultureInfo_set_DateTimeFormat__MethodInfo);
IL2CPP_REGISTER_METHOD(0x025F7230, String *, get_EnglishName, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x0052B590, bool, get_IsReadOnly, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x025F72A0, Object *, GetFormat, (CultureInfo * __this, Type * formatType));
IL2CPP_REGISTER_METHOD(0x025F73E0, void, Construct, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x025F7440, bool, construct_internal_locale_from_lcid, (CultureInfo * __this, int32_t lcid));
IL2CPP_REGISTER_METHOD(0x025F74A0, bool, construct_internal_locale_from_name, (CultureInfo * __this, String * name));
IL2CPP_REGISTER_METHOD(0x025F75C0, String *, get_current_locale_name, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x025F7650, CultureInfo__Array *, internal_get_cultures, (bool neutral, bool specific, bool installed));
IL2CPP_REGISTER_METHOD(0x025F7770, void, ConstructInvariant, (CultureInfo * __this, bool read_only));
IL2CPP_REGISTER_METHOD(0x025F78C0, TextInfo *, CreateTextInfo, (CultureInfo * __this, bool readOnly));
IL2CPP_REGISTER_METHOD(0x025F7A30, void, __ctor, (CultureInfo * __this, int32_t culture));
IL2CPP_REGISTER_METHOD(0x025F7A50, void, __ctor, (CultureInfo * __this, int32_t culture, bool useUserOverride));
IL2CPP_REGISTER_METHOD(0x025F7A70, void, __ctor, (CultureInfo * __this, int32_t culture, bool useUserOverride, bool read_only));
IL2CPP_REGISTER_METHODINFO(0x0472CAB8, CultureInfo__ctor_2__MethodInfo);
IL2CPP_REGISTER_METHOD(0x025F7D70, void, __ctor, (CultureInfo * __this, String * name));
IL2CPP_REGISTER_METHOD(0x025F7D90, void, __ctor, (CultureInfo * __this, String * name, bool useUserOverride));
IL2CPP_REGISTER_METHOD(0x025F7DB0, void, __ctor, (CultureInfo * __this, String * name, bool useUserOverride, bool read_only));
IL2CPP_REGISTER_METHODINFO(0x04779488, CultureInfo__ctor_5__MethodInfo);
IL2CPP_REGISTER_METHOD(0x025F8150, void, __ctor, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x025F8160, void, insert_into_shared_tables, (CultureInfo * c));
IL2CPP_REGISTER_METHOD(0x025F84F0, CultureInfo *, GetCultureInfo, (int32_t culture));
IL2CPP_REGISTER_METHODINFO(0x0470FA30, CultureInfo_GetCultureInfo__MethodInfo);
IL2CPP_REGISTER_METHOD(0x025F88B0, CultureInfo *, GetCultureInfo, (String * name));
IL2CPP_REGISTER_METHODINFO(0x04784448, CultureInfo_GetCultureInfo_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x025F8C60, CultureInfo *, CreateCulture, (String * name, bool reference));
IL2CPP_REGISTER_METHOD(0x025F8DE0, CultureInfo *, CreateSpecificCulture, (String * name));
IL2CPP_REGISTER_METHODINFO(0x047034D8, CultureInfo_CreateSpecificCulture__MethodInfo);
IL2CPP_REGISTER_METHOD(0x025F9340, CultureInfo *, CreateSpecificCultureFromNeutral, (String * name));
IL2CPP_REGISTER_METHODINFO(0x0471CC18, CultureInfo_CreateSpecificCultureFromNeutral__MethodInfo);
IL2CPP_REGISTER_METHOD(0x025FAE50, int32_t, get_CalendarType, (CultureInfo * __this));
IL2CPP_REGISTER_METHODINFO(0x047359D0, CultureInfo_get_CalendarType__MethodInfo);
IL2CPP_REGISTER_METHOD(0x025FAF30, Calendar *, CreateCalendar, (int32_t calendarType));
IL2CPP_REGISTER_METHODINFO(0x04756720, CultureInfo_CreateCalendar__MethodInfo);
IL2CPP_REGISTER_METHOD(0x025FB250, Exception *, CreateNotFoundException, (String * name));
IL2CPP_REGISTER_METHOD(0x025FB3D0, CultureInfo *, get_DefaultThreadCurrentCulture, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x025FB480, CultureInfo *, get_DefaultThreadCurrentUICulture, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x002FB9F0, String *, get_SortName, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x025FB530, CultureInfo *, get_UserDefaultUICulture, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x025FB5C0, CultureInfo *, get_UserDefaultCulture, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x025FB650, void, CheckDomainSafetyObject, (Object * obj, Object * container));
IL2CPP_REGISTER_METHODINFO(0x04751A60, CultureInfo_CheckDomainSafetyObject__MethodInfo);
IL2CPP_REGISTER_METHOD(0x025FB870, bool, get_HasInvariantCultureName, (CultureInfo * __this));
IL2CPP_REGISTER_METHOD(0x025FB970, bool, VerifyCultureName, (String * cultureName, bool throwException));
IL2CPP_REGISTER_METHODINFO(0x047829C0, CultureInfo_VerifyCultureName__MethodInfo);
IL2CPP_REGISTER_METHOD(0x025FBAF0, bool, VerifyCultureName, (CultureInfo * culture, bool throwException));
IL2CPP_REGISTER_METHOD(0x025FBBE0, void, __cctor, (MethodInfo * method));
}
