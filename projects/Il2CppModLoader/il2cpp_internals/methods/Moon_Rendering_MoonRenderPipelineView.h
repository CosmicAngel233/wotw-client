#include <interception_macros.h>

namespace app::methods::Moon::Rendering::MoonRenderPipelineView {
IL2CPP_REGISTER_METHOD(0x007A3190, bool, get_isGameView, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x005150C0, bool, get_isSceneView, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007A31A0, bool, get_hasLinearMotionBlur, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007A31C0, void, __ctor, (MoonRenderPipelineView * __this, MoonRenderPipelineViewType__Enum viewType, MoonRenderPipelineAsset * owner, MoonRenderPipelineSettings * settings));
IL2CPP_REGISTER_METHOD(0x007A3210, void, ReleaseEmissivityRTs, (MoonRenderPipelineView * __this, CommandBuffer * cmd));
IL2CPP_REGISTER_METHOD(0x007A3620, void, ReleaseIsrRTs, (MoonRenderPipelineView * __this, CommandBuffer * cmd));
IL2CPP_REGISTER_METHOD(0x007A38E0, void, ReleaseHistRTs, (MoonRenderPipelineView * __this, CommandBuffer * cmd));
IL2CPP_REGISTER_METHOD(0x007A3CF0, void, Dispose, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x006A45A0, float, get_dynamicResolutionScale, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x006A5EC0, void, set_dynamicResolutionScale, (MoonRenderPipelineView * __this, float value));
IL2CPP_REGISTER_METHOD(0x00724020, float, get_dynamicResolutionScaleY, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x00724030, void, set_dynamicResolutionScaleY, (MoonRenderPipelineView * __this, float value));
IL2CPP_REGISTER_METHOD(0x007A4020, void, Render, (MoonRenderPipelineView * __this, ScriptableRenderContext context, Camera * camera, double currentDRSScale, double currentDRSScaleY, bool isrDirty));
IL2CPP_REGISTER_METHOD(0x007A45C0, int32_t, get_NumActiveLightsInTLC, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007A45D0, void, InvalidateCachedCB, (MoonRenderPipelineView * __this, MoonRenderPipelineView_CachedCBType__Enum type, int32_t frame));
IL2CPP_REGISTER_METHOD(0x007A4690, void, InvalidateCachedCBs, (MoonRenderPipelineView * __this, MoonRenderPipelineView_CachedCBType__Enum type));
IL2CPP_REGISTER_METHOD(0x007A4770, void, InvalidateAllCachedCBs, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007A49D0, CommandBuffer *, GetEmissivityCB, (MoonRenderPipelineView * __this, int32_t frame));
IL2CPP_REGISTER_METHOD(0x007A4A30, Camera *, get_camera, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007A4A40, FilterResults, get_visibleRenderers, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007A4A50, Int2, get_SceneResolution, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007A4A60, void, initResolutionAndFormat, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007A4DE0, void, getRTDescriptor, (MoonRenderPipelineView * __this, RenderTargetDescriptor * desc, RenderTargetType__Enum type, Int2 size, RenderTextureFormat__Enum format, int32_t depthBufferBits, FilterMode__Enum filterMode, RenderTexture * external, int32_t msaaSamples, bool bindMS, bool drs));
IL2CPP_REGISTER_METHOD(0x007A4E50, int32_t, RoundToMultiple, (int32_t d, int32_t multiple));
IL2CPP_REGISTER_METHOD(0x007A4F20, void, render, (MoonRenderPipelineView * __this, Camera * camera, float currentDRSScale, float currentDRSScaleY, bool isrDirty));
IL2CPP_REGISTER_METHOD(0x007AAB70, void, renderPosts, (MoonRenderPipelineView * __this, List_1_IRenderPostprocessor_ * posts, RenderTarget * source, RenderTarget * destination, RenderTarget * finalDest, float currentDRSScale, float currentDRSScaleY));
IL2CPP_REGISTER_METHOD(0x007AB0E0, void, releasePostRT, (MoonRenderPipelineView * __this, RenderTarget * rt));
IL2CPP_REGISTER_METHOD(0x007AB230, void, renderScene, (MoonRenderPipelineView * __this, RenderTarget * sceneRT1, RenderTarget * sceneRT2, float currentDRSScale, float currentDRSScaleY, bool isrDirty));
IL2CPP_REGISTER_METHOD(0x007AB430, void, renderUI, (MoonRenderPipelineView * __this, Camera * uiCam, RenderTarget * uiRT));
IL2CPP_REGISTER_METHOD(0x007AB890, DrawRendererSettings, getDrawRendererSettings, (Camera * sortCamera, ShaderPassName shaderPassName));
IL2CPP_REGISTER_METHOD(0x007AB980, void, drawRenderers, (MoonRenderPipelineView * __this, CullResults * cullResults, DrawRendererSettings * rendererSettings, ShaderPassName shaderPassName, Nullable_1_Moon_Rendering_MoonRenderPipelineView_FilterBounds_ filterBounds, int32_t layerMask, RenderFlags__Enum renderFlags, MoonRenderPipelineAsset_RenderQueues__Enum renderQueues, Nullable_1_UnityEngine_Experimental_Rendering_RenderStateBlock_ renderStateBlock, bool onlyPrepare));
IL2CPP_REGISTER_METHODINFO(0x04764C98, MoonRenderPipelineView_drawRenderers__MethodInfo);
IL2CPP_REGISTER_METHOD(0x007AC2C0, CommandBuffer *, getCommandBuffer, (String * name));
IL2CPP_REGISTER_METHOD(0x007AC490, void, Dispose_Sliced, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007AC6C0, void, render_Sliced, (MoonRenderPipelineView * __this, RenderTarget * sceneRT1, RenderTarget * sceneRT2, float currentDRSScale, float currentDRSScaleY, bool isrDirty));
IL2CPP_REGISTER_METHOD(0x007AC950, void, OnEnable, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007ACB60, void, SetEmissivitySpreads, (float sv0, float sv1, float sv2, float sv3));
IL2CPP_REGISTER_METHOD(0x007ACC50, void, SetEmissivityIntensities, (float iv0, float iv1, float iv2, float iv3));
IL2CPP_REGISTER_METHOD(0x007ACD40, float, HaltonSeq, (MoonRenderPipelineView * __this, int32_t prime, int32_t index));
IL2CPP_REGISTER_METHOD(0x007ACE60, void, InitializeHalton_2_3, (MoonRenderPipelineView * __this, Vector2__Array * seq));
IL2CPP_REGISTER_METHOD(0x007ACF50, Matrix4x4, GetJitteredPerspectiveProjectionMatrix, (Camera * camera, Int2 size, Vector2 offset));
IL2CPP_REGISTER_METHOD(0x007AD190, Matrix4x4, GetNonJitteredPerspectiveProjectionMatrix, (Camera * camera));
IL2CPP_REGISTER_METHOD(0x007AD230, float, GetCurrentBlitColorHiResOpaque3DBlurThreshold, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007AD3A0, float, GetCurrentAlphaDepthThreshold, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007AD510, void, Update, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007AD780, void, __ctor, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007B00A0, void, allocateGodRayRTs, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007B09C0, void, DisposeGodRayRTs, (MoonRenderPipelineView * __this, CommandBuffer * cmd));
IL2CPP_REGISTER_METHOD(0x007B0D70, void, setupGodRayRTs, (MoonRenderPipelineView * __this, Int2 size, float currentDRSScale, float currentDRSScaleY));
IL2CPP_REGISTER_METHOD(0x007B0FF0, void, releaseGodRayRTs, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007B1310, Texture *, getGodraysRT, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007B13E0, bool, godraysNeedHDR, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007B1410, void, setupSliceRTs, (MoonRenderPipelineView * __this, Int2 size));
IL2CPP_REGISTER_METHOD(0x007B2070, void, releaseRT, (MoonRenderPipelineView * __this, RenderTarget * rt, MoonRenderPipelineView_ReleaseReason__Enum reason));
IL2CPP_REGISTER_METHODINFO(0x04750BA8, MoonRenderPipelineView_releaseRT__MethodInfo);
IL2CPP_REGISTER_METHOD(0x007B21B0, void, InitResources, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007B2400, void, EmissivityDownMip, (MoonRenderPipelineView * __this, CommandBuffer * cmd, RenderTarget * src, RenderTarget * tmp, RenderTarget * dst, float radius, float mul, int32_t pass, float blurLimit));
IL2CPP_REGISTER_METHOD(0x007B2A10, void, PrepareDarkeningRender, (MoonRenderPipelineView * __this, DrawRendererSettings * rendererSettings, MoonRenderPipelineView_FilterBounds * cullBounds, int32_t sliceIndex, RenderFlags__Enum darkeningRenderFlags));
IL2CPP_REGISTER_METHOD(0x007B2C40, void, PrepareEmissivityRenderers, (MoonRenderPipelineView * __this, bool doDepthPrecull, DrawRendererSettings rendererSettings, RenderFlags__Enum emissivityRenderFlags, MoonRenderPipelineView_FilterBounds cullBounds, bool doEmissivity));
IL2CPP_REGISTER_METHOD(0x007B2EF0, void, DarkeningRender, (MoonRenderPipelineView * __this, RenderTarget * currSceneRT, DrawRendererSettings * rendererSettings, MoonRenderPipelineView_FilterBounds * cullBounds, int32_t sliceIndex, bool allowDarkeningComposition, RenderFlags__Enum darkeningRenderFlags, Viewport * sceneViewport));
IL2CPP_REGISTER_METHOD(0x007B38F0, void, EmissivityRender, (MoonRenderPipelineView * __this, RenderTarget * alphaMaskTex, bool doDepthPrecull, DrawRendererSettings * rendererSettings, RenderFlags__Enum emissivityRenderFlags, MoonRenderPipelineView_FilterBounds * cullBounds, bool doEmissivity, Vector2 * sliceScale, int32_t * numEmissivitySlices));
IL2CPP_REGISTER_METHOD(0x007B4510, int32_t, AllocateOldGodRayBlurRT, (MoonRenderPipelineView * __this, int32_t id));
IL2CPP_REGISTER_METHOD(0x007B4650, int32_t, AllocateUnusedGodRayBlurRT, (MoonRenderPipelineView * __this, int32_t id));
IL2CPP_REGISTER_METHOD(0x007B47E0, void, GodRaysRender, (MoonRenderPipelineView * __this, RenderTarget * alphaMaskTex, List_1_GodRayModifier_ * godRays, Vector2 sliceScale, float zWorldNear, float zWorldFar));
IL2CPP_REGISTER_METHOD(0x007B52B0, RenderingSettingsPerScene *, get_CurrentPerSceneSettings, ());
IL2CPP_REGISTER_METHOD(0x007B53B0, bool, get_AllowDofOnAllSlices, ());
IL2CPP_REGISTER_METHOD(0x007B5490, void, ForceAllowDofOnAllSlices, ());
IL2CPP_REGISTER_METHOD(0x007B5590, void, ForceFXAADepthPrecull, ());
IL2CPP_REGISTER_METHOD(0x007B5690, void, ResetStatics, ());
IL2CPP_REGISTER_METHOD(0x007B58F0, void, UpdateSceneRenderingSettings, (RenderingSettingsPerScene * settings));
IL2CPP_REGISTER_METHOD(0x00417870, bool, DeferredLightingEnabled, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007B59B0, void, OnCullingCategoryResultsReady, (MoonRenderPipelineView * __this, RendererCullingCategoryResults__Array * visibleRendererCategories));
IL2CPP_REGISTER_METHODINFO(0x047290C8, MoonRenderPipelineView_OnCullingCategoryResultsReady__MethodInfo);
IL2CPP_REGISTER_METHOD(0x007B5B30, float, _calculateResolutionBasedAdditionalDownsamplingRatio, (MoonRenderPipelineView * __this, float sceneRTHeight, bool * useAltDownsampling));
IL2CPP_REGISTER_METHOD(0x007B5CF0, void, _calculateAltDownsamplingRatio, (MoonRenderPipelineView * __this, float sceneRTHeight, float sliceScale, bool * useAltDownsampling, float * altDownsamplingScale));
IL2CPP_REGISTER_METHOD(0x007B5EC0, void, OnRenderImage, (MoonRenderPipelineView * __this, RenderTarget * sceneRT1, RenderTarget * sceneRT2, float currentDRSScale, float currentDRSScaleY, bool isrDirty));
IL2CPP_REGISTER_METHOD(0x007D3760, void, setupdarkeningPostCB, (MoonRenderPipelineView * __this, CommandBuffer * cmd, int32_t currentframeIndex, int32_t prevFrameIndex));
IL2CPP_REGISTER_METHOD(0x007D41A0, void, setupEmissivityPostCB, (MoonRenderPipelineView * __this, CommandBuffer * cmd, int32_t currentframeIndex, int32_t prevFrameIndex));
IL2CPP_REGISTER_METHOD(0x007D5E60, MoonRenderPipelineView_FilterBounds, getCullBounds, (MoonRenderPipelineView * __this, float zWorldNear, float zWorldFar));
IL2CPP_REGISTER_METHOD(0x007D5F40, void, setSlicingParams, (MoonRenderPipelineView * __this, float zNear, float zFar, float zExpand));
IL2CPP_REGISTER_METHOD(0x007D60C0, void, setSlicingParams, (MoonRenderPipelineView * __this, Vector4 * slicingParams));
IL2CPP_REGISTER_METHOD(0x007D61F0, void, disableSlicingParams, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007D6260, void, resetRTIndices, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007D6400, int32_t, popRTIndex, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007D6460, void, acquireMRT, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007D6BB0, void, flipMRT, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007D6BD0, void, finishMRT, (MoonRenderPipelineView * __this, int32_t sliceIndex, float zNear, float zFar, Vector4 * slicingParams, MoonRenderPipelineView_FilterBounds * cullBounds, Vector2 * sliceScale, Viewport * sliceViewport, Vector4 * sliceUVScale, Vector4 * uvMaxRegion, float sampling, bool doDepthPrecull));
IL2CPP_REGISTER_METHOD(0x007D6D20, void, updateMRT, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007D7040, void, enableDepthPrecull, (MoonRenderPipelineView * __this, bool enabled));
IL2CPP_REGISTER_METHOD(0x007D7240, void, isr_onPreRenderFrame, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007D7740, void, blur_onPreRenderFrame, (MoonRenderPipelineView * __this, int32_t sliceCount));
IL2CPP_REGISTER_METHOD(0x007D7B10, void, blur_onPreRenderSlice, (MoonRenderPipelineView * __this, float zWorldNear, float zWorldFar, bool allowMotionBlur, Vector3 motionBlurAmount, Vector2 RTPixelSize));
IL2CPP_REGISTER_METHOD(0x002FA000, void, motionBlur_init, (MoonRenderPipelineView * __this));
IL2CPP_REGISTER_METHOD(0x007D7F60, void, motionBlur_update, (MoonRenderPipelineView * __this, float dt));
IL2CPP_REGISTER_METHOD(0x007D83A0, void, motionBlur_setInterestZones, (MoonRenderPipelineView * __this, float zNear, float zFar));
IL2CPP_REGISTER_METHOD(0x007D86F0, void, GatherTimings, (MoonRenderPipelineView * __this, MoonRenderPipelineView_SrpProfilerFrame * frame));
IL2CPP_REGISTER_METHOD(0x007D90D0, void, __cctor, ());
IL2CPP_REGISTER_METHOD(0x01550D20, void, alloc, (Object__Array * * array, int32_t size));
IL2CPP_REGISTER_METHOD(0x01550D20, void, alloc, (MoonRenderPipelineSettings_Slice__Array * * array, int32_t size));
IL2CPP_REGISTER_METHODINFO(0x04724CE8, MoonRenderPipelineView_alloc_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01550D20, void, alloc, (MoonRenderPipelineDebug_Slice__Array * * array, int32_t size));
IL2CPP_REGISTER_METHODINFO(0x0477C378, MoonRenderPipelineView_alloc_2__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01550D20, void, alloc, (Dictionary_2_Swing_Int2_Moon_Rendering_SrpSampler___Array * * array, int32_t size));
IL2CPP_REGISTER_METHODINFO(0x04711400, MoonRenderPipelineView_alloc_3__MethodInfo);
}
