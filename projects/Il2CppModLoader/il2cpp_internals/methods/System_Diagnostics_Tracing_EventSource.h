#include <interception_macros.h>

namespace app::methods::System::Diagnostics::Tracing::EventSource {
IL2CPP_REGISTER_METHOD(0x01751690, void, WriteMultiMerge, (EventSource * __this, String * eventName, EventSourceOptions * options, TraceLoggingEventTypes * eventTypes, Guid * activityID, Guid * childActivityID, Object__Array * values));
IL2CPP_REGISTER_METHOD(0x01751720, void, WriteMultiMergeInner, (EventSource * __this, String * eventName, EventSourceOptions * options, TraceLoggingEventTypes * eventTypes, Guid * activityID, Guid * childActivityID, Object__Array * values));
IL2CPP_REGISTER_METHODINFO(0x0475A040, EventSource_WriteMultiMergeInner__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01751D50, void, WriteMultiMerge, (EventSource * __this, String * eventName, EventSourceOptions * options, TraceLoggingEventTypes * eventTypes, Guid * activityID, Guid * childActivityID, EventSource_EventData * data));
IL2CPP_REGISTER_METHODINFO(0x0476B2C8, EventSource_WriteMultiMerge_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01752200, void, WriteCleanup, (EventSource * __this, GCHandle * pPins, int32_t cPins));
IL2CPP_REGISTER_METHOD(0x01752300, void, InitializeProviderMetadata, (EventSource * __this));
IL2CPP_REGISTER_METHODINFO(0x04724BD0, EventSource_InitializeProviderMetadata__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01752AA0, int32_t, AddValueToMetaData, (List_1_System_Byte_ * metaData, String * value));
IL2CPP_REGISTER_METHODINFO(0x0471AB68, EventSource_AddValueToMetaData__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01752E40, int32_t, HexDigit, (uint16_t c));
IL2CPP_REGISTER_METHODINFO(0x04760F80, EventSource_HexDigit__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01752F90, NameInfo_1 *, UpdateDescriptor, (EventSource * __this, String * name, TraceLoggingEventTypes * eventInfo, EventSourceOptions * options, EventDescriptor * descriptor));
IL2CPP_REGISTER_METHOD(0x002FB930, String *, get_Name, (EventSource * __this));
IL2CPP_REGISTER_METHOD(0x017530F0, Guid, get_Guid, (EventSource * __this));
IL2CPP_REGISTER_METHOD(0x006142D0, bool, IsEnabled, (EventSource * __this));
IL2CPP_REGISTER_METHOD(0x01753100, bool, IsEnabled, (EventSource * __this, EventLevel__Enum level, EventKeywords__Enum keywords));
IL2CPP_REGISTER_METHOD(0x01753100, bool, IsEnabled, (EventSource * __this, EventLevel__Enum level, EventKeywords__Enum keywords, EventChannel__Enum channel));
IL2CPP_REGISTER_METHOD(0x01753130, Guid, GetGuid, (Type * eventSourceType));
IL2CPP_REGISTER_METHODINFO(0x0471A8A8, EventSource_GetGuid__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01753480, String *, GetName, (Type * eventSourceType));
IL2CPP_REGISTER_METHOD(0x01753520, void, SetCurrentThreadActivityId, (Guid activityId));
IL2CPP_REGISTER_METHOD(0x017538F0, Guid, get_CurrentThreadActivityId, ());
IL2CPP_REGISTER_METHOD(0x017539A0, Guid, get_InternalCurrentThreadActivityId, ());
IL2CPP_REGISTER_METHOD(0x01753AE0, Guid, get_FallbackActivityId, ());
IL2CPP_REGISTER_METHOD(0x01753BD0, String *, ToString, (EventSource * __this));
IL2CPP_REGISTER_METHOD(0x01753D40, void, __ctor, (EventSource * __this));
IL2CPP_REGISTER_METHOD(0x01753D50, void, __ctor, (EventSource * __this, EventSourceSettings__Enum settings));
IL2CPP_REGISTER_METHOD(0x01753D60, void, __ctor, (EventSource * __this, EventSourceSettings__Enum settings, String__Array * traits));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnEventCommand, (EventSource * __this, EventCommandEventArgs * command));
IL2CPP_REGISTER_METHOD(0x01753FA0, void, WriteEvent, (EventSource * __this, int32_t eventId));
IL2CPP_REGISTER_METHOD(0x01753FC0, void, WriteEvent, (EventSource * __this, int32_t eventId, int32_t arg1));
IL2CPP_REGISTER_METHODINFO(0x04778418, EventSource_WriteEvent_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01754090, void, WriteEvent, (EventSource * __this, int32_t eventId, int64_t arg1));
IL2CPP_REGISTER_METHODINFO(0x0476D940, EventSource_WriteEvent_2__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01754160, void, WriteEvent, (EventSource * __this, int32_t eventId, String * arg1));
IL2CPP_REGISTER_METHODINFO(0x0476E9B8, EventSource_WriteEvent_3__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01754260, void, WriteEvent, (EventSource * __this, int32_t eventId, String * arg1, String * arg2));
IL2CPP_REGISTER_METHODINFO(0x04781230, EventSource_WriteEvent_4__MethodInfo);
IL2CPP_REGISTER_METHOD(0x017543A0, void, WriteEvent, (EventSource * __this, int32_t eventId, String * arg1, String * arg2, String * arg3));
IL2CPP_REGISTER_METHODINFO(0x04767468, EventSource_WriteEvent_5__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01754520, void, WriteEvent, (EventSource * __this, int32_t eventId, int64_t arg1, String * arg2));
IL2CPP_REGISTER_METHODINFO(0x04778340, EventSource_WriteEvent_6__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01754630, void, WriteEventCore, (EventSource * __this, int32_t eventId, int32_t eventDataCount, EventSource_EventData * data));
IL2CPP_REGISTER_METHOD(0x01754660, void, WriteEventWithRelatedActivityIdCore, (EventSource * __this, int32_t eventId, Guid * relatedActivityId, int32_t eventDataCount, EventSource_EventData * data));
IL2CPP_REGISTER_METHODINFO(0x04774B90, EventSource_WriteEventWithRelatedActivityIdCore__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01755350, void, WriteEvent, (EventSource * __this, int32_t eventId, Object__Array * args));
IL2CPP_REGISTER_METHOD(0x01755370, void, Dispose, (EventSource * __this));
IL2CPP_REGISTER_METHOD(0x01755420, void, Dispose, (EventSource * __this, bool disposing));
IL2CPP_REGISTER_METHOD(0x017555C0, void, Finalize, (EventSource * __this));
IL2CPP_REGISTER_METHOD(0x01755640, void, WriteStringToListener, (EventSource * __this, EventListener * listener, String * msg, SessionMask m));
IL2CPP_REGISTER_METHOD(0x017559C0, void, WriteEventRaw, (EventSource * __this, String * eventName, EventDescriptor * eventDescriptor, Guid * activityID, Guid * relatedActivityID, int32_t dataCount, void * data));
IL2CPP_REGISTER_METHOD(0x01755B00, void, Initialize, (EventSource * __this, Guid eventSourceGuid, String * eventSourceName, String__Array * traits));
IL2CPP_REGISTER_METHODINFO(0x047109D0, EventSource_Initialize__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01756200, String *, GetName, (Type * eventSourceType, EventManifestOptions__Enum flags));
IL2CPP_REGISTER_METHODINFO(0x0472CC80, EventSource_GetName_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01756390, Guid, GenerateGuidFromName, (String * name));
IL2CPP_REGISTER_METHOD(0x017565F0, Object *, DecodeObject, (EventSource * __this, int32_t eventId, int32_t parameterId, EventSource_EventData * * data));
IL2CPP_REGISTER_METHOD(0x01756DF0, EventDispatcher *, GetDispatcher, (EventSource * __this, EventListener * listener));
IL2CPP_REGISTER_METHOD(0x01756E20, void, WriteEventVarargs, (EventSource * __this, int32_t eventId, Guid * childActivityID, Object__Array * args));
IL2CPP_REGISTER_METHODINFO(0x047103D0, EventSource_WriteEventVarargs__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01757C10, Object__Array *, SerializeEventArgs, (EventSource * __this, int32_t eventId, Object__Array * args));
IL2CPP_REGISTER_METHOD(0x01757FC0, void, LogEventArgsMismatches, (EventSource * __this, ParameterInfo_1__Array * infos, Object__Array * args));
IL2CPP_REGISTER_METHOD(0x01758210, int32_t, GetParamLengthIncludingByteArray, (EventSource * __this, ParameterInfo_1__Array * parameters));
IL2CPP_REGISTER_METHOD(0x01758350, void, WriteToAllListeners, (EventSource * __this, int32_t eventId, Guid * childActivityID, int32_t eventDataCount, EventSource_EventData * data));
IL2CPP_REGISTER_METHOD(0x01758800, void, WriteToAllListeners, (EventSource * __this, int32_t eventId, Guid * childActivityID, Object__Array * args));
IL2CPP_REGISTER_METHOD(0x01758B00, void, DispatchToAllListeners, (EventSource * __this, int32_t eventId, Guid * childActivityID, EventWrittenEventArgs * eventCallbackArgs));
IL2CPP_REGISTER_METHODINFO(0x04776150, EventSource_DispatchToAllListeners__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01758D80, void, WriteEventString, (EventSource * __this, EventLevel__Enum level, int64_t keywords, String * msgString));
IL2CPP_REGISTER_METHOD(0x017594A0, void, WriteStringToAllListeners, (EventSource * __this, String * eventName, String * msg));
IL2CPP_REGISTER_METHOD(0x01759A50, SessionMask, GetEtwSessionMask, (EventSource * __this, int32_t eventId, Guid * childActivityID));
IL2CPP_REGISTER_METHOD(0x01759DA0, bool, IsEnabledByDefault, (EventSource * __this, int32_t eventNum, bool enable, EventLevel__Enum currentLevel, EventKeywords__Enum currentMatchAnyKeyword));
IL2CPP_REGISTER_METHOD(0x01759E60, bool, IsEnabledCommon, (EventSource * __this, bool enabled, EventLevel__Enum currentLevel, EventKeywords__Enum currentMatchAnyKeyword, EventLevel__Enum eventLevel, EventKeywords__Enum eventKeywords, EventChannel__Enum eventChannel));
IL2CPP_REGISTER_METHOD(0x01759E90, void, ThrowEventSourceException, (EventSource * __this, String * eventName, Exception * innerEx));
IL2CPP_REGISTER_METHODINFO(0x0474C318, EventSource_ThrowEventSourceException__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0175A520, void, ValidateEventOpcodeForTransfer, (EventSource * __this, EventSource_EventMetadata * eventData, String * eventName));
IL2CPP_REGISTER_METHOD(0x0175A550, EventOpcode__Enum, GetOpcodeWithDefault, (EventOpcode__Enum opcode, String * eventName));
IL2CPP_REGISTER_METHOD(0x0175A630, void, SendCommand, (EventSource * __this, EventListener * listener, int32_t perEventSourceSessionId, int32_t etwSessionId, EventCommand__Enum command, bool enable, EventLevel__Enum level, EventKeywords__Enum matchAnyKeyword, IDictionary_2_System_String_System_String_ * commandArguments));
IL2CPP_REGISTER_METHOD(0x0175A970, void, DoCommand, (EventSource * __this, EventCommandEventArgs * commandArgs));
IL2CPP_REGISTER_METHODINFO(0x04760A58, EventSource_DoCommand__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0175B580, void, UpdateEtwSession, (EventSource * __this, int32_t sessionIdBit, int32_t etwSessionId, bool bEnable, String * activityFilters, bool participateInSampling));
IL2CPP_REGISTER_METHOD(0x0175B9F0, bool, ParseCommandArgs, (IDictionary_2_System_String_System_String_ * commandArguments, bool * participateInSampling, String * * activityFilters, int32_t * sessionIdBit));
IL2CPP_REGISTER_METHOD(0x0175BC90, void, UpdateKwdTriggers, (EventSource * __this, bool enable));
IL2CPP_REGISTER_METHOD(0x0175BD60, bool, EnableEventForDispatcher, (EventSource * __this, EventDispatcher * dispatcher, int32_t eventId, bool value));
IL2CPP_REGISTER_METHOD(0x0175BE70, bool, AnyEventEnabled, (EventSource * __this));
IL2CPP_REGISTER_METHOD(0x0175BF20, bool, get_IsDisposed, (EventSource * __this));
IL2CPP_REGISTER_METHOD(0x0175BF60, void, EnsureDescriptorsInitialized, (EventSource * __this));
IL2CPP_REGISTER_METHODINFO(0x04731F88, EventSource_EnsureDescriptorsInitialized__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0175C390, bool, SendManifest, (EventSource * __this, Byte__Array * rawManifest));
IL2CPP_REGISTER_METHODINFO(0x04760CE8, EventSource_SendManifest__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0175C6B0, Attribute *, GetCustomAttributeHelper, (MemberInfo_1 * member, Type * attributeType, EventManifestOptions__Enum flags));
IL2CPP_REGISTER_METHOD(0x0175CDF0, bool, AttributeTypeNamesMatch, (Type * attributeType, Type * reflectedAttributeType));
IL2CPP_REGISTER_METHOD(0x0175D0B0, Type *, GetEventSourceBaseType, (Type * eventSourceType, bool allowEventSourceOverride, bool reflectionOnly));
IL2CPP_REGISTER_METHOD(0x0175D320, Byte__Array *, CreateManifestAndDescriptors, (Type * eventSourceType, String * eventSourceDllName, EventSource * source, EventManifestOptions__Enum flags));
IL2CPP_REGISTER_METHODINFO(0x04738008, EventSource_CreateManifestAndDescriptors__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0175ED10, bool, RemoveFirstArgIfRelatedActivityId, (ParameterInfo_1__Array * * args));
IL2CPP_REGISTER_METHOD(0x0175EFE0, void, AddProviderEnumKind, (ManifestBuilder * manifest, FieldInfo_1 * staticField, String * providerEnumKind));
IL2CPP_REGISTER_METHOD(0x0175F680, void, AddEventDescriptor, (EventSource_EventMetadata__Array * * eventData, String * eventName, EventAttribute * eventAttribute, ParameterInfo_1__Array * eventParameters, bool hasRelatedActivityID));
IL2CPP_REGISTER_METHOD(0x0175F9D0, void, TrimEventDescriptors, (EventSource_EventMetadata__Array * * eventData));
IL2CPP_REGISTER_METHOD(0x0175FAE0, void, AddListener, (EventSource * __this, EventListener * listener));
IL2CPP_REGISTER_METHOD(0x0175FDB0, void, DebugCheckEvent, (Dictionary_2_System_String_System_String_ * * eventsByName, EventSource_EventMetadata__Array * eventData, MethodInfo_1 * method_1, EventAttribute * eventAttribute, ManifestBuilder * manifest, EventManifestOptions__Enum options));
IL2CPP_REGISTER_METHOD(0x01760730, int32_t, GetHelperCallFirstArg, (MethodInfo_1 * method_1));
IL2CPP_REGISTER_METHOD(0x01760A00, void, ReportOutOfBandMessage, (EventSource * __this, String * msg, bool flush));
IL2CPP_REGISTER_METHOD(0x01760B30, EventSourceSettings__Enum, ValidateSettings, (EventSource * __this, EventSourceSettings__Enum settings));
IL2CPP_REGISTER_METHODINFO(0x04779360, EventSource_ValidateSettings__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01760C10, bool, get_ThrowOnEventWriteErrors, (EventSource * __this));
IL2CPP_REGISTER_METHOD(0x01760C20, bool, get_SelfDescribingEvents, (EventSource * __this));
IL2CPP_REGISTER_METHOD(0x01760C30, void, ReportActivitySamplingInfo, (EventSource * __this, EventListener * listener, SessionMask sessions));
IL2CPP_REGISTER_METHOD(0x017610A0, void, __cctor, ());
}
