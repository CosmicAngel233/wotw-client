using namespace app;

namespace app::methods::TransparentWallB {
IL2CPP_REGISTER_METHOD(0x00B0C830, bool, CanPlaySound, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x00675C60, bool, get_IsRevealed, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x0043D9E0, UpdateType__Enum, get_UpdateType, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x00B0C950, void, Awake, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x00B0CB30, void, OnDestroy, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x00B0CD00, void, OnCheckpointRestore, (TransparentWallB * __this));
IL2CPP_REGISTER_METHODINFO(0x047441A0, TransparentWallB_OnCheckpointRestore__MethodInfo);
IL2CPP_REGISTER_METHOD(0x00B0CD10, void, OnEnable, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x00B0CDD0, void, OnDisable, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x006B5B90, void, Serialize, (TransparentWallB * __this, Archive * ar));
IL2CPP_REGISTER_METHOD(0x00B0CE90, void, Start, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x00B0CFC0, void, OnTriggerEnter, (TransparentWallB * __this, Collider * other));
IL2CPP_REGISTER_METHOD(0x00B0CFF0, void, OnTriggerStay, (TransparentWallB * __this, Collider * other));
IL2CPP_REGISTER_METHOD(0x00B0D000, void, OnEnterTrigger, (TransparentWallB * __this, Collider * other));
IL2CPP_REGISTER_METHOD(0x00B0D3C0, void, OnTrigger, (TransparentWallB * __this, Collider * other));
IL2CPP_REGISTER_METHOD(0x00B0D510, void, OnUpdate, (TransparentWallB * __this, float deltaTime));
IL2CPP_REGISTER_METHOD(0x00675C60, bool, get_WallVisible, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x00B0D960, void, __ctor, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x005D8A80, bool, get_IsSuspended, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x006DC040, void, set_IsSuspended, (TransparentWallB * __this, bool value));
IL2CPP_REGISTER_METHOD(0x006DC050, SuspendableMask__Enum, get_Mask, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x00B0D990, void, set_Mask, (TransparentWallB * __this, SuspendableMask__Enum value));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, get_IsAvailable, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x0058E140, Vector3, get_Position, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x00B0DA40, Bounds, get_Bounds, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x00B0DCF0, void, Highlight, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x00B0DD10, void, Unhighlight, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x002FB9B0, IMoonTypeResolver *, GetResolverForType, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x002FB9B0, IMoonTypeResolver *, GetResolverForType, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x002FB9B0, IMoonTypeResolver *, GetResolverForType, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x002FB9B0, IMoonTypeResolver *, GetResolverForType, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x002FB9B0, IMoonTypeResolver *, GetResolverForType, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x002FB9B0, IMoonTypeResolver *, GetResolverForType, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x002FB9B0, IMoonTypeResolver *, GetResolverForType, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x002FB9B0, IMoonTypeResolver *, GetResolverForType, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x002FB9B0, IMoonTypeResolver *, GetResolverForType, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x002FB9B0, IMoonTypeResolver *, GetResolverForType, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x002FB9B0, IMoonTypeResolver *, GetResolverForType, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x002FB9B0, IMoonTypeResolver *, GetResolverForType, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x002FB9B0, IMoonTypeResolver *, GetResolverForType, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x002FB9B0, IMoonTypeResolver *, GetResolverForType, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x002FB9B0, IMoonTypeResolver *, GetResolverForType, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x002FB9B0, IMoonTypeResolver *, GetResolverForType, (TransparentWallB * __this));
IL2CPP_REGISTER_METHOD(0x002FB9B0, IMoonTypeResolver *, GetResolverForType, (TransparentWallB * __this));
}
