using namespace app;

namespace app::methods::System::IO::FileStream {
IL2CPP_REGISTER_METHOD(0x01E09CF0, void, __ctor, (FileStream * __this, void * handle, FileAccess__Enum access, bool ownsHandle, int32_t bufferSize));
IL2CPP_REGISTER_METHOD(0x01E09D20, void, __ctor, (FileStream * __this, void * handle, FileAccess__Enum access, bool ownsHandle, int32_t bufferSize, bool isAsync));
IL2CPP_REGISTER_METHOD(0x01E09D50, void, __ctor, (FileStream * __this, void * handle, FileAccess__Enum access, bool ownsHandle, int32_t bufferSize, bool isAsync, bool isConsoleWrapper));
IL2CPP_REGISTER_METHODINFO(0x04776B10, FileStream__ctor_2__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E09FA0, void, __ctor, (FileStream * __this, String * path, FileMode__Enum mode));
IL2CPP_REGISTER_METHOD(0x01E09FF0, void, __ctor, (FileStream * __this, String * path, FileMode__Enum mode, FileAccess__Enum access));
IL2CPP_REGISTER_METHOD(0x01E0A040, void, __ctor, (FileStream * __this, String * path, FileMode__Enum mode, FileAccess__Enum access, FileShare__Enum share));
IL2CPP_REGISTER_METHOD(0x01E0A070, void, __ctor, (FileStream * __this, String * path, FileMode__Enum mode, FileAccess__Enum access, FileShare__Enum share, int32_t bufferSize));
IL2CPP_REGISTER_METHOD(0x01E0A0B0, void, __ctor, (FileStream * __this, String * path, FileMode__Enum mode, FileAccess__Enum access, FileShare__Enum share, int32_t bufferSize, bool useAsync));
IL2CPP_REGISTER_METHOD(0x01E0A100, void, __ctor, (FileStream * __this, String * path, FileMode__Enum mode, FileAccess__Enum access, FileShare__Enum share, int32_t bufferSize, FileOptions__Enum options));
IL2CPP_REGISTER_METHOD(0x01E0A140, void, __ctor, (FileStream * __this, String * path, FileMode__Enum mode, FileAccess__Enum access, FileShare__Enum share, int32_t bufferSize, FileOptions__Enum options, String * msgPath, bool bFromProxy, bool useLongPath, bool checkHost));
IL2CPP_REGISTER_METHOD(0x01E0A160, void, __ctor, (FileStream * __this, String * path, FileMode__Enum mode, FileAccess__Enum access, FileShare__Enum share, int32_t bufferSize, bool isAsync, bool anonymous));
IL2CPP_REGISTER_METHOD(0x01E0A1C0, void, __ctor, (FileStream * __this, String * path, FileMode__Enum mode, FileAccess__Enum access, FileShare__Enum share, int32_t bufferSize, bool anonymous, FileOptions__Enum options));
IL2CPP_REGISTER_METHODINFO(0x0472D1D8, FileStream__ctor_11__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0AB00, void, Init, (FileStream * __this, SafeFileHandle * safeHandle, FileAccess__Enum access, bool ownsHandle, int32_t bufferSize, bool isAsync, bool isConsoleWrapper));
IL2CPP_REGISTER_METHODINFO(0x04770450, FileStream_Init__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0AE50, bool, get_CanRead, (FileStream * __this));
IL2CPP_REGISTER_METHOD(0x01E0AE60, bool, get_CanWrite, (FileStream * __this));
IL2CPP_REGISTER_METHOD(0x00F83F60, bool, get_CanSeek, (FileStream * __this));
IL2CPP_REGISTER_METHOD(0x002FB990, String *, get_Name, (FileStream * __this));
IL2CPP_REGISTER_METHOD(0x01E0AE80, int64_t, get_Length, (FileStream * __this));
IL2CPP_REGISTER_METHODINFO(0x04716BA0, FileStream_get_Length__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0B030, int64_t, get_Position, (FileStream * __this));
IL2CPP_REGISTER_METHODINFO(0x047190A0, FileStream_get_Position__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0B1F0, void, set_Position, (FileStream * __this, int64_t value));
IL2CPP_REGISTER_METHODINFO(0x047987E0, FileStream_set_Position__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0B2E0, SafeFileHandle *, get_SafeFileHandle, (FileStream * __this));
IL2CPP_REGISTER_METHOD(0x01E0B320, void, ExposeHandle, (FileStream * __this));
IL2CPP_REGISTER_METHOD(0x01E0B350, int32_t, ReadByte, (FileStream * __this));
IL2CPP_REGISTER_METHODINFO(0x04758780, FileStream_ReadByte__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0B530, void, WriteByte, (FileStream * __this, uint8_t value));
IL2CPP_REGISTER_METHODINFO(0x04773618, FileStream_WriteByte__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0B700, int32_t, Read, (FileStream * __this, Byte__Array * array, int32_t offset, int32_t count));
IL2CPP_REGISTER_METHODINFO(0x04709828, FileStream_Read__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0BA50, int32_t, ReadInternal, (FileStream * __this, Byte__Array * dest, int32_t offset, int32_t count));
IL2CPP_REGISTER_METHODINFO(0x04736FC8, FileStream_ReadInternal__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0BB20, IAsyncResult *, BeginRead, (FileStream * __this, Byte__Array * array, int32_t offset, int32_t numBytes, AsyncCallback * userCallback, Object * stateObject));
IL2CPP_REGISTER_METHODINFO(0x0472CA88, FileStream_BeginRead__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0BF20, int32_t, EndRead, (FileStream * __this, IAsyncResult * asyncResult));
IL2CPP_REGISTER_METHODINFO(0x04786C98, FileStream_EndRead__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0C120, void, Write, (FileStream * __this, Byte__Array * array, int32_t offset, int32_t count));
IL2CPP_REGISTER_METHODINFO(0x04768620, FileStream_Write__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0C3B0, void, WriteInternal, (FileStream * __this, Byte__Array * src, int32_t offset, int32_t count));
IL2CPP_REGISTER_METHODINFO(0x04706070, FileStream_WriteInternal__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0C640, IAsyncResult *, BeginWrite, (FileStream * __this, Byte__Array * array, int32_t offset, int32_t numBytes, AsyncCallback * userCallback, Object * stateObject));
IL2CPP_REGISTER_METHODINFO(0x047572F8, FileStream_BeginWrite__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0CB30, void, EndWrite, (FileStream * __this, IAsyncResult * asyncResult));
IL2CPP_REGISTER_METHODINFO(0x0473CB98, FileStream_EndWrite__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0CD10, int64_t, Seek, (FileStream * __this, int64_t offset, SeekOrigin__Enum origin));
IL2CPP_REGISTER_METHODINFO(0x0473A6F8, FileStream_Seek__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0CFD0, void, SetLength, (FileStream * __this, int64_t value));
IL2CPP_REGISTER_METHODINFO(0x0473DD08, FileStream_SetLength__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0D240, void, Flush, (FileStream * __this));
IL2CPP_REGISTER_METHODINFO(0x04780E40, FileStream_Flush__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0D300, void, Finalize, (FileStream * __this));
IL2CPP_REGISTER_METHOD(0x01E0D380, void, Dispose, (FileStream * __this, bool disposing));
IL2CPP_REGISTER_METHODINFO(0x0477B088, FileStream_Dispose__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0D730, Task *, FlushAsync, (FileStream * __this, CancellationToken cancellationToken));
IL2CPP_REGISTER_METHODINFO(0x0473B948, FileStream_FlushAsync__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0D810, Task_1_System_Int32_ *, ReadAsync, (FileStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken));
IL2CPP_REGISTER_METHOD(0x01E0D820, Task *, WriteAsync, (FileStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken));
IL2CPP_REGISTER_METHOD(0x01E0D830, int32_t, ReadSegment, (FileStream * __this, Byte__Array * dest, int32_t dest_offset, int32_t count));
IL2CPP_REGISTER_METHOD(0x01E0D930, int32_t, WriteSegment, (FileStream * __this, Byte__Array * src, int32_t src_offset, int32_t count));
IL2CPP_REGISTER_METHOD(0x01E0D9A0, void, FlushBuffer, (FileStream * __this));
IL2CPP_REGISTER_METHODINFO(0x04714908, FileStream_FlushBuffer__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0DBD0, void, FlushBufferIfDirty, (FileStream * __this));
IL2CPP_REGISTER_METHOD(0x01E0DBE0, void, RefillBuffer, (FileStream * __this));
IL2CPP_REGISTER_METHOD(0x01E0DC20, int32_t, ReadData, (FileStream * __this, SafeHandle * safeHandle, Byte__Array * buf, int32_t offset, int32_t count));
IL2CPP_REGISTER_METHODINFO(0x04775130, FileStream_ReadData__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0DD90, void, InitBuffer, (FileStream * __this, int32_t size, bool isZeroSize));
IL2CPP_REGISTER_METHODINFO(0x0477FD60, FileStream_InitBuffer__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01E0E080, String *, GetSecureFileName, (FileStream * __this, String * filename));
IL2CPP_REGISTER_METHOD(0x01E0E160, String *, GetSecureFileName, (FileStream * __this, String * filename, bool full));
IL2CPP_REGISTER_METHOD(0x01E0E270, void, __cctor, (MethodInfo * method));
}
