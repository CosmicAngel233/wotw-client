#include <interception_macros.h>

namespace app::methods::AVProWindowsMedia {
IL2CPP_REGISTER_METHOD(0x002FC6D0, int32_t, get_Handle, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x002FB950, String *, get_Filename, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x002FB960, void, set_Filename, (AVProWindowsMedia * __this, String * value));
IL2CPP_REGISTER_METHOD(0x002FB970, int32_t, get_Width, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x002FB980, void, set_Width, (AVProWindowsMedia * __this, int32_t value));
IL2CPP_REGISTER_METHOD(0x005C3FF0, int32_t, get_Height, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x005C4000, void, set_Height, (AVProWindowsMedia * __this, int32_t value));
IL2CPP_REGISTER_METHOD(0x031276D0, float, get_AspectRatio, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x00446960, float, get_FrameRate, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x00724010, void, set_FrameRate, (AVProWindowsMedia * __this, float value));
IL2CPP_REGISTER_METHOD(0x00447340, float, get_DurationSeconds, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x00447350, void, set_DurationSeconds, (AVProWindowsMedia * __this, float value));
IL2CPP_REGISTER_METHOD(0x003FC7F0, uint32_t, get_DurationFrames, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x00617D40, void, set_DurationFrames, (AVProWindowsMedia * __this, uint32_t value));
IL2CPP_REGISTER_METHOD(0x031276F0, uint32_t, get_LastFrame, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x004E5A00, bool, get_IsPlaying, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x004E5A10, void, set_IsPlaying, (AVProWindowsMedia * __this, bool value));
IL2CPP_REGISTER_METHOD(0x031277A0, void, set_Loop, (AVProWindowsMedia * __this, bool value));
IL2CPP_REGISTER_METHOD(0x004E57D0, bool, get_Loop, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x03127850, void, set_AudioDelay, (AVProWindowsMedia * __this, int32_t value));
IL2CPP_REGISTER_METHOD(0x004E57A0, int32_t, get_AudioDelay, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x03127900, void, set_Volume, (AVProWindowsMedia * __this, float value));
IL2CPP_REGISTER_METHOD(0x00724040, float, get_Volume, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x031279B0, void, set_PlaybackRate, (AVProWindowsMedia * __this, float value));
IL2CPP_REGISTER_METHOD(0x03127A60, float, get_PlaybackRate, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x03127B00, float, get_PositionSeconds, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x03127BA0, void, set_PositionSeconds, (AVProWindowsMedia * __this, float value));
IL2CPP_REGISTER_METHOD(0x03127C50, uint32_t, get_PositionFrames, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x03127C70, void, set_PositionFrames, (AVProWindowsMedia * __this, uint32_t value));
IL2CPP_REGISTER_METHOD(0x03127D20, float, get_AudioBalance, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x03127DC0, void, set_AudioBalance, (AVProWindowsMedia * __this, float value));
IL2CPP_REGISTER_METHOD(0x03127E70, bool, get_IsFinishedPlaying, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x003FCB00, bool, get_RequiresFlipY, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x004C6650, void, set_RequiresFlipY, (AVProWindowsMedia * __this, bool value));
IL2CPP_REGISTER_METHOD(0x03127F10, Texture *, get_OutputTexture, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x03127C50, int32_t, get_DisplayFrame, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x03127F30, bool, StartVideo, (AVProWindowsMedia * __this, String * filename, bool allowNativeFormat, bool useBT709, bool allowAudio, bool useAudioDelay, bool useAudioMixer, bool useDisplaySync, bool ignoreFlips, FilterMode__Enum textureFilterMode, TextureWrapMode__Enum textureWrapMode));
IL2CPP_REGISTER_METHOD(0x031281C0, bool, StartVideoFromMemory, (AVProWindowsMedia * __this, String * name, void * moviePointer, int64_t movieLength, bool allowNativeFormat, bool useBT709, bool allowAudio, bool useAudioDelay, bool useAudioMixer, bool useDisplaySync, bool ignoreFlips, FilterMode__Enum textureFilterMode, TextureWrapMode__Enum textureWrapMode));
IL2CPP_REGISTER_METHOD(0x03128400, Material *, GetConversionMaterial, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x03128420, void, CompleteVideoLoad, (AVProWindowsMedia * __this, bool useBT709, bool ignoreFlips, FilterMode__Enum textureFilterMode, TextureWrapMode__Enum textureWrapMode));
IL2CPP_REGISTER_METHOD(0x03128D30, bool, StartAudio, (AVProWindowsMedia * __this, String * filename));
IL2CPP_REGISTER_METHOD(0x002FA000, void, PreRoll, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x03129190, bool, Update, (AVProWindowsMedia * __this, bool force));
IL2CPP_REGISTER_METHOD(0x031293D0, void, Play, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x03129480, void, Pause, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x03129530, void, Rewind, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x031295E0, void, Dispose, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x03129610, void, SetFrameRange, (AVProWindowsMedia * __this, int32_t min, int32_t max));
IL2CPP_REGISTER_METHOD(0x031296C0, void, ClearFrameRange, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x031296D0, void, Close, (AVProWindowsMedia * __this));
IL2CPP_REGISTER_METHOD(0x03129820, void, __ctor, (AVProWindowsMedia * __this));
}
