using namespace app;

namespace app::methods::System::Xml::Schema::XmlBaseConverter {
IL2CPP_REGISTER_METHOD(0x0223D4D0, void, __ctor, (XmlBaseConverter * __this, XmlSchemaType * schemaType));
IL2CPP_REGISTER_METHOD(0x0223D620, void, __ctor, (XmlBaseConverter * __this, XmlTypeCode__Enum typeCode));
IL2CPP_REGISTER_METHOD(0x0223D780, void, __ctor, (XmlBaseConverter * __this, XmlBaseConverter * converterAtomic));
IL2CPP_REGISTER_METHOD(0x0223D7E0, void, __ctor, (XmlBaseConverter * __this, XmlBaseConverter * converterAtomic, Type * clrTypeDefault));
IL2CPP_REGISTER_METHOD(0x0223D810, bool, ToBoolean, (XmlBaseConverter * __this, DateTime value));
IL2CPP_REGISTER_METHOD(0x0223D930, bool, ToBoolean, (XmlBaseConverter * __this, double value));
IL2CPP_REGISTER_METHOD(0x0223DA60, bool, ToBoolean, (XmlBaseConverter * __this, int32_t value));
IL2CPP_REGISTER_METHOD(0x0223DB80, bool, ToBoolean, (XmlBaseConverter * __this, int64_t value));
IL2CPP_REGISTER_METHOD(0x0223DCA0, bool, ToBoolean, (XmlBaseConverter * __this, String * value));
IL2CPP_REGISTER_METHOD(0x0223DDB0, bool, ToBoolean, (XmlBaseConverter * __this, Object * value));
IL2CPP_REGISTER_METHOD(0x0223DEC0, DateTime, ToDateTime, (XmlBaseConverter * __this, bool value));
IL2CPP_REGISTER_METHOD(0x0223DFE0, DateTime, ToDateTime, (XmlBaseConverter * __this, DateTimeOffset value));
IL2CPP_REGISTER_METHOD(0x0223E100, DateTime, ToDateTime, (XmlBaseConverter * __this, double value));
IL2CPP_REGISTER_METHOD(0x0223E230, DateTime, ToDateTime, (XmlBaseConverter * __this, int32_t value));
IL2CPP_REGISTER_METHOD(0x0223E350, DateTime, ToDateTime, (XmlBaseConverter * __this, int64_t value));
IL2CPP_REGISTER_METHOD(0x0223E470, DateTime, ToDateTime, (XmlBaseConverter * __this, String * value));
IL2CPP_REGISTER_METHOD(0x0223E580, DateTime, ToDateTime, (XmlBaseConverter * __this, Object * value));
IL2CPP_REGISTER_METHOD(0x0223E690, DateTimeOffset, ToDateTimeOffset, (XmlBaseConverter * __this, DateTime value));
IL2CPP_REGISTER_METHOD(0x0223E7C0, DateTimeOffset, ToDateTimeOffset, (XmlBaseConverter * __this, String * value));
IL2CPP_REGISTER_METHOD(0x0223E8E0, DateTimeOffset, ToDateTimeOffset, (XmlBaseConverter * __this, Object * value));
IL2CPP_REGISTER_METHOD(0x0223EA00, Decimal, ToDecimal, (XmlBaseConverter * __this, String * value));
IL2CPP_REGISTER_METHOD(0x0223EB10, Decimal, ToDecimal, (XmlBaseConverter * __this, Object * value));
IL2CPP_REGISTER_METHOD(0x0223EC20, double, ToDouble, (XmlBaseConverter * __this, bool value));
IL2CPP_REGISTER_METHOD(0x0223ED40, double, ToDouble, (XmlBaseConverter * __this, DateTime value));
IL2CPP_REGISTER_METHOD(0x0223EE60, double, ToDouble, (XmlBaseConverter * __this, int32_t value));
IL2CPP_REGISTER_METHOD(0x0223EF80, double, ToDouble, (XmlBaseConverter * __this, int64_t value));
IL2CPP_REGISTER_METHOD(0x0223F0A0, double, ToDouble, (XmlBaseConverter * __this, String * value));
IL2CPP_REGISTER_METHOD(0x0223F1B0, double, ToDouble, (XmlBaseConverter * __this, Object * value));
IL2CPP_REGISTER_METHOD(0x0223F2C0, int32_t, ToInt32, (XmlBaseConverter * __this, bool value));
IL2CPP_REGISTER_METHOD(0x0223F3E0, int32_t, ToInt32, (XmlBaseConverter * __this, DateTime value));
IL2CPP_REGISTER_METHOD(0x0223F500, int32_t, ToInt32, (XmlBaseConverter * __this, double value));
IL2CPP_REGISTER_METHOD(0x0223F620, int32_t, ToInt32, (XmlBaseConverter * __this, int64_t value));
IL2CPP_REGISTER_METHOD(0x0223F740, int32_t, ToInt32, (XmlBaseConverter * __this, String * value));
IL2CPP_REGISTER_METHOD(0x0223F840, int32_t, ToInt32, (XmlBaseConverter * __this, Object * value));
IL2CPP_REGISTER_METHOD(0x0223F940, int64_t, ToInt64, (XmlBaseConverter * __this, bool value));
IL2CPP_REGISTER_METHOD(0x0223FA60, int64_t, ToInt64, (XmlBaseConverter * __this, DateTime value));
IL2CPP_REGISTER_METHOD(0x0223FB80, int64_t, ToInt64, (XmlBaseConverter * __this, double value));
IL2CPP_REGISTER_METHOD(0x0223FCA0, int64_t, ToInt64, (XmlBaseConverter * __this, int32_t value));
IL2CPP_REGISTER_METHOD(0x0223FDC0, int64_t, ToInt64, (XmlBaseConverter * __this, String * value));
IL2CPP_REGISTER_METHOD(0x0223FEC0, int64_t, ToInt64, (XmlBaseConverter * __this, Object * value));
IL2CPP_REGISTER_METHOD(0x0223FFC0, float, ToSingle, (XmlBaseConverter * __this, double value));
IL2CPP_REGISTER_METHOD(0x022400F0, float, ToSingle, (XmlBaseConverter * __this, String * value));
IL2CPP_REGISTER_METHOD(0x02240200, float, ToSingle, (XmlBaseConverter * __this, Object * value));
IL2CPP_REGISTER_METHOD(0x02240310, String *, ToString, (XmlBaseConverter * __this, bool value));
IL2CPP_REGISTER_METHOD(0x02240420, String *, ToString, (XmlBaseConverter * __this, DateTime value));
IL2CPP_REGISTER_METHOD(0x02240530, String *, ToString, (XmlBaseConverter * __this, DateTimeOffset value));
IL2CPP_REGISTER_METHOD(0x02240650, String *, ToString, (XmlBaseConverter * __this, Decimal value));
IL2CPP_REGISTER_METHOD(0x02240770, String *, ToString, (XmlBaseConverter * __this, double value));
IL2CPP_REGISTER_METHOD(0x02240890, String *, ToString, (XmlBaseConverter * __this, int32_t value));
IL2CPP_REGISTER_METHOD(0x022409A0, String *, ToString, (XmlBaseConverter * __this, int64_t value));
IL2CPP_REGISTER_METHOD(0x02240AB0, String *, ToString, (XmlBaseConverter * __this, float value));
IL2CPP_REGISTER_METHOD(0x02240BD0, String *, ToString, (XmlBaseConverter * __this, Object * value, IXmlNamespaceResolver * nsResolver));
IL2CPP_REGISTER_METHOD(0x02240CE0, String *, ToString, (XmlBaseConverter * __this, Object * value));
IL2CPP_REGISTER_METHOD(0x02240D00, Object *, ChangeType, (XmlBaseConverter * __this, bool value, Type * destinationType));
IL2CPP_REGISTER_METHOD(0x02240DC0, Object *, ChangeType, (XmlBaseConverter * __this, DateTime value, Type * destinationType));
IL2CPP_REGISTER_METHOD(0x02240E80, Object *, ChangeType, (XmlBaseConverter * __this, Decimal value, Type * destinationType));
IL2CPP_REGISTER_METHOD(0x02240F50, Object *, ChangeType, (XmlBaseConverter * __this, double value, Type * destinationType));
IL2CPP_REGISTER_METHOD(0x02241020, Object *, ChangeType, (XmlBaseConverter * __this, int32_t value, Type * destinationType));
IL2CPP_REGISTER_METHOD(0x022410E0, Object *, ChangeType, (XmlBaseConverter * __this, int64_t value, Type * destinationType));
IL2CPP_REGISTER_METHOD(0x022411A0, Object *, ChangeType, (XmlBaseConverter * __this, String * value, Type * destinationType, IXmlNamespaceResolver * nsResolver));
IL2CPP_REGISTER_METHOD(0x022411C0, Object *, ChangeType, (XmlBaseConverter * __this, Object * value, Type * destinationType));
IL2CPP_REGISTER_METHOD(0x002FA280, XmlSchemaType *, get_SchemaType, (XmlBaseConverter * __this));
IL2CPP_REGISTER_METHOD(0x00529FF0, XmlTypeCode__Enum, get_TypeCode, (XmlBaseConverter * __this));
IL2CPP_REGISTER_METHOD(0x022411F0, String *, get_XmlTypeName, (XmlBaseConverter * __this));
IL2CPP_REGISTER_METHOD(0x002FB950, Type *, get_DefaultClrType, (XmlBaseConverter * __this));
IL2CPP_REGISTER_METHOD(0x02241540, bool, IsDerivedFrom, (Type * derivedType, Type * baseType));
IL2CPP_REGISTER_METHOD(0x02241640, Exception *, CreateInvalidClrMappingException, (XmlBaseConverter * __this, Type * sourceType, Type * destinationType));
IL2CPP_REGISTER_METHOD(0x02241A90, String *, QNameToString, (XmlQualifiedName * name));
IL2CPP_REGISTER_METHOD(0x02241C00, Object *, ChangeListType, (XmlBaseConverter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver));
IL2CPP_REGISTER_METHODINFO(0x0473D7A8, XmlBaseConverter_ChangeListType__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02241C70, Byte__Array *, StringToBase64Binary, (String * value));
IL2CPP_REGISTER_METHOD(0x02241D40, DateTime, StringToDate, (String * value));
IL2CPP_REGISTER_METHOD(0x02241E10, DateTime, StringToDateTime, (String * value));
IL2CPP_REGISTER_METHOD(0x02241EE0, TimeSpan, StringToDayTimeDuration, (String * value));
IL2CPP_REGISTER_METHOD(0x02241F40, TimeSpan, StringToDuration, (String * value));
IL2CPP_REGISTER_METHOD(0x02241FA0, DateTime, StringToGDay, (String * value));
IL2CPP_REGISTER_METHOD(0x02242070, DateTime, StringToGMonth, (String * value));
IL2CPP_REGISTER_METHOD(0x02242140, DateTime, StringToGMonthDay, (String * value));
IL2CPP_REGISTER_METHOD(0x02242210, DateTime, StringToGYear, (String * value));
IL2CPP_REGISTER_METHOD(0x022422E0, DateTime, StringToGYearMonth, (String * value));
IL2CPP_REGISTER_METHOD(0x022423B0, DateTimeOffset, StringToDateOffset, (String * value));
IL2CPP_REGISTER_METHOD(0x02242490, DateTimeOffset, StringToDateTimeOffset, (String * value));
IL2CPP_REGISTER_METHOD(0x02242570, DateTimeOffset, StringToGDayOffset, (String * value));
IL2CPP_REGISTER_METHOD(0x02242650, DateTimeOffset, StringToGMonthOffset, (String * value));
IL2CPP_REGISTER_METHOD(0x02242740, DateTimeOffset, StringToGMonthDayOffset, (String * value));
IL2CPP_REGISTER_METHOD(0x02242820, DateTimeOffset, StringToGYearOffset, (String * value));
IL2CPP_REGISTER_METHOD(0x02242900, DateTimeOffset, StringToGYearMonthOffset, (String * value));
IL2CPP_REGISTER_METHOD(0x022429E0, Byte__Array *, StringToHexBinary, (String * value));
IL2CPP_REGISTER_METHODINFO(0x0472F748, XmlBaseConverter_StringToHexBinary__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02242AF0, XmlQualifiedName *, StringToQName, (String * value, IXmlNamespaceResolver * nsResolver));
IL2CPP_REGISTER_METHODINFO(0x047817A0, XmlBaseConverter_StringToQName__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02242E60, DateTime, StringToTime, (String * value));
IL2CPP_REGISTER_METHOD(0x02242F30, DateTimeOffset, StringToTimeOffset, (String * value));
IL2CPP_REGISTER_METHOD(0x02243010, TimeSpan, StringToYearMonthDuration, (String * value));
IL2CPP_REGISTER_METHOD(0x02243070, String *, AnyUriToString, (Uri * value));
IL2CPP_REGISTER_METHOD(0x022430E0, String *, Base64BinaryToString, (Byte__Array * value));
IL2CPP_REGISTER_METHOD(0x02243180, String *, DateToString, (DateTime value));
IL2CPP_REGISTER_METHOD(0x022431C0, String *, DateTimeToString, (DateTime value));
IL2CPP_REGISTER_METHOD(0x02243200, String *, DayTimeDurationToString, (TimeSpan value));
IL2CPP_REGISTER_METHOD(0x01963C60, String *, DurationToString, (TimeSpan value));
IL2CPP_REGISTER_METHOD(0x02243260, String *, GDayToString, (DateTime value));
IL2CPP_REGISTER_METHOD(0x022432A0, String *, GMonthToString, (DateTime value));
IL2CPP_REGISTER_METHOD(0x022432E0, String *, GMonthDayToString, (DateTime value));
IL2CPP_REGISTER_METHOD(0x02243320, String *, GYearToString, (DateTime value));
IL2CPP_REGISTER_METHOD(0x02243360, String *, GYearMonthToString, (DateTime value));
IL2CPP_REGISTER_METHOD(0x022433A0, String *, DateOffsetToString, (DateTimeOffset value));
IL2CPP_REGISTER_METHOD(0x022433F0, String *, DateTimeOffsetToString, (DateTimeOffset value));
IL2CPP_REGISTER_METHOD(0x02243440, String *, GDayOffsetToString, (DateTimeOffset value));
IL2CPP_REGISTER_METHOD(0x02243490, String *, GMonthOffsetToString, (DateTimeOffset value));
IL2CPP_REGISTER_METHOD(0x022434E0, String *, GMonthDayOffsetToString, (DateTimeOffset value));
IL2CPP_REGISTER_METHOD(0x02243530, String *, GYearOffsetToString, (DateTimeOffset value));
IL2CPP_REGISTER_METHOD(0x02243580, String *, GYearMonthOffsetToString, (DateTimeOffset value));
IL2CPP_REGISTER_METHOD(0x022435D0, String *, QNameToString, (XmlQualifiedName * qname, IXmlNamespaceResolver * nsResolver));
IL2CPP_REGISTER_METHODINFO(0x04776EF8, XmlBaseConverter_QNameToString_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x022437C0, String *, TimeToString, (DateTime value));
IL2CPP_REGISTER_METHOD(0x02243800, String *, TimeOffsetToString, (DateTimeOffset value));
IL2CPP_REGISTER_METHOD(0x02243850, String *, YearMonthDurationToString, (TimeSpan value));
IL2CPP_REGISTER_METHOD(0x022438B0, DateTime, DateTimeOffsetToDateTime, (DateTimeOffset value));
IL2CPP_REGISTER_METHOD(0x022438D0, int32_t, DecimalToInt32, (Decimal value));
IL2CPP_REGISTER_METHODINFO(0x047020F0, XmlBaseConverter_DecimalToInt32__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02243B80, int64_t, DecimalToInt64, (Decimal value));
IL2CPP_REGISTER_METHODINFO(0x0471D9B0, XmlBaseConverter_DecimalToInt64__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02243DC0, uint64_t, DecimalToUInt64, (Decimal value));
IL2CPP_REGISTER_METHODINFO(0x04792180, XmlBaseConverter_DecimalToUInt64__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02244000, uint8_t, Int32ToByte, (int32_t value));
IL2CPP_REGISTER_METHODINFO(0x0471D7A0, XmlBaseConverter_Int32ToByte__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02244150, int16_t, Int32ToInt16, (int32_t value));
IL2CPP_REGISTER_METHODINFO(0x0476A2B0, XmlBaseConverter_Int32ToInt16__MethodInfo);
IL2CPP_REGISTER_METHOD(0x022442B0, int8_t, Int32ToSByte, (int32_t value));
IL2CPP_REGISTER_METHODINFO(0x0470A9D0, XmlBaseConverter_Int32ToSByte__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02244410, uint16_t, Int32ToUInt16, (int32_t value));
IL2CPP_REGISTER_METHODINFO(0x047883E8, XmlBaseConverter_Int32ToUInt16__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02244560, int32_t, Int64ToInt32, (int64_t value));
IL2CPP_REGISTER_METHODINFO(0x0471F6F8, XmlBaseConverter_Int64ToInt32__MethodInfo);
IL2CPP_REGISTER_METHOD(0x022446C0, uint32_t, Int64ToUInt32, (int64_t value));
IL2CPP_REGISTER_METHODINFO(0x0472CCC8, XmlBaseConverter_Int64ToUInt32__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02244820, DateTime, UntypedAtomicToDateTime, (String * value));
IL2CPP_REGISTER_METHOD(0x022448F0, DateTimeOffset, UntypedAtomicToDateTimeOffset, (String * value));
IL2CPP_REGISTER_METHOD(0x022449E0, void, __cctor, (MethodInfo * method));
}
