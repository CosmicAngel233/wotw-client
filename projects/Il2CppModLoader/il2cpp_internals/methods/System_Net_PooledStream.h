using namespace app;

namespace app::methods::System::Net::PooledStream {
IL2CPP_REGISTER_METHOD(0x01BCBCB0, void, __ctor, (PooledStream * __this, Object * owner));
IL2CPP_REGISTER_METHOD(0x01BCBF20, void, __ctor, (PooledStream * __this, ConnectionPool * connectionPool, TimeSpan lifetime, bool checkLifetime));
IL2CPP_REGISTER_METHOD(0x01BCC0D0, bool, get_JustConnected, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x002FBB80, IPAddress *, get_ServerAddress, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x004F2320, bool, get_IsInitalizing, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCC0F0, bool, get_CanBePooled, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCC160, void, set_CanBePooled, (PooledStream * __this, bool value));
IL2CPP_REGISTER_METHOD(0x01BCC170, bool, get_IsEmancipated, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCC1B0, Object *, get_Owner, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCC200, void, set_Owner, (PooledStream * __this, Object * value));
IL2CPP_REGISTER_METHOD(0x002FB9F0, ConnectionPool *, get_Pool, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCC2F0, ServicePoint *, get_ServicePoint, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCC310, bool, Activate, (PooledStream * __this, Object * owningObject, GeneralAsyncDelegate * asyncCallback));
IL2CPP_REGISTER_METHOD(0x01BCC340, bool, Activate, (PooledStream * __this, Object * owningObject, bool async, GeneralAsyncDelegate * asyncCallback));
IL2CPP_REGISTER_METHODINFO(0x047995A0, PooledStream_Activate_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BCC4A0, void, Deactivate, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCC5D0, void, ConnectionCallback, (PooledStream * __this, Object * owningObject, Exception * e, Socket * socket, IPAddress * address));
IL2CPP_REGISTER_METHODINFO(0x0476B670, PooledStream_ConnectionCallback__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BCC730, void, CheckLifetime, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCC840, void, UpdateLifetime, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCC890, void, PrePush, (PooledStream * __this, Object * expectedOwner));
IL2CPP_REGISTER_METHODINFO(0x047606D0, PooledStream_PrePush__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BCCAC0, void, PostPop, (PooledStream * __this, Object * newOwner));
IL2CPP_REGISTER_METHODINFO(0x04709C70, PooledStream_PostPop__MethodInfo);
IL2CPP_REGISTER_METHOD(0x00417870, bool, get_UsingSecureStream, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x002FBBA0, NetworkStream *, get_NetworkStream, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCCDE0, void, set_NetworkStream, (PooledStream * __this, NetworkStream * value));
IL2CPP_REGISTER_METHOD(0x01BCCDF0, Socket *, get_Socket, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCCEE0, bool, get_CanRead, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCCF10, bool, get_CanSeek, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCCF40, bool, get_CanWrite, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCCF70, bool, get_CanTimeout, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCCFA0, int32_t, get_ReadTimeout, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCCFD0, void, set_ReadTimeout, (PooledStream * __this, int32_t value));
IL2CPP_REGISTER_METHOD(0x01BCD000, int32_t, get_WriteTimeout, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCD030, void, set_WriteTimeout, (PooledStream * __this, int32_t value));
IL2CPP_REGISTER_METHOD(0x01BCD060, int64_t, get_Length, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCD090, int64_t, get_Position, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCD0C0, void, set_Position, (PooledStream * __this, int64_t value));
IL2CPP_REGISTER_METHOD(0x01BCD0F0, int64_t, Seek, (PooledStream * __this, int64_t offset, SeekOrigin__Enum origin));
IL2CPP_REGISTER_METHOD(0x01BCD120, int32_t, Read, (PooledStream * __this, Byte__Array * buffer, int32_t offset, int32_t size));
IL2CPP_REGISTER_METHOD(0x01BCD150, void, Write, (PooledStream * __this, Byte__Array * buffer, int32_t offset, int32_t size));
IL2CPP_REGISTER_METHOD(0x01BCD180, void, MultipleWrite, (PooledStream * __this, BufferOffsetSize_1__Array * buffers));
IL2CPP_REGISTER_METHOD(0x01BCD1B0, void, Dispose, (PooledStream * __this, bool disposing));
IL2CPP_REGISTER_METHOD(0x01BCD290, void, CloseSocket, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCD300, void, Close, (PooledStream * __this, int32_t timeout));
IL2CPP_REGISTER_METHOD(0x01BCD420, IAsyncResult *, BeginRead, (PooledStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * callback, Object * state));
IL2CPP_REGISTER_METHOD(0x01BCD450, IAsyncResult *, UnsafeBeginRead, (PooledStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * callback, Object * state));
IL2CPP_REGISTER_METHOD(0x01BCD480, int32_t, EndRead, (PooledStream * __this, IAsyncResult * asyncResult));
IL2CPP_REGISTER_METHOD(0x01BCD4B0, IAsyncResult *, BeginWrite, (PooledStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * callback, Object * state));
IL2CPP_REGISTER_METHOD(0x01BCD4E0, IAsyncResult *, UnsafeBeginWrite, (PooledStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * callback, Object * state));
IL2CPP_REGISTER_METHOD(0x01BCD510, void, EndWrite, (PooledStream * __this, IAsyncResult * asyncResult));
IL2CPP_REGISTER_METHOD(0x01BCD540, IAsyncResult *, BeginMultipleWrite, (PooledStream * __this, BufferOffsetSize_1__Array * buffers, AsyncCallback * callback, Object * state));
IL2CPP_REGISTER_METHOD(0x01BCD570, void, EndMultipleWrite, (PooledStream * __this, IAsyncResult * asyncResult));
IL2CPP_REGISTER_METHOD(0x01BCD5A0, void, Flush, (PooledStream * __this));
IL2CPP_REGISTER_METHOD(0x01BCD5D0, Task *, FlushAsync, (PooledStream * __this, CancellationToken cancellationToken));
IL2CPP_REGISTER_METHOD(0x01BCD600, void, SetLength, (PooledStream * __this, int64_t value));
IL2CPP_REGISTER_METHOD(0x01BCD630, void, SetSocketTimeoutOption, (PooledStream * __this, SocketShutdown__Enum mode, int32_t timeout, bool silent));
IL2CPP_REGISTER_METHOD(0x01BCD660, bool, Poll, (PooledStream * __this, int32_t microSeconds, SelectMode__Enum mode));
IL2CPP_REGISTER_METHOD(0x01BCD7F0, bool, PollRead, (PooledStream * __this));
}
