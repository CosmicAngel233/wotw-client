using namespace app;

namespace app::methods::AkSoundEngine {
IL2CPP_REGISTER_METHOD(0x01898660, uint32_t, get_AK_SOUNDBANK_VERSION, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01898770, uint16_t, get_AK_INT, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01898880, uint16_t, get_AK_FLOAT, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01898990, uint8_t, get_AK_INTERLEAVED, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01898AA0, uint8_t, get_AK_NONINTERLEAVED, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01898BB0, uint32_t, get_AK_LE_NATIVE_BITSPERSAMPLE, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01898CC0, uint32_t, get_AK_LE_NATIVE_SAMPLETYPE, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01898DD0, uint32_t, get_AK_LE_NATIVE_INTERLEAVE, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01898EE0, uint32_t, DynamicSequenceOpen, (GameObject * in_gameObjectID, uint32_t in_uFlags, AkCallbackManager_EventCallback * in_pfnCallback, Object * in_pCookie, AkDynamicSequenceType__Enum in_eDynamicSequenceType));
IL2CPP_REGISTER_METHOD(0x018990D0, uint32_t, DynamicSequenceOpen, (GameObject * in_gameObjectID, uint32_t in_uFlags, AkCallbackManager_EventCallback * in_pfnCallback, Object * in_pCookie));
IL2CPP_REGISTER_METHOD(0x018992B0, uint32_t, DynamicSequenceOpen, (GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x01899420, AKRESULT__Enum, DynamicSequenceClose, (uint32_t in_playingID));
IL2CPP_REGISTER_METHOD(0x01899540, AKRESULT__Enum, DynamicSequencePlay, (uint32_t in_playingID, int32_t in_uTransitionDuration, AkCurveInterpolation__Enum in_eFadeCurve));
IL2CPP_REGISTER_METHOD(0x01899680, AKRESULT__Enum, DynamicSequencePlay, (uint32_t in_playingID, int32_t in_uTransitionDuration));
IL2CPP_REGISTER_METHOD(0x018997B0, AKRESULT__Enum, DynamicSequencePlay, (uint32_t in_playingID));
IL2CPP_REGISTER_METHOD(0x018998D0, AKRESULT__Enum, DynamicSequencePause, (uint32_t in_playingID, int32_t in_uTransitionDuration, AkCurveInterpolation__Enum in_eFadeCurve));
IL2CPP_REGISTER_METHOD(0x01899A10, AKRESULT__Enum, DynamicSequencePause, (uint32_t in_playingID, int32_t in_uTransitionDuration));
IL2CPP_REGISTER_METHOD(0x01899B40, AKRESULT__Enum, DynamicSequencePause, (uint32_t in_playingID));
IL2CPP_REGISTER_METHOD(0x01899C60, AKRESULT__Enum, DynamicSequenceResume, (uint32_t in_playingID, int32_t in_uTransitionDuration, AkCurveInterpolation__Enum in_eFadeCurve));
IL2CPP_REGISTER_METHOD(0x01899DA0, AKRESULT__Enum, DynamicSequenceResume, (uint32_t in_playingID, int32_t in_uTransitionDuration));
IL2CPP_REGISTER_METHOD(0x01899ED0, AKRESULT__Enum, DynamicSequenceResume, (uint32_t in_playingID));
IL2CPP_REGISTER_METHOD(0x01899FF0, AKRESULT__Enum, DynamicSequenceStop, (uint32_t in_playingID, int32_t in_uTransitionDuration, AkCurveInterpolation__Enum in_eFadeCurve));
IL2CPP_REGISTER_METHOD(0x0189A130, AKRESULT__Enum, DynamicSequenceStop, (uint32_t in_playingID, int32_t in_uTransitionDuration));
IL2CPP_REGISTER_METHOD(0x0189A260, AKRESULT__Enum, DynamicSequenceStop, (uint32_t in_playingID));
IL2CPP_REGISTER_METHOD(0x0189A380, AKRESULT__Enum, DynamicSequenceBreak, (uint32_t in_playingID));
IL2CPP_REGISTER_METHOD(0x0189A4A0, AKRESULT__Enum, DynamicSequenceGetPauseTimes, (uint32_t in_playingID, uint32_t * out_uTime, uint32_t * out_uDuration));
IL2CPP_REGISTER_METHOD(0x0189A5E0, AkPlaylist *, DynamicSequenceLockPlaylist, (uint32_t in_playingID));
IL2CPP_REGISTER_METHOD(0x0189A7F0, AKRESULT__Enum, DynamicSequenceUnlockPlaylist, (uint32_t in_playingID));
IL2CPP_REGISTER_METHOD(0x0189A910, bool, IsInitialized, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x0189AA20, AKRESULT__Enum, GetAudioSettings, (AkAudioSettings * out_audioSettings));
IL2CPP_REGISTER_METHOD(0x0189ABA0, AkChannelConfig *, GetSpeakerConfiguration, (uint64_t in_idOutput));
IL2CPP_REGISTER_METHOD(0x0189ADA0, AkChannelConfig *, GetSpeakerConfiguration, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x0189AF90, AKRESULT__Enum, GetPanningRule, (int32_t * out_ePanningRule, uint64_t in_idOutput));
IL2CPP_REGISTER_METHOD(0x0189B0C0, AKRESULT__Enum, GetPanningRule, (int32_t * out_ePanningRule));
IL2CPP_REGISTER_METHOD(0x0189B1E0, AKRESULT__Enum, SetPanningRule, (AkPanningRule__Enum in_ePanningRule, uint64_t in_idOutput));
IL2CPP_REGISTER_METHOD(0x0189B310, AKRESULT__Enum, SetPanningRule, (AkPanningRule__Enum in_ePanningRule));
IL2CPP_REGISTER_METHOD(0x0189B430, AKRESULT__Enum, GetSpeakerAngles, (Single__Array * io_pfSpeakerAngles, uint32_t * io_uNumAngles, float * out_fHeightAngle, uint64_t in_idOutput));
IL2CPP_REGISTER_METHOD(0x0189B590, AKRESULT__Enum, GetSpeakerAngles, (Single__Array * io_pfSpeakerAngles, uint32_t * io_uNumAngles, float * out_fHeightAngle));
IL2CPP_REGISTER_METHOD(0x0189B6E0, AKRESULT__Enum, SetSpeakerAngles, (Single__Array * in_pfSpeakerAngles, uint32_t in_uNumAngles, float in_fHeightAngle, uint64_t in_idOutput));
IL2CPP_REGISTER_METHOD(0x0189B830, AKRESULT__Enum, SetSpeakerAngles, (Single__Array * in_pfSpeakerAngles, uint32_t in_uNumAngles, float in_fHeightAngle));
IL2CPP_REGISTER_METHOD(0x0189B970, AKRESULT__Enum, SetVolumeThreshold, (float in_fVolumeThresholdDB));
IL2CPP_REGISTER_METHOD(0x0189BA90, AKRESULT__Enum, SetMaxNumVoicesLimit, (uint16_t in_maxNumberVoices));
IL2CPP_REGISTER_METHOD(0x0189BBB0, AKRESULT__Enum, RenderAudio, (bool in_bAllowSyncRender));
IL2CPP_REGISTER_METHOD(0x0189BCD0, AKRESULT__Enum, RenderAudio, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x0189BDE0, AKRESULT__Enum, RegisterPluginDLL, (String * in_DllName, String * in_DllPath));
IL2CPP_REGISTER_METHOD(0x0189BF20, AKRESULT__Enum, RegisterPluginDLL, (String * in_DllName));
IL2CPP_REGISTER_METHOD(0x0189C050, uint32_t, GetIDFromString, (String * in_pszString));
IL2CPP_REGISTER_METHOD(0x0189C180, uint32_t, PostEvent, (uint32_t in_eventID, GameObject * in_gameObjectID, uint32_t in_uFlags, AkCallbackManager_EventCallback * in_pfnCallback, Object * in_pCookie, uint32_t in_cExternals, AkExternalSourceInfoArray * in_pExternalSources, uint32_t in_PlayingID));
IL2CPP_REGISTER_METHOD(0x0189C3C0, uint32_t, PostEvent, (uint32_t in_eventID, GameObject * in_gameObjectID, uint32_t in_uFlags, AkCallbackManager_EventCallback * in_pfnCallback, Object * in_pCookie, uint32_t in_cExternals, AkExternalSourceInfoArray * in_pExternalSources));
IL2CPP_REGISTER_METHOD(0x0189C5F0, uint32_t, PostEvent, (uint32_t in_eventID, GameObject * in_gameObjectID, uint32_t in_uFlags, AkCallbackManager_EventCallback * in_pfnCallback, Object * in_pCookie));
IL2CPP_REGISTER_METHOD(0x0189C770, uint32_t, PostEvent, (uint32_t in_eventID, uint64_t in_gameObjectID_id, uint32_t in_uFlags, AkCallbackManager_EventCallback * in_pfnCallback, Object * in_pCookie));
IL2CPP_REGISTER_METHOD(0x0189C8C0, uint32_t, PostEvent, (uint32_t in_eventID, GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x0189C9C0, uint32_t, PostEvent, (uint32_t in_eventID, uint64_t in_gameObjectID_id));
IL2CPP_REGISTER_METHOD(0x0189CAA0, uint32_t, PostEvent, (String * in_pszEventName, GameObject * in_gameObjectID, uint32_t in_uFlags, AkCallbackManager_EventCallback * in_pfnCallback, Object * in_pCookie, uint32_t in_cExternals, AkExternalSourceInfoArray * in_pExternalSources, uint32_t in_PlayingID));
IL2CPP_REGISTER_METHOD(0x0189CCE0, uint32_t, PostEvent, (String * in_pszEventName, GameObject * in_gameObjectID, uint32_t in_uFlags, AkCallbackManager_EventCallback * in_pfnCallback, Object * in_pCookie, uint32_t in_cExternals, AkExternalSourceInfoArray * in_pExternalSources));
IL2CPP_REGISTER_METHOD(0x0189CF20, uint32_t, PostEvent, (String * in_pszEventName, GameObject * in_gameObjectID, uint32_t in_uFlags, AkCallbackManager_EventCallback * in_pfnCallback, Object * in_pCookie));
IL2CPP_REGISTER_METHOD(0x0189D120, uint32_t, PostEvent, (String * in_pszEventName, GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x0189D2B0, AKRESULT__Enum, ExecuteActionOnEvent, (uint32_t in_eventID, AkActionOnEventType__Enum in_ActionType, GameObject * in_gameObjectID, int32_t in_uTransitionDuration, AkCurveInterpolation__Enum in_eFadeCurve, uint32_t in_PlayingID));
IL2CPP_REGISTER_METHOD(0x0189D3B0, AKRESULT__Enum, ExecuteActionOnEvent, (uint32_t in_eventID, AkActionOnEventType__Enum in_ActionType, uint64_t in_gameObjectID_id, int32_t in_uTransitionDuration, AkCurveInterpolation__Enum in_eFadeCurve, uint32_t in_PlayingID));
IL2CPP_REGISTER_METHOD(0x0189D490, AKRESULT__Enum, ExecuteActionOnEvent, (uint32_t in_eventID, AkActionOnEventType__Enum in_ActionType, GameObject * in_gameObjectID, int32_t in_uTransitionDuration, AkCurveInterpolation__Enum in_eFadeCurve));
IL2CPP_REGISTER_METHOD(0x0189D610, AKRESULT__Enum, ExecuteActionOnEvent, (uint32_t in_eventID, AkActionOnEventType__Enum in_ActionType, GameObject * in_gameObjectID, int32_t in_uTransitionDuration));
IL2CPP_REGISTER_METHOD(0x0189D780, AKRESULT__Enum, ExecuteActionOnEvent, (uint32_t in_eventID, AkActionOnEventType__Enum in_ActionType, GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x0189D8E0, AKRESULT__Enum, ExecuteActionOnEvent, (uint32_t in_eventID, AkActionOnEventType__Enum in_ActionType));
IL2CPP_REGISTER_METHOD(0x0189DA10, AKRESULT__Enum, ExecuteActionOnEvent, (String * in_pszEventName, AkActionOnEventType__Enum in_ActionType, GameObject * in_gameObjectID, int32_t in_uTransitionDuration, AkCurveInterpolation__Enum in_eFadeCurve, uint32_t in_PlayingID));
IL2CPP_REGISTER_METHOD(0x0189DB90, AKRESULT__Enum, ExecuteActionOnEvent, (String * in_pszEventName, AkActionOnEventType__Enum in_ActionType, GameObject * in_gameObjectID, int32_t in_uTransitionDuration, AkCurveInterpolation__Enum in_eFadeCurve));
IL2CPP_REGISTER_METHOD(0x0189DD10, AKRESULT__Enum, ExecuteActionOnEvent, (String * in_pszEventName, AkActionOnEventType__Enum in_ActionType, GameObject * in_gameObjectID, int32_t in_uTransitionDuration));
IL2CPP_REGISTER_METHOD(0x0189DE90, AKRESULT__Enum, ExecuteActionOnEvent, (String * in_pszEventName, AkActionOnEventType__Enum in_ActionType, GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x0189E000, AKRESULT__Enum, ExecuteActionOnEvent, (String * in_pszEventName, AkActionOnEventType__Enum in_ActionType));
IL2CPP_REGISTER_METHOD(0x0189E130, AKRESULT__Enum, PostMIDIOnEvent, (uint32_t in_eventID, GameObject * in_gameObjectID, AkMIDIPostArray * in_pPosts, uint16_t in_uNumPosts));
IL2CPP_REGISTER_METHOD(0x0189E2C0, AKRESULT__Enum, StopMIDIOnEvent, (uint32_t in_eventID, GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x0189E410, AKRESULT__Enum, StopMIDIOnEvent, (uint32_t in_eventID));
IL2CPP_REGISTER_METHOD(0x0189E530, AKRESULT__Enum, StopMIDIOnEvent, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x0189E640, AKRESULT__Enum, PinEventInStreamCache, (uint32_t in_eventID, uint16_t in_uActivePriority, uint16_t in_uInactivePriority));
IL2CPP_REGISTER_METHOD(0x0189E780, AKRESULT__Enum, PinEventInStreamCache, (String * in_pszEventName, uint16_t in_uActivePriority, uint16_t in_uInactivePriority));
IL2CPP_REGISTER_METHOD(0x0189E8D0, AKRESULT__Enum, UnpinEventInStreamCache, (uint32_t in_eventID));
IL2CPP_REGISTER_METHOD(0x0189E9F0, AKRESULT__Enum, UnpinEventInStreamCache, (String * in_pszEventName));
IL2CPP_REGISTER_METHOD(0x0189EB20, AKRESULT__Enum, GetBufferStatusForPinnedEvent, (uint32_t in_eventID, float * out_fPercentBuffered, int32_t * out_bCachePinnedMemoryFull));
IL2CPP_REGISTER_METHOD(0x0189EC60, AKRESULT__Enum, GetBufferStatusForPinnedEvent, (String * in_pszEventName, float * out_fPercentBuffered, int32_t * out_bCachePinnedMemoryFull));
IL2CPP_REGISTER_METHOD(0x0189EE70, AKRESULT__Enum, SeekOnEvent, (uint32_t in_eventID, GameObject * in_gameObjectID, int32_t in_iPosition, bool in_bSeekToNearestMarker, uint32_t in_PlayingID));
IL2CPP_REGISTER_METHOD(0x0189EFF0, AKRESULT__Enum, SeekOnEvent, (uint32_t in_eventID, GameObject * in_gameObjectID, int32_t in_iPosition, bool in_bSeekToNearestMarker));
IL2CPP_REGISTER_METHOD(0x0189F170, AKRESULT__Enum, SeekOnEvent, (uint32_t in_eventID, GameObject * in_gameObjectID, int32_t in_iPosition));
IL2CPP_REGISTER_METHOD(0x0189F2E0, AKRESULT__Enum, SeekOnEvent, (String * in_pszEventName, GameObject * in_gameObjectID, int32_t in_iPosition, bool in_bSeekToNearestMarker, uint32_t in_PlayingID));
IL2CPP_REGISTER_METHOD(0x0189F470, AKRESULT__Enum, SeekOnEvent, (String * in_pszEventName, GameObject * in_gameObjectID, int32_t in_iPosition, bool in_bSeekToNearestMarker));
IL2CPP_REGISTER_METHOD(0x0189F5F0, AKRESULT__Enum, SeekOnEvent, (String * in_pszEventName, GameObject * in_gameObjectID, int32_t in_iPosition));
IL2CPP_REGISTER_METHOD(0x0189F760, AKRESULT__Enum, SeekOnEvent, (uint32_t in_eventID, GameObject * in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint32_t in_PlayingID));
IL2CPP_REGISTER_METHOD(0x0189F8E0, AKRESULT__Enum, SeekOnEvent, (uint32_t in_eventID, GameObject * in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker));
IL2CPP_REGISTER_METHOD(0x0189FA60, AKRESULT__Enum, SeekOnEvent, (uint32_t in_eventID, GameObject * in_gameObjectID, float in_fPercent));
IL2CPP_REGISTER_METHOD(0x0189FBD0, AKRESULT__Enum, SeekOnEvent, (String * in_pszEventName, GameObject * in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint32_t in_PlayingID));
IL2CPP_REGISTER_METHOD(0x0189FD60, AKRESULT__Enum, SeekOnEvent, (String * in_pszEventName, GameObject * in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker));
IL2CPP_REGISTER_METHOD(0x0189FEE0, AKRESULT__Enum, SeekOnEvent, (String * in_pszEventName, GameObject * in_gameObjectID, float in_fPercent));
IL2CPP_REGISTER_METHOD(0x018A0050, void, CancelEventCallbackCookie, (Object * in_pCookie));
IL2CPP_REGISTER_METHOD(0x018A00F0, void, CancelEventCallbackGameObject, (GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x018A0240, void, CancelEventCallback, (uint32_t in_playingID));
IL2CPP_REGISTER_METHOD(0x018A02E0, AKRESULT__Enum, GetSourcePlayPosition, (uint32_t in_PlayingID, int32_t * out_puPosition, bool in_bExtrapolate));
IL2CPP_REGISTER_METHOD(0x018A0420, AKRESULT__Enum, GetSourcePlayPosition, (uint32_t in_PlayingID, int32_t * out_puPosition));
IL2CPP_REGISTER_METHOD(0x018A0550, AKRESULT__Enum, GetSourceStreamBuffering, (uint32_t in_PlayingID, int32_t * out_buffering, int32_t * out_bIsBuffering));
IL2CPP_REGISTER_METHOD(0x018A0690, void, StopAll, (GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x018A0760, void, StopAll, (uint64_t in_gameObjectID_id));
IL2CPP_REGISTER_METHOD(0x018A0800, void, StopAll, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018A0910, void, StopPlayingID, (uint32_t in_playingID, int32_t in_uTransitionDuration, AkCurveInterpolation__Enum in_eFadeCurve));
IL2CPP_REGISTER_METHOD(0x018A0A50, void, StopPlayingID, (uint32_t in_playingID, int32_t in_uTransitionDuration));
IL2CPP_REGISTER_METHOD(0x018A0B80, void, StopPlayingID, (uint32_t in_playingID));
IL2CPP_REGISTER_METHOD(0x018A0CA0, void, ExecuteActionOnPlayingID, (AkActionOnEventType__Enum in_ActionType, uint32_t in_playingID, int32_t in_uTransitionDuration, AkCurveInterpolation__Enum in_eFadeCurve));
IL2CPP_REGISTER_METHOD(0x018A0DF0, void, ExecuteActionOnPlayingID, (AkActionOnEventType__Enum in_ActionType, uint32_t in_playingID, int32_t in_uTransitionDuration));
IL2CPP_REGISTER_METHOD(0x018A0F30, void, ExecuteActionOnPlayingID, (AkActionOnEventType__Enum in_ActionType, uint32_t in_playingID));
IL2CPP_REGISTER_METHOD(0x018A1060, void, SetRandomSeed, (uint32_t in_uSeed));
IL2CPP_REGISTER_METHOD(0x018A1180, void, MuteBackgroundMusic, (bool in_bMute));
IL2CPP_REGISTER_METHOD(0x018A12A0, bool, GetBackgroundMusicMute, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018A13B0, AKRESULT__Enum, SendPluginCustomGameData, (uint32_t in_busID, GameObject * in_busObjectID, AkPluginType__Enum in_eType, uint32_t in_uCompanyID, uint32_t in_uPluginID, void * in_pData, uint32_t in_uSizeInBytes));
IL2CPP_REGISTER_METHOD(0x018A1530, AKRESULT__Enum, UnregisterAllGameObj, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018A1640, AKRESULT__Enum, SetMultiplePositions, (GameObject * in_GameObjectID, AkPositionArray * in_pPositions, uint16_t in_NumPositions, AkMultiPositionType__Enum in_eMultiPositionType));
IL2CPP_REGISTER_METHOD(0x018A17D0, AKRESULT__Enum, SetMultiplePositions, (GameObject * in_GameObjectID, AkPositionArray * in_pPositions, uint16_t in_NumPositions));
IL2CPP_REGISTER_METHOD(0x018A1950, AKRESULT__Enum, SetMultiplePositions, (GameObject * in_GameObjectID, AkChannelEmitterArray * in_pPositions, uint16_t in_NumPositions, AkMultiPositionType__Enum in_eMultiPositionType));
IL2CPP_REGISTER_METHOD(0x018A1AE0, AKRESULT__Enum, SetMultiplePositions, (GameObject * in_GameObjectID, AkChannelEmitterArray * in_pPositions, uint16_t in_NumPositions));
IL2CPP_REGISTER_METHOD(0x018A1C60, AKRESULT__Enum, SetScalingFactor, (GameObject * in_GameObjectID, float in_fAttenuationScalingFactor));
IL2CPP_REGISTER_METHOD(0x018A1DC0, AKRESULT__Enum, ClearBanks, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018A1ED0, AKRESULT__Enum, SetBankLoadIOSettings, (float in_fThroughput, uint16_t in_priority));
IL2CPP_REGISTER_METHOD(0x018A2000, AKRESULT__Enum, LoadBank, (String * in_pszString, int32_t in_memPoolId, uint32_t * out_bankID));
IL2CPP_REGISTER_METHOD(0x018A2140, AKRESULT__Enum, LoadBank, (uint32_t in_bankID, int32_t in_memPoolId));
IL2CPP_REGISTER_METHOD(0x018A2270, AKRESULT__Enum, LoadBank, (void * in_pInMemoryBankPtr, uint32_t in_uInMemoryBankSize, uint32_t * out_bankID));
IL2CPP_REGISTER_METHOD(0x018A23B0, AKRESULT__Enum, LoadBank, (void * in_pInMemoryBankPtr, uint32_t in_uInMemoryBankSize, int32_t in_uPoolForBankMedia, uint32_t * out_bankID));
IL2CPP_REGISTER_METHOD(0x018A2500, AKRESULT__Enum, LoadBank, (String * in_pszString, AkCallbackManager_BankCallback * in_pfnBankCallback, Object * in_pCookie, int32_t in_memPoolId, uint32_t * out_bankID));
IL2CPP_REGISTER_METHOD(0x018A2740, AKRESULT__Enum, LoadBank, (uint32_t in_bankID, AkCallbackManager_BankCallback * in_pfnBankCallback, Object * in_pCookie, int32_t in_memPoolId));
IL2CPP_REGISTER_METHOD(0x018A2980, AKRESULT__Enum, LoadBank, (void * in_pInMemoryBankPtr, uint32_t in_uInMemoryBankSize, AkCallbackManager_BankCallback * in_pfnBankCallback, Object * in_pCookie, uint32_t * out_bankID));
IL2CPP_REGISTER_METHOD(0x018A2BC0, AKRESULT__Enum, LoadBank, (void * in_pInMemoryBankPtr, uint32_t in_uInMemoryBankSize, AkCallbackManager_BankCallback * in_pfnBankCallback, Object * in_pCookie, int32_t in_uPoolForBankMedia, uint32_t * out_bankID));
IL2CPP_REGISTER_METHOD(0x018A2E00, AKRESULT__Enum, UnloadBank, (String * in_pszString, void * in_pInMemoryBankPtr, int32_t * out_pMemPoolId));
IL2CPP_REGISTER_METHOD(0x018A2F50, AKRESULT__Enum, UnloadBank, (String * in_pszString, void * in_pInMemoryBankPtr));
IL2CPP_REGISTER_METHOD(0x018A3080, AKRESULT__Enum, UnloadBank, (uint32_t in_bankID, void * in_pInMemoryBankPtr, int32_t * out_pMemPoolId));
IL2CPP_REGISTER_METHOD(0x018A31C0, AKRESULT__Enum, UnloadBank, (uint32_t in_bankID, void * in_pInMemoryBankPtr));
IL2CPP_REGISTER_METHOD(0x018A32F0, AKRESULT__Enum, UnloadBank, (String * in_pszString, void * in_pInMemoryBankPtr, AkCallbackManager_BankCallback * in_pfnBankCallback, Object * in_pCookie));
IL2CPP_REGISTER_METHOD(0x018A3530, AKRESULT__Enum, UnloadBank, (uint32_t in_bankID, void * in_pInMemoryBankPtr, AkCallbackManager_BankCallback * in_pfnBankCallback, Object * in_pCookie));
IL2CPP_REGISTER_METHOD(0x018A3770, void, CancelBankCallbackCookie, (Object * in_pCookie));
IL2CPP_REGISTER_METHOD(0x018A3810, AKRESULT__Enum, PrepareBank, (AkPreparationType__Enum in_PreparationType, String * in_pszString, AkBankContent__Enum in_uFlags));
IL2CPP_REGISTER_METHOD(0x018A3950, AKRESULT__Enum, PrepareBank, (AkPreparationType__Enum in_PreparationType, String * in_pszString));
IL2CPP_REGISTER_METHOD(0x018A3A80, AKRESULT__Enum, PrepareBank, (AkPreparationType__Enum in_PreparationType, uint32_t in_bankID, AkBankContent__Enum in_uFlags));
IL2CPP_REGISTER_METHOD(0x018A3BC0, AKRESULT__Enum, PrepareBank, (AkPreparationType__Enum in_PreparationType, uint32_t in_bankID));
IL2CPP_REGISTER_METHOD(0x018A3CF0, AKRESULT__Enum, PrepareBank, (AkPreparationType__Enum in_PreparationType, String * in_pszString, AkCallbackManager_BankCallback * in_pfnBankCallback, Object * in_pCookie, AkBankContent__Enum in_uFlags));
IL2CPP_REGISTER_METHOD(0x018A3F30, AKRESULT__Enum, PrepareBank, (AkPreparationType__Enum in_PreparationType, String * in_pszString, AkCallbackManager_BankCallback * in_pfnBankCallback, Object * in_pCookie));
IL2CPP_REGISTER_METHOD(0x018A4170, AKRESULT__Enum, PrepareBank, (AkPreparationType__Enum in_PreparationType, uint32_t in_bankID, AkCallbackManager_BankCallback * in_pfnBankCallback, Object * in_pCookie, AkBankContent__Enum in_uFlags));
IL2CPP_REGISTER_METHOD(0x018A43B0, AKRESULT__Enum, PrepareBank, (AkPreparationType__Enum in_PreparationType, uint32_t in_bankID, AkCallbackManager_BankCallback * in_pfnBankCallback, Object * in_pCookie));
IL2CPP_REGISTER_METHOD(0x018A45F0, AKRESULT__Enum, ClearPreparedEvents, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018A4700, AKRESULT__Enum, PrepareEvent, (AkPreparationType__Enum in_PreparationType, String__Array * in_ppszString, uint32_t in_uNumEvent));
IL2CPP_REGISTER_METHOD(0x018A4A90, AKRESULT__Enum, PrepareEvent, (AkPreparationType__Enum in_PreparationType, UInt32__Array * in_pEventID, uint32_t in_uNumEvent));
IL2CPP_REGISTER_METHOD(0x018A4BD0, AKRESULT__Enum, PrepareEvent, (AkPreparationType__Enum in_PreparationType, String__Array * in_ppszString, uint32_t in_uNumEvent, AkCallbackManager_BankCallback * in_pfnBankCallback, Object * in_pCookie));
IL2CPP_REGISTER_METHOD(0x018A5040, AKRESULT__Enum, PrepareEvent, (AkPreparationType__Enum in_PreparationType, UInt32__Array * in_pEventID, uint32_t in_uNumEvent, AkCallbackManager_BankCallback * in_pfnBankCallback, Object * in_pCookie));
IL2CPP_REGISTER_METHOD(0x018A5290, AKRESULT__Enum, SetMedia, (AkSourceSettingsArray * in_pSourceSettings, uint32_t in_uNumSourceSettings));
IL2CPP_REGISTER_METHOD(0x018A53D0, AKRESULT__Enum, UnsetMedia, (AkSourceSettingsArray * in_pSourceSettings, uint32_t in_uNumSourceSettings));
IL2CPP_REGISTER_METHOD(0x018A5510, AKRESULT__Enum, PrepareGameSyncs, (AkPreparationType__Enum in_PreparationType, AkGroupType__Enum in_eGameSyncType, String * in_pszGroupName, String__Array * in_ppszGameSyncName, uint32_t in_uNumGameSyncs));
IL2CPP_REGISTER_METHOD(0x018A58B0, AKRESULT__Enum, PrepareGameSyncs, (AkPreparationType__Enum in_PreparationType, AkGroupType__Enum in_eGameSyncType, uint32_t in_GroupID, UInt32__Array * in_paGameSyncID, uint32_t in_uNumGameSyncs));
IL2CPP_REGISTER_METHOD(0x018A5A00, AKRESULT__Enum, PrepareGameSyncs, (AkPreparationType__Enum in_PreparationType, AkGroupType__Enum in_eGameSyncType, String * in_pszGroupName, String__Array * in_ppszGameSyncName, uint32_t in_uNumGameSyncs, AkCallbackManager_BankCallback * in_pfnBankCallback, Object * in_pCookie));
IL2CPP_REGISTER_METHOD(0x018A5E90, AKRESULT__Enum, PrepareGameSyncs, (AkPreparationType__Enum in_PreparationType, AkGroupType__Enum in_eGameSyncType, uint32_t in_GroupID, UInt32__Array * in_paGameSyncID, uint32_t in_uNumGameSyncs, AkCallbackManager_BankCallback * in_pfnBankCallback, Object * in_pCookie));
IL2CPP_REGISTER_METHOD(0x018A60F0, AKRESULT__Enum, AddListener, (GameObject * in_emitterGameObj, GameObject * in_listenerGameObj));
IL2CPP_REGISTER_METHOD(0x018A6250, AKRESULT__Enum, RemoveListener, (GameObject * in_emitterGameObj, GameObject * in_listenerGameObj));
IL2CPP_REGISTER_METHOD(0x018A63B0, AKRESULT__Enum, AddDefaultListener, (GameObject * in_listenerGameObj));
IL2CPP_REGISTER_METHOD(0x018A6500, AKRESULT__Enum, RemoveDefaultListener, (GameObject * in_listenerGameObj));
IL2CPP_REGISTER_METHOD(0x018A6650, AKRESULT__Enum, ResetListenersToDefault, (GameObject * in_emitterGameObj));
IL2CPP_REGISTER_METHOD(0x018A67A0, AKRESULT__Enum, SetListenerSpatialization, (GameObject * in_uListenerID, bool in_bSpatialized, AkChannelConfig * in_channelConfig, Single__Array * in_pVolumeOffsets));
IL2CPP_REGISTER_METHOD(0x018A6930, AKRESULT__Enum, SetListenerSpatialization, (GameObject * in_uListenerID, bool in_bSpatialized, AkChannelConfig * in_channelConfig));
IL2CPP_REGISTER_METHOD(0x018A6AB0, AKRESULT__Enum, SetRTPCValue, (uint32_t in_rtpcID, float in_value, GameObject * in_gameObjectID, int32_t in_uValueChangeDuration, AkCurveInterpolation__Enum in_eFadeCurve, bool in_bBypassInternalValueInterpolation));
IL2CPP_REGISTER_METHOD(0x018A6C40, AKRESULT__Enum, SetRTPCValue, (uint32_t in_rtpcID, float in_value, GameObject * in_gameObjectID, int32_t in_uValueChangeDuration, AkCurveInterpolation__Enum in_eFadeCurve));
IL2CPP_REGISTER_METHOD(0x018A6DC0, AKRESULT__Enum, SetRTPCValue, (uint32_t in_rtpcID, float in_value, GameObject * in_gameObjectID, int32_t in_uValueChangeDuration));
IL2CPP_REGISTER_METHOD(0x018A6F30, AKRESULT__Enum, SetRTPCValue, (uint32_t in_rtpcID, float in_value, GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x018A7020, AKRESULT__Enum, SetRTPCValue, (uint32_t in_rtpcID, float in_value, uint64_t in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x018A70E0, AKRESULT__Enum, SetRTPCValue, (uint32_t in_rtpcID, float in_value));
IL2CPP_REGISTER_METHOD(0x018A7210, AKRESULT__Enum, SetRTPCValue, (String * in_pszRtpcName, float in_value, GameObject * in_gameObjectID, int32_t in_uValueChangeDuration, AkCurveInterpolation__Enum in_eFadeCurve, bool in_bBypassInternalValueInterpolation));
IL2CPP_REGISTER_METHOD(0x018A73A0, AKRESULT__Enum, SetRTPCValue, (String * in_pszRtpcName, float in_value, GameObject * in_gameObjectID, int32_t in_uValueChangeDuration, AkCurveInterpolation__Enum in_eFadeCurve));
IL2CPP_REGISTER_METHOD(0x018A7520, AKRESULT__Enum, SetRTPCValue, (String * in_pszRtpcName, float in_value, GameObject * in_gameObjectID, int32_t in_uValueChangeDuration));
IL2CPP_REGISTER_METHOD(0x018A76A0, AKRESULT__Enum, SetRTPCValue, (String * in_pszRtpcName, float in_value, GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x018A7810, AKRESULT__Enum, SetRTPCValue, (String * in_pszRtpcName, float in_value));
IL2CPP_REGISTER_METHOD(0x018A7950, AKRESULT__Enum, SetRTPCValueByPlayingID, (uint32_t in_rtpcID, float in_value, uint32_t in_playingID, int32_t in_uValueChangeDuration, AkCurveInterpolation__Enum in_eFadeCurve, bool in_bBypassInternalValueInterpolation));
IL2CPP_REGISTER_METHOD(0x018A7AB0, AKRESULT__Enum, SetRTPCValueByPlayingID, (uint32_t in_rtpcID, float in_value, uint32_t in_playingID, int32_t in_uValueChangeDuration, AkCurveInterpolation__Enum in_eFadeCurve));
IL2CPP_REGISTER_METHOD(0x018A7C00, AKRESULT__Enum, SetRTPCValueByPlayingID, (uint32_t in_rtpcID, float in_value, uint32_t in_playingID, int32_t in_uValueChangeDuration));
IL2CPP_REGISTER_METHOD(0x018A7D50, AKRESULT__Enum, SetRTPCValueByPlayingID, (uint32_t in_rtpcID, float in_value, uint32_t in_playingID));
IL2CPP_REGISTER_METHOD(0x018A7E90, AKRESULT__Enum, SetRTPCValueByPlayingID, (String * in_pszRtpcName, float in_value, uint32_t in_playingID, int32_t in_uValueChangeDuration, AkCurveInterpolation__Enum in_eFadeCurve, bool in_bBypassInternalValueInterpolation));
IL2CPP_REGISTER_METHOD(0x018A8000, AKRESULT__Enum, SetRTPCValueByPlayingID, (String * in_pszRtpcName, float in_value, uint32_t in_playingID, int32_t in_uValueChangeDuration, AkCurveInterpolation__Enum in_eFadeCurve));
IL2CPP_REGISTER_METHOD(0x018A8160, AKRESULT__Enum, SetRTPCValueByPlayingID, (String * in_pszRtpcName, float in_value, uint32_t in_playingID, int32_t in_uValueChangeDuration));
IL2CPP_REGISTER_METHOD(0x018A82B0, AKRESULT__Enum, SetRTPCValueByPlayingID, (String * in_pszRtpcName, float in_value, uint32_t in_playingID));
IL2CPP_REGISTER_METHOD(0x018A83F0, AKRESULT__Enum, ResetRTPCValue, (uint32_t in_rtpcID, GameObject * in_gameObjectID, int32_t in_uValueChangeDuration, AkCurveInterpolation__Enum in_eFadeCurve, bool in_bBypassInternalValueInterpolation));
IL2CPP_REGISTER_METHOD(0x018A8580, AKRESULT__Enum, ResetRTPCValue, (uint32_t in_rtpcID, GameObject * in_gameObjectID, int32_t in_uValueChangeDuration, AkCurveInterpolation__Enum in_eFadeCurve));
IL2CPP_REGISTER_METHOD(0x018A8700, AKRESULT__Enum, ResetRTPCValue, (uint32_t in_rtpcID, GameObject * in_gameObjectID, int32_t in_uValueChangeDuration));
IL2CPP_REGISTER_METHOD(0x018A8870, AKRESULT__Enum, ResetRTPCValue, (uint32_t in_rtpcID, GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x018A89C0, AKRESULT__Enum, ResetRTPCValue, (uint32_t in_rtpcID));
IL2CPP_REGISTER_METHOD(0x018A8AE0, AKRESULT__Enum, ResetRTPCValue, (String * in_pszRtpcName, GameObject * in_gameObjectID, int32_t in_uValueChangeDuration, AkCurveInterpolation__Enum in_eFadeCurve, bool in_bBypassInternalValueInterpolation));
IL2CPP_REGISTER_METHOD(0x018A8C70, AKRESULT__Enum, ResetRTPCValue, (String * in_pszRtpcName, GameObject * in_gameObjectID, int32_t in_uValueChangeDuration, AkCurveInterpolation__Enum in_eFadeCurve));
IL2CPP_REGISTER_METHOD(0x018A8DF0, AKRESULT__Enum, ResetRTPCValue, (String * in_pszRtpcName, GameObject * in_gameObjectID, int32_t in_uValueChangeDuration));
IL2CPP_REGISTER_METHOD(0x018A8F60, AKRESULT__Enum, ResetRTPCValue, (String * in_pszRtpcName, GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x018A90C0, AKRESULT__Enum, ResetRTPCValue, (String * in_pszRtpcName));
IL2CPP_REGISTER_METHOD(0x018A91F0, AKRESULT__Enum, SetSwitch, (uint32_t in_switchGroup, uint32_t in_switchState, GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x018A92D0, AKRESULT__Enum, SetSwitch, (uint32_t in_switchGroup, uint32_t in_switchState, uint64_t in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x018A9390, AKRESULT__Enum, SetSwitch, (String * in_pszSwitchGroup, String * in_pszSwitchState, GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x018A9510, AKRESULT__Enum, PostTrigger, (uint32_t in_triggerID, GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x018A95F0, AKRESULT__Enum, PostTrigger, (uint32_t in_triggerID, uint64_t in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x018A96A0, AKRESULT__Enum, PostTrigger, (String * in_pszTrigger, GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x018A9800, AKRESULT__Enum, SetState, (uint32_t in_stateGroup, uint32_t in_state));
IL2CPP_REGISTER_METHOD(0x018A9930, AKRESULT__Enum, SetState, (String * in_pszStateGroup, String * in_pszState));
IL2CPP_REGISTER_METHOD(0x018A9A70, AKRESULT__Enum, SetGameObjectAuxSendValues, (GameObject * in_gameObjectID, AkAuxSendArray * in_aAuxSendValues, uint32_t in_uNumSendValues));
IL2CPP_REGISTER_METHOD(0x018A9B60, AKRESULT__Enum, SetGameObjectOutputBusVolume, (GameObject * in_emitterObjID, GameObject * in_listenerObjID, float in_fControlValue));
IL2CPP_REGISTER_METHOD(0x018A9CE0, AKRESULT__Enum, SetActorMixerEffect, (uint32_t in_audioNodeID, uint32_t in_uFXIndex, uint32_t in_shareSetID));
IL2CPP_REGISTER_METHOD(0x018A9E20, AKRESULT__Enum, SetBusEffect, (uint32_t in_audioNodeID, uint32_t in_uFXIndex, uint32_t in_shareSetID));
IL2CPP_REGISTER_METHOD(0x018A9F60, AKRESULT__Enum, SetBusEffect, (String * in_pszBusName, uint32_t in_uFXIndex, uint32_t in_shareSetID));
IL2CPP_REGISTER_METHOD(0x018AA0A0, AKRESULT__Enum, SetMixer, (uint32_t in_audioNodeID, uint32_t in_shareSetID));
IL2CPP_REGISTER_METHOD(0x018AA1D0, AKRESULT__Enum, SetMixer, (String * in_pszBusName, uint32_t in_shareSetID));
IL2CPP_REGISTER_METHOD(0x018AA300, AKRESULT__Enum, SetBusConfig, (uint32_t in_audioNodeID, AkChannelConfig * in_channelConfig));
IL2CPP_REGISTER_METHOD(0x018AA440, AKRESULT__Enum, SetBusConfig, (String * in_pszBusName, AkChannelConfig * in_channelConfig));
IL2CPP_REGISTER_METHOD(0x018AA580, AKRESULT__Enum, SetObjectObstructionAndOcclusion, (GameObject * in_EmitterID, GameObject * in_ListenerID, float in_fObstructionLevel, float in_fOcclusionLevel));
IL2CPP_REGISTER_METHOD(0x018AA710, AKRESULT__Enum, SetMultipleObstructionAndOcclusion, (GameObject * in_EmitterID, GameObject * in_uListenerID, AkObstructionOcclusionValuesArray * in_fObstructionOcclusionValues, uint32_t in_uNumOcclusionObstruction));
IL2CPP_REGISTER_METHOD(0x018AA8B0, AKRESULT__Enum, StartOutputCapture, (String * in_CaptureFileName));
IL2CPP_REGISTER_METHOD(0x018AA9E0, AKRESULT__Enum, StopOutputCapture, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018AAAF0, AKRESULT__Enum, AddOutputCaptureMarker, (String * in_MarkerText));
IL2CPP_REGISTER_METHOD(0x018AACE0, AKRESULT__Enum, StartProfilerCapture, (String * in_CaptureFileName));
IL2CPP_REGISTER_METHOD(0x018AAE10, AKRESULT__Enum, StopProfilerCapture, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018AAF20, AKRESULT__Enum, RemoveOutput, (uint64_t in_idOutput));
IL2CPP_REGISTER_METHOD(0x018AB040, AKRESULT__Enum, ReplaceOutput, (AkOutputSettings * in_Settings, uint64_t in_outputDeviceId, uint64_t * out_pOutputDeviceId));
IL2CPP_REGISTER_METHOD(0x018AB190, AKRESULT__Enum, ReplaceOutput, (AkOutputSettings * in_Settings, uint64_t in_outputDeviceId));
IL2CPP_REGISTER_METHOD(0x018AB2D0, uint64_t, GetOutputID, (uint32_t in_idShareset, uint32_t in_idDevice));
IL2CPP_REGISTER_METHOD(0x018AB400, uint64_t, GetOutputID, (String * in_szShareSet, uint32_t in_idDevice));
IL2CPP_REGISTER_METHOD(0x018AB5F0, AKRESULT__Enum, SetBusDevice, (uint32_t in_idBus, uint32_t in_idNewDevice));
IL2CPP_REGISTER_METHOD(0x018AB720, AKRESULT__Enum, SetBusDevice, (String * in_BusName, String * in_DeviceName));
IL2CPP_REGISTER_METHOD(0x018AB7D0, AKRESULT__Enum, SetOutputVolume, (uint64_t in_idOutput, float in_fVolume));
IL2CPP_REGISTER_METHOD(0x018AB900, AKRESULT__Enum, GetDeviceSpatialAudioSupport, (uint32_t in_idDevice));
IL2CPP_REGISTER_METHOD(0x018ABA20, AKRESULT__Enum, Suspend, (bool in_bRenderAnyway));
IL2CPP_REGISTER_METHOD(0x018ABB40, AKRESULT__Enum, Suspend, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018ABC50, AKRESULT__Enum, WakeupFromSuspend, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018ABD60, uint32_t, GetBufferTick, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018ABE70, uint8_t, get_AK_INVALID_MIDI_CHANNEL, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018ABF80, uint8_t, get_AK_INVALID_MIDI_NOTE, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018AC090, AKRESULT__Enum, GetPlayingSegmentInfo, (uint32_t in_PlayingID, AkSegmentInfo * out_segmentInfo, bool in_bExtrapolate));
IL2CPP_REGISTER_METHOD(0x018AC1E0, AKRESULT__Enum, GetPlayingSegmentInfo, (uint32_t in_PlayingID, AkSegmentInfo * out_segmentInfo));
IL2CPP_REGISTER_METHOD(0x018AC320, AKRESULT__Enum, PostCode, (AkMonitorErrorCode__Enum in_eError, AkMonitorErrorLevel__Enum in_eErrorLevel, uint32_t in_playingID, GameObject * in_gameObjID, uint32_t in_audioNodeID, bool in_bIsBus));
IL2CPP_REGISTER_METHOD(0x018AC4B0, AKRESULT__Enum, PostCode, (AkMonitorErrorCode__Enum in_eError, AkMonitorErrorLevel__Enum in_eErrorLevel, uint32_t in_playingID, GameObject * in_gameObjID, uint32_t in_audioNodeID));
IL2CPP_REGISTER_METHOD(0x018AC630, AKRESULT__Enum, PostCode, (AkMonitorErrorCode__Enum in_eError, AkMonitorErrorLevel__Enum in_eErrorLevel, uint32_t in_playingID, GameObject * in_gameObjID));
IL2CPP_REGISTER_METHOD(0x018AC7A0, AKRESULT__Enum, PostCode, (AkMonitorErrorCode__Enum in_eError, AkMonitorErrorLevel__Enum in_eErrorLevel, uint32_t in_playingID));
IL2CPP_REGISTER_METHOD(0x018AC8E0, AKRESULT__Enum, PostCode, (AkMonitorErrorCode__Enum in_eError, AkMonitorErrorLevel__Enum in_eErrorLevel));
IL2CPP_REGISTER_METHOD(0x018ACA10, AKRESULT__Enum, PostString, (String * in_pszError, AkMonitorErrorLevel__Enum in_eErrorLevel, uint32_t in_playingID, GameObject * in_gameObjID, uint32_t in_audioNodeID, bool in_bIsBus));
IL2CPP_REGISTER_METHOD(0x018ACBA0, AKRESULT__Enum, PostString, (String * in_pszError, AkMonitorErrorLevel__Enum in_eErrorLevel, uint32_t in_playingID, GameObject * in_gameObjID, uint32_t in_audioNodeID));
IL2CPP_REGISTER_METHOD(0x018ACD20, AKRESULT__Enum, PostString, (String * in_pszError, AkMonitorErrorLevel__Enum in_eErrorLevel, uint32_t in_playingID, GameObject * in_gameObjID));
IL2CPP_REGISTER_METHOD(0x018ACEA0, AKRESULT__Enum, PostString, (String * in_pszError, AkMonitorErrorLevel__Enum in_eErrorLevel, uint32_t in_playingID));
IL2CPP_REGISTER_METHOD(0x018ACFE0, AKRESULT__Enum, PostString, (String * in_pszError, AkMonitorErrorLevel__Enum in_eErrorLevel));
IL2CPP_REGISTER_METHOD(0x018AD110, int32_t, GetTimeStamp, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018AD220, uint32_t, GetNumNonZeroBits, (uint32_t in_uWord));
IL2CPP_REGISTER_METHOD(0x018AD340, void, AkGetDefaultHighPriorityThreadProperties, (AkThreadProperties * out_threadProperties));
IL2CPP_REGISTER_METHOD(0x018AD470, uint32_t, ResolveDialogueEvent, (uint32_t in_eventID, UInt32__Array * in_aArgumentValues, uint32_t in_uNumArguments, uint32_t in_idSequence));
IL2CPP_REGISTER_METHOD(0x018AD5C0, uint32_t, ResolveDialogueEvent, (uint32_t in_eventID, UInt32__Array * in_aArgumentValues, uint32_t in_uNumArguments));
IL2CPP_REGISTER_METHOD(0x018AD700, AKRESULT__Enum, GetDialogueEventCustomPropertyValue, (uint32_t in_eventID, uint32_t in_uPropID, int32_t * out_iValue));
IL2CPP_REGISTER_METHOD(0x018AD840, AKRESULT__Enum, GetDialogueEventCustomPropertyValue, (uint32_t in_eventID, uint32_t in_uPropID, float * out_fValue));
IL2CPP_REGISTER_METHOD(0x018AD980, AKRESULT__Enum, GetPosition, (GameObject * in_GameObjectID, AkTransform * out_rPosition));
IL2CPP_REGISTER_METHOD(0x018ADAE0, AKRESULT__Enum, GetListenerPosition, (GameObject * in_uIndex, AkTransform * out_rPosition));
IL2CPP_REGISTER_METHOD(0x018ADC40, AKRESULT__Enum, GetRTPCValue, (uint32_t in_rtpcID, GameObject * in_gameObjectID, uint32_t in_playingID, float * out_rValue, int32_t * io_rValueType));
IL2CPP_REGISTER_METHOD(0x018ADDC0, AKRESULT__Enum, GetRTPCValue, (String * in_pszRtpcName, GameObject * in_gameObjectID, uint32_t in_playingID, float * out_rValue, int32_t * io_rValueType));
IL2CPP_REGISTER_METHOD(0x018ADF40, AKRESULT__Enum, GetSwitch, (uint32_t in_switchGroup, GameObject * in_gameObjectID, uint32_t * out_rSwitchState));
IL2CPP_REGISTER_METHOD(0x018AE0B0, AKRESULT__Enum, GetSwitch, (String * in_pstrSwitchGroupName, GameObject * in_GameObj, uint32_t * out_rSwitchState));
IL2CPP_REGISTER_METHOD(0x018AE220, AKRESULT__Enum, GetState, (uint32_t in_stateGroup, uint32_t * out_rState));
IL2CPP_REGISTER_METHOD(0x018AE350, AKRESULT__Enum, GetState, (String * in_pstrStateGroupName, uint32_t * out_rState));
IL2CPP_REGISTER_METHOD(0x018AE480, AKRESULT__Enum, GetGameObjectAuxSendValues, (GameObject * in_gameObjectID, AkAuxSendArray * out_paAuxSendValues, uint32_t * io_ruNumSendValues));
IL2CPP_REGISTER_METHOD(0x018AE570, AKRESULT__Enum, GetGameObjectDryLevelValue, (GameObject * in_EmitterID, GameObject * in_ListenerID, float * out_rfControlValue));
IL2CPP_REGISTER_METHOD(0x018AE6F0, AKRESULT__Enum, GetObjectObstructionAndOcclusion, (GameObject * in_EmitterID, GameObject * in_ListenerID, float * out_rfObstructionLevel, float * out_rfOcclusionLevel));
IL2CPP_REGISTER_METHOD(0x018AE880, AKRESULT__Enum, QueryAudioObjectIDs, (uint32_t in_eventID, uint32_t * io_ruNumItems, AkObjectInfoArray * out_aObjectInfos));
IL2CPP_REGISTER_METHOD(0x018AE9D0, AKRESULT__Enum, QueryAudioObjectIDs, (String * in_pszEventName, uint32_t * io_ruNumItems, AkObjectInfoArray * out_aObjectInfos));
IL2CPP_REGISTER_METHOD(0x018AEB30, AKRESULT__Enum, GetPositioningInfo, (uint32_t in_ObjectID, AkPositioningInfo * out_rPositioningInfo));
IL2CPP_REGISTER_METHOD(0x018AECC0, bool, GetIsGameObjectActive, (GameObject * in_GameObjId));
IL2CPP_REGISTER_METHOD(0x018AEE10, float, GetMaxRadius, (GameObject * in_GameObjId));
IL2CPP_REGISTER_METHOD(0x018AEF60, uint32_t, GetEventIDFromPlayingID, (uint32_t in_playingID));
IL2CPP_REGISTER_METHOD(0x018AF080, uint64_t, GetGameObjectFromPlayingID, (uint32_t in_playingID));
IL2CPP_REGISTER_METHOD(0x018AF1A0, AKRESULT__Enum, GetPlayingIDsFromGameObject, (GameObject * in_GameObjId, uint32_t * io_ruNumIDs, UInt32__Array * out_aPlayingIDs));
IL2CPP_REGISTER_METHOD(0x018AF370, AKRESULT__Enum, GetCustomPropertyValue, (uint32_t in_ObjectID, uint32_t in_uPropID, int32_t * out_iValue));
IL2CPP_REGISTER_METHOD(0x018AF4B0, AKRESULT__Enum, GetCustomPropertyValue, (uint32_t in_ObjectID, uint32_t in_uPropID, float * out_fValue));
IL2CPP_REGISTER_METHOD(0x018AF5F0, void, AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER, (uint32_t * io_uChannelMask));
IL2CPP_REGISTER_METHOD(0x018AF710, void, AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE, (uint32_t * io_uChannelMask));
IL2CPP_REGISTER_METHOD(0x018AF830, void, AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED, (uint32_t * io_uChannelMask));
IL2CPP_REGISTER_METHOD(0x018AF950, uint8_t, ChannelMaskToNumChannels, (uint32_t in_uChannelMask));
IL2CPP_REGISTER_METHOD(0x018AFA70, uint32_t, ChannelMaskFromNumChannels, (uint32_t in_uNumChannels));
IL2CPP_REGISTER_METHOD(0x018AFB90, uint8_t, ChannelBitToIndex, (uint32_t in_uChannelBit, uint32_t in_uChannelMask));
IL2CPP_REGISTER_METHOD(0x018AFCC0, bool, HasSurroundChannels, (uint32_t in_uChannelMask));
IL2CPP_REGISTER_METHOD(0x018AFDE0, bool, HasStrictlyOnePairOfSurroundChannels, (uint32_t in_uChannelMask));
IL2CPP_REGISTER_METHOD(0x018AFF00, bool, HasSideAndRearChannels, (uint32_t in_uChannelMask));
IL2CPP_REGISTER_METHOD(0x018B0020, bool, HasHeightChannels, (uint32_t in_uChannelMask));
IL2CPP_REGISTER_METHOD(0x018B0140, uint32_t, BackToSideChannels, (uint32_t in_uChannelMask));
IL2CPP_REGISTER_METHOD(0x018B0260, uint32_t, StdChannelIndexToDisplayIndex, (AkChannelOrdering__Enum in_eOrdering, uint32_t in_uChannelMask, uint32_t in_uChannelIdx));
IL2CPP_REGISTER_METHOD(0x018B03A0, float, get_kDefaultMaxPathLength, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018B04B0, uint32_t, get_kDefaultDiffractionMaxEdges, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018B05C0, uint32_t, get_kDefaultDiffractionMaxPaths, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018B06D0, float, get_kMaxDiffraction, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018B07E0, uint32_t, get_kListenerDiffractionMaxEdges, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018B08F0, uint32_t, get_kListenerDiffractionMaxPaths, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018B0A00, uint32_t, get_kPortalToPortalDiffractionMaxPaths, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018B0B10, void, set_g_SpatialAudioPoolId, (int32_t value));
IL2CPP_REGISTER_METHOD(0x018B0C30, int32_t, get_g_SpatialAudioPoolId, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018B0D40, int32_t, GetPoolID, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018B0E50, AKRESULT__Enum, RegisterEmitter, (GameObject * in_gameObjectID, AkEmitterSettings * in_settings));
IL2CPP_REGISTER_METHOD(0x018B1010, AKRESULT__Enum, UnregisterEmitter, (GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x018B1160, AKRESULT__Enum, SetEmitterAuxSendValues, (GameObject * in_gameObjectID, AkAuxSendArray * in_pAuxSends, uint32_t in_uNumAux));
IL2CPP_REGISTER_METHOD(0x018B12E0, AKRESULT__Enum, SetImageSource, (uint32_t in_srcID, AkImageSourceSettings * in_info, uint32_t in_AuxBusID, uint64_t in_roomID, GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x018B1470, AKRESULT__Enum, SetImageSource, (uint32_t in_srcID, AkImageSourceSettings * in_info, uint32_t in_AuxBusID, uint64_t in_roomID));
IL2CPP_REGISTER_METHOD(0x018B15D0, AKRESULT__Enum, RemoveImageSource, (uint32_t in_srcID, uint32_t in_AuxBusID, GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x018B1730, AKRESULT__Enum, RemoveImageSource, (uint32_t in_srcID, uint32_t in_AuxBusID));
IL2CPP_REGISTER_METHOD(0x018B1860, AKRESULT__Enum, RemoveGeometry, (uint64_t in_SetID));
IL2CPP_REGISTER_METHOD(0x018B1980, AKRESULT__Enum, QueryReflectionPaths, (GameObject * in_gameObjectID, AkVector * out_listenerPos, AkVector * out_emitterPos, AkReflectionPathInfoArray * out_aPaths, uint32_t * io_uArraySize));
IL2CPP_REGISTER_METHOD(0x018B1B30, AKRESULT__Enum, RemoveRoom, (uint64_t in_RoomID));
IL2CPP_REGISTER_METHOD(0x018B1C50, AKRESULT__Enum, RemovePortal, (uint64_t in_PortalID));
IL2CPP_REGISTER_METHOD(0x018B1D70, AKRESULT__Enum, SetGameObjectInRoom, (GameObject * in_gameObjectID, uint64_t in_CurrentRoomID));
IL2CPP_REGISTER_METHOD(0x018B1ED0, AKRESULT__Enum, SetEmitterObstructionAndOcclusion, (GameObject * in_gameObjectID, float in_fObstruction, float in_fOcclusion));
IL2CPP_REGISTER_METHOD(0x018B2040, AKRESULT__Enum, SetPortalObstructionAndOcclusion, (uint64_t in_PortalID, float in_fObstruction, float in_fOcclusion));
IL2CPP_REGISTER_METHOD(0x018B2180, AKRESULT__Enum, QueryWetDiffraction, (uint64_t in_portal, float * out_wetDiffraction));
IL2CPP_REGISTER_METHOD(0x018B22B0, uint32_t, GetDeviceIDFromName, (String * in_szToken));
IL2CPP_REGISTER_METHOD(0x018B23E0, String *, GetWindowsDeviceName, (int32_t index, uint32_t * out_uDeviceID, AkAudioDeviceState__Enum uDeviceStateMask));
IL2CPP_REGISTER_METHOD(0x018B2550, String *, GetWindowsDeviceName, (int32_t index, uint32_t * out_uDeviceID));
IL2CPP_REGISTER_METHOD(0x018B26A0, uint32_t, GetWindowsDeviceCount, (AkAudioDeviceState__Enum uDeviceStateMask));
IL2CPP_REGISTER_METHOD(0x018B27C0, uint32_t, GetWindowsDeviceCount, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018B28D0, void, SetErrorLogger, (AkLogger_ErrorLoggerInteropDelegate * logger));
IL2CPP_REGISTER_METHOD(0x018B2A00, void, SetErrorLogger, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018B2B10, void, SetAudioInputCallbacks, (AkAudioInputManager_AudioSamplesInteropDelegate * getAudioSamples, AkAudioInputManager_AudioFormatInteropDelegate * getAudioFormat));
IL2CPP_REGISTER_METHOD(0x018B2C50, AKRESULT__Enum, Init, (AkInitializationSettings * settings));
IL2CPP_REGISTER_METHOD(0x018B2DD0, AKRESULT__Enum, InitSpatialAudio, (AkSpatialAudioInitSettings * settings));
IL2CPP_REGISTER_METHOD(0x018B2F50, AKRESULT__Enum, InitCommunication, (AkCommunicationSettings * settings));
IL2CPP_REGISTER_METHOD(0x018B30D0, void, Term, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018B31E0, AKRESULT__Enum, RegisterGameObjInternal, (GameObject * in_GameObj));
IL2CPP_REGISTER_METHOD(0x018B32B0, AKRESULT__Enum, UnregisterGameObjInternal, (GameObject * in_GameObj));
IL2CPP_REGISTER_METHOD(0x018B3380, AKRESULT__Enum, RegisterGameObjInternal_WithName, (GameObject * in_GameObj, String * in_pszObjName));
IL2CPP_REGISTER_METHOD(0x018B3460, AKRESULT__Enum, SetBasePath, (String * in_pszBasePath));
IL2CPP_REGISTER_METHOD(0x018B3590, AKRESULT__Enum, SetCurrentLanguage, (String * in_pszAudioSrcPath));
IL2CPP_REGISTER_METHOD(0x018B36C0, AKRESULT__Enum, LoadFilePackage, (String * in_pszFilePackageName, uint32_t * out_uPackageID, int32_t in_memPoolID));
IL2CPP_REGISTER_METHOD(0x018B3810, AKRESULT__Enum, AddBasePath, (String * in_pszBasePath));
IL2CPP_REGISTER_METHOD(0x018B3940, AKRESULT__Enum, SetGameName, (String * in_GameName));
IL2CPP_REGISTER_METHOD(0x018B3A70, AKRESULT__Enum, SetDecodedBankPath, (String * in_DecodedPath));
IL2CPP_REGISTER_METHOD(0x018B3BA0, AKRESULT__Enum, LoadAndDecodeBank, (String * in_pszString, bool in_bSaveDecodedBank, uint32_t * out_bankID));
IL2CPP_REGISTER_METHOD(0x018B3CF0, AKRESULT__Enum, LoadAndDecodeBankFromMemory, (void * in_BankData, uint32_t in_BankDataSize, bool in_bSaveDecodedBank, String * in_DecodedBankName, bool in_bIsLanguageSpecific, uint32_t * out_bankID));
IL2CPP_REGISTER_METHOD(0x018B3E60, String *, GetCurrentLanguage, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018B3F90, AKRESULT__Enum, UnloadFilePackage, (uint32_t in_uPackageID));
IL2CPP_REGISTER_METHOD(0x018B40B0, AKRESULT__Enum, UnloadAllFilePackages, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018B41C0, AKRESULT__Enum, SetObjectPosition, (GameObject * in_GameObjectID, float PosX, float PosY, float PosZ, float FrontX, float FrontY, float FrontZ, float TopX, float TopY, float TopZ));
IL2CPP_REGISTER_METHOD(0x018B42D0, AKRESULT__Enum, SetObjectPosition, (uint64_t in_GameObjectID, float PosX, float PosY, float PosZ, float FrontX, float FrontY, float FrontZ, float TopX, float TopY, float TopZ));
IL2CPP_REGISTER_METHOD(0x018B43B0, AKRESULT__Enum, GetSourceMultiplePlayPositions, (uint32_t in_PlayingID, UInt32__Array * out_audioNodeID, UInt32__Array * out_mediaID, Int32__Array * out_msTime, uint32_t * io_pcPositions, bool in_bExtrapolate));
IL2CPP_REGISTER_METHOD(0x018B44A0, AKRESULT__Enum, SetListeners, (GameObject * in_emitterGameObj, UInt64__Array * in_pListenerGameObjs, uint32_t in_uNumListeners));
IL2CPP_REGISTER_METHOD(0x018B4610, AKRESULT__Enum, SetDefaultListeners, (UInt64__Array * in_pListenerObjs, uint32_t in_uNumListeners));
IL2CPP_REGISTER_METHOD(0x018B4740, AKRESULT__Enum, AddOutput, (AkOutputSettings * in_Settings, uint64_t * out_pDeviceID, UInt64__Array * in_pListenerIDs, uint32_t in_uNumListeners));
IL2CPP_REGISTER_METHOD(0x018B48A0, void, GetDefaultStreamSettings, (AkStreamMgrSettings * out_settings));
IL2CPP_REGISTER_METHOD(0x018B49D0, void, GetDefaultDeviceSettings, (AkDeviceSettings * out_settings));
IL2CPP_REGISTER_METHOD(0x018B4B00, void, GetDefaultMusicSettings, (AkMusicSettings * out_settings));
IL2CPP_REGISTER_METHOD(0x018B4C30, void, GetDefaultInitSettings, (AkInitSettings * out_settings));
IL2CPP_REGISTER_METHOD(0x018B4D60, void, GetDefaultPlatformInitSettings, (AkPlatformInitSettings * out_settings));
IL2CPP_REGISTER_METHOD(0x018B4E90, uint32_t, GetMajorMinorVersion, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018B4FA0, uint32_t, GetSubminorBuildVersion, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x018B50B0, AKRESULT__Enum, QueryIndirectPaths, (GameObject * in_gameObjectID, AkPathParams * arg1, AkReflectionPathInfoArray * paths, uint32_t numPaths));
IL2CPP_REGISTER_METHOD(0x018B5250, AKRESULT__Enum, QueryDiffractionPaths, (GameObject * in_gameObjectID, AkPathParams * arg1, AkDiffractionPathInfoArray * paths, uint32_t numPaths));
IL2CPP_REGISTER_METHOD(0x018B53F0, AKRESULT__Enum, SetRoomPortal, (uint64_t in_PortalID, AkTransform * Transform, AkVector * Extent, bool bEnabled, uint64_t FrontRoom, uint64_t BackRoom));
IL2CPP_REGISTER_METHOD(0x018B5560, AKRESULT__Enum, SetRoom, (uint64_t in_RoomID, AkRoomParams * in_roomParams, String * in_pName));
IL2CPP_REGISTER_METHOD(0x018B57C0, AKRESULT__Enum, RegisterSpatialAudioListener, (GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x018B5910, AKRESULT__Enum, UnregisterSpatialAudioListener, (GameObject * in_gameObjectID));
IL2CPP_REGISTER_METHOD(0x018B5A60, AKRESULT__Enum, SetGeometry, (uint64_t in_GeomSetID, AkTriangleArray * Triangles, uint32_t NumTriangles, AkVertexArray * Vertices, uint32_t NumVertices, AkAcousticSurfaceArray * Surfaces, uint32_t NumSurfaces, uint64_t RoomID, bool EnableDiffraction, bool EnableDiffractionOnBoundaryEdges));
IL2CPP_REGISTER_METHOD(0x018B5C20, String *, StringFromIntPtrString, (void * ptr));
IL2CPP_REGISTER_METHOD(0x018B5CE0, String *, StringFromIntPtrWString, (void * ptr));
IL2CPP_REGISTER_METHOD(0x018B5DD0, String *, StringFromIntPtrOSString, (void * ptr));
IL2CPP_REGISTER_METHOD(0x018B5E70, uint64_t, InternalGameObjectHash, (GameObject * gameObject));
IL2CPP_REGISTER_METHODINFO(0x04786F90, AkSoundEngine_InternalGameObjectHash__MethodInfo);
IL2CPP_REGISTER_METHOD(0x018B5F40, void, set_GameObjectHash, (AkSoundEngine_GameObjectHashFunction * value));
IL2CPP_REGISTER_METHOD(0x018B60D0, uint64_t, GetAkGameObjectID, (GameObject * gameObject));
IL2CPP_REGISTER_METHOD(0x018B6190, AKRESULT__Enum, RegisterGameObj, (GameObject * gameObject));
IL2CPP_REGISTER_METHOD(0x018B6280, AKRESULT__Enum, RegisterGameObj, (uint64_t gameObject));
IL2CPP_REGISTER_METHOD(0x018B6320, AKRESULT__Enum, RegisterGameObj, (GameObject * gameObject, String * name));
IL2CPP_REGISTER_METHOD(0x018B6410, AKRESULT__Enum, RegisterGameObj, (uint64_t gameObject, String * name));
IL2CPP_REGISTER_METHOD(0x018B64C0, AKRESULT__Enum, UnregisterGameObj, (GameObject * gameObject));
IL2CPP_REGISTER_METHOD(0x018B6650, AKRESULT__Enum, UnregisterGameObj, (uint64_t gameObject));
IL2CPP_REGISTER_METHOD(0x018B66F0, AKRESULT__Enum, SetObjectPosition, (GameObject * gameObject, Transform * transform));
IL2CPP_REGISTER_METHOD(0x018B69D0, AKRESULT__Enum, SetObjectPosition, (GameObject * gameObject, Vector3 position, Vector3 forward, Vector3 up));
IL2CPP_REGISTER_METHOD(0x018B6B60, uint32_t, PostEvent, (uint32_t eventId, GameObject * gameObject, uint32_t flags, AkCallbackManager_EventCallback * callback, Object * cookie, uint32_t numSources, AkExternalSourceInfo * externalSources, uint32_t playingId));
IL2CPP_REGISTER_METHOD(0x018B6D80, uint32_t, PostEvent, (uint32_t eventId, GameObject * gameObject, uint32_t flags, AkCallbackManager_EventCallback * callback, Object * cookie, uint32_t numSources, AkExternalSourceInfo * externalSources));
IL2CPP_REGISTER_METHOD(0x018B6FF0, uint32_t, PostEvent, (String * eventName, GameObject * gameObject, uint32_t flags, AkCallbackManager_EventCallback * callback, Object * cookie, uint32_t numSources, AkExternalSourceInfo * externalSources, uint32_t playingId));
IL2CPP_REGISTER_METHOD(0x018B7210, uint32_t, PostEvent, (String * eventName, GameObject * gameObject, uint32_t flags, AkCallbackManager_EventCallback * callback, Object * cookie, uint32_t numSources, AkExternalSourceInfo * externalSources));
IL2CPP_REGISTER_METHOD(0x002FA000, void, PreGameObjectAPICall, (GameObject * gameObject, uint64_t id));
IL2CPP_REGISTER_METHOD(0x018B7480, void, PostRegisterGameObjUserHook, (AKRESULT__Enum result, GameObject * gameObject, uint64_t id));
IL2CPP_REGISTER_METHOD(0x018B7560, void, PostUnregisterGameObjUserHook, (AKRESULT__Enum result, GameObject * gameObject, uint64_t id));
IL2CPP_REGISTER_METHOD(0x018B7630, bool, IsInRegisteredList, (uint64_t id));
IL2CPP_REGISTER_METHOD(0x002FA000, void, __ctor, (AkSoundEngine * __this));
IL2CPP_REGISTER_METHOD(0x018B76F0, void, __cctor, (MethodInfo * method));
}
