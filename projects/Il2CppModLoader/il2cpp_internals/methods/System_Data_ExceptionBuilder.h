#include <interception_macros.h>

namespace app::methods::System::Data::ExceptionBuilder {
IL2CPP_REGISTER_METHOD(0x01F4D2B0, void, TraceException, (String * trace, Exception * e));
IL2CPP_REGISTER_METHOD(0x01F4D380, Exception *, TraceExceptionAsReturnValue, (Exception * e));
IL2CPP_REGISTER_METHOD(0x01F4D410, Exception *, TraceExceptionForCapture, (Exception * e));
IL2CPP_REGISTER_METHOD(0x01F4D4A0, Exception *, TraceExceptionWithoutRethrow, (Exception * e));
IL2CPP_REGISTER_METHOD(0x01F4D530, Exception *, _Argument, (String * error));
IL2CPP_REGISTER_METHOD(0x01F4D690, Exception *, _Argument, (String * paramName, String * error));
IL2CPP_REGISTER_METHOD(0x01F4D7F0, Exception *, _Argument, (String * error, Exception * innerException));
IL2CPP_REGISTER_METHOD(0x01F4D950, Exception *, _ArgumentNull, (String * paramName, String * msg));
IL2CPP_REGISTER_METHOD(0x01F4DAB0, Exception *, _ArgumentOutOfRange, (String * paramName, String * msg));
IL2CPP_REGISTER_METHOD(0x01F4DC10, Exception *, _IndexOutOfRange, (String * error));
IL2CPP_REGISTER_METHOD(0x01F4DD70, Exception *, _InvalidOperation, (String * error));
IL2CPP_REGISTER_METHOD(0x01F4DED0, Exception *, _InvalidEnumArgumentException, (String * error));
IL2CPP_REGISTER_METHOD(0x01F4E030, void, ThrowDataException, (String * error, Exception * innerException));
IL2CPP_REGISTER_METHODINFO(0x04739CF0, ExceptionBuilder_ThrowDataException__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01F4E0A0, Exception *, _Data, (String * error));
IL2CPP_REGISTER_METHOD(0x01F4E200, Exception *, _Constraint, (String * error));
IL2CPP_REGISTER_METHOD(0x01F4E360, Exception *, _InvalidConstraint, (String * error));
IL2CPP_REGISTER_METHOD(0x01F4E4C0, Exception *, _DeletedRowInaccessible, (String * error));
IL2CPP_REGISTER_METHOD(0x01F4E620, Exception *, _DuplicateName, (String * error));
IL2CPP_REGISTER_METHOD(0x01F4E780, Exception *, _InRowChangingEvent, (String * error));
IL2CPP_REGISTER_METHOD(0x01F4E8E0, Exception *, _NoNullAllowed, (String * error));
IL2CPP_REGISTER_METHOD(0x01F4EA40, Exception *, _ReadOnly, (String * error));
IL2CPP_REGISTER_METHOD(0x01F4EBA0, Exception *, _RowNotInTable, (String * error));
IL2CPP_REGISTER_METHOD(0x01F4ED00, Exception *, _VersionNotFound, (String * error));
IL2CPP_REGISTER_METHOD(0x01F4EE60, Exception *, ArgumentNull, (String * paramName));
IL2CPP_REGISTER_METHOD(0x01F4F030, Exception *, ArgumentOutOfRange, (String * paramName));
IL2CPP_REGISTER_METHOD(0x01F4F0C0, Exception *, BadObjectPropertyAccess, (String * error));
IL2CPP_REGISTER_METHOD(0x01F4F150, Exception *, ArgumentContainsNull, (String * paramName));
IL2CPP_REGISTER_METHOD(0x01F4F320, Exception *, CannotModifyCollection, ());
IL2CPP_REGISTER_METHOD(0x01F4F3A0, Exception *, CaseInsensitiveNameConflict, (String * name));
IL2CPP_REGISTER_METHOD(0x01F4F430, Exception *, NamespaceNameConflict, (String * name));
IL2CPP_REGISTER_METHOD(0x01F4F4C0, Exception *, InvalidOffsetLength, ());
IL2CPP_REGISTER_METHOD(0x01F4F540, Exception *, ColumnNotInTheTable, (String * column, String * table));
IL2CPP_REGISTER_METHOD(0x01F4F5E0, Exception *, ColumnNotInAnyTable, ());
IL2CPP_REGISTER_METHOD(0x01F4F660, Exception *, ColumnOutOfRange, (int32_t index));
IL2CPP_REGISTER_METHOD(0x01F4F730, Exception *, ColumnOutOfRange, (String * column));
IL2CPP_REGISTER_METHOD(0x01F4F7C0, Exception *, CannotAddColumn1, (String * column));
IL2CPP_REGISTER_METHOD(0x01F4F850, Exception *, CannotAddColumn2, (String * column));
IL2CPP_REGISTER_METHOD(0x01F4F8E0, Exception *, CannotAddColumn3, ());
IL2CPP_REGISTER_METHOD(0x01F4F960, Exception *, CannotAddColumn4, (String * column));
IL2CPP_REGISTER_METHOD(0x01F4F9F0, Exception *, CannotAddDuplicate, (String * column));
IL2CPP_REGISTER_METHOD(0x01F4FA80, Exception *, CannotAddDuplicate2, (String * table));
IL2CPP_REGISTER_METHOD(0x01F4FB10, Exception *, CannotAddDuplicate3, (String * table));
IL2CPP_REGISTER_METHOD(0x01F4FBA0, Exception *, CannotRemoveColumn, ());
IL2CPP_REGISTER_METHOD(0x01F4FC20, Exception *, CannotRemovePrimaryKey, ());
IL2CPP_REGISTER_METHOD(0x01F4FCA0, Exception *, CannotRemoveChildKey, (String * relation));
IL2CPP_REGISTER_METHOD(0x01F4FD30, Exception *, CannotRemoveConstraint, (String * constraint, String * table));
IL2CPP_REGISTER_METHOD(0x01F4FDD0, Exception *, CannotRemoveExpression, (String * column, String * expression));
IL2CPP_REGISTER_METHOD(0x01F4FE70, Exception *, AddPrimaryKeyConstraint, ());
IL2CPP_REGISTER_METHOD(0x01F4FEF0, Exception *, NoConstraintName, ());
IL2CPP_REGISTER_METHOD(0x01F4FF70, Exception *, ConstraintViolation, (String * constraint));
IL2CPP_REGISTER_METHOD(0x01F50000, String *, KeysToString, (Object__Array * keys));
IL2CPP_REGISTER_METHOD(0x01F50140, String *, UniqueConstraintViolationText, (DataColumn__Array * columns, Object__Array * values));
IL2CPP_REGISTER_METHOD(0x01F50310, Exception *, ConstraintViolation, (DataColumn__Array * columns, Object__Array * values));
IL2CPP_REGISTER_METHOD(0x01F50330, Exception *, ConstraintOutOfRange, (int32_t index));
IL2CPP_REGISTER_METHOD(0x01F50400, Exception *, DuplicateConstraint, (String * constraint));
IL2CPP_REGISTER_METHOD(0x01F50490, Exception *, DuplicateConstraintName, (String * constraint));
IL2CPP_REGISTER_METHOD(0x01F50520, Exception *, NeededForForeignKeyConstraint, (UniqueConstraint * key, ForeignKeyConstraint * fk));
IL2CPP_REGISTER_METHOD(0x01F50600, Exception *, UniqueConstraintViolation, ());
IL2CPP_REGISTER_METHOD(0x01F50680, Exception *, ConstraintForeignTable, ());
IL2CPP_REGISTER_METHOD(0x01F50700, Exception *, ConstraintParentValues, ());
IL2CPP_REGISTER_METHOD(0x01F50780, Exception *, ConstraintAddFailed, (DataTable * table));
IL2CPP_REGISTER_METHOD(0x01F50820, Exception *, ConstraintRemoveFailed, ());
IL2CPP_REGISTER_METHOD(0x01F508A0, Exception *, FailedCascadeDelete, (String * constraint));
IL2CPP_REGISTER_METHOD(0x01F50930, Exception *, FailedCascadeUpdate, (String * constraint));
IL2CPP_REGISTER_METHOD(0x01F509C0, Exception *, FailedClearParentTable, (String * table, String * constraint, String * childTable));
IL2CPP_REGISTER_METHOD(0x01F50A80, Exception *, ForeignKeyViolation, (String * constraint, Object__Array * keys));
IL2CPP_REGISTER_METHOD(0x01F50B30, Exception *, RemoveParentRow, (ForeignKeyConstraint * constraint));
IL2CPP_REGISTER_METHOD(0x01F50BE0, String *, MaxLengthViolationText, (String * columnName));
IL2CPP_REGISTER_METHOD(0x01F50C70, String *, NotAllowDBNullViolationText, (String * columnName));
IL2CPP_REGISTER_METHOD(0x01F50D00, Exception *, CantAddConstraintToMultipleNestedTable, (String * tableName));
IL2CPP_REGISTER_METHOD(0x01F50D90, Exception *, AutoIncrementAndExpression, ());
IL2CPP_REGISTER_METHOD(0x01F50E10, Exception *, AutoIncrementAndDefaultValue, ());
IL2CPP_REGISTER_METHOD(0x01F50E90, Exception *, AutoIncrementSeed, ());
IL2CPP_REGISTER_METHOD(0x01F50F10, Exception *, CantChangeDataType, ());
IL2CPP_REGISTER_METHOD(0x01F50F90, Exception *, NullDataType, ());
IL2CPP_REGISTER_METHOD(0x01F51010, Exception *, ColumnNameRequired, ());
IL2CPP_REGISTER_METHOD(0x01F51090, Exception *, DefaultValueAndAutoIncrement, ());
IL2CPP_REGISTER_METHOD(0x01F51110, Exception *, DefaultValueDataType, (String * column, Type * defaultType, Type * columnType, Exception * inner));
IL2CPP_REGISTER_METHOD(0x01F51290, Exception *, DefaultValueColumnDataType, (String * column, Type * defaultType, Type * columnType, Exception * inner));
IL2CPP_REGISTER_METHOD(0x01F513A0, Exception *, ExpressionAndUnique, ());
IL2CPP_REGISTER_METHOD(0x01F51420, Exception *, ExpressionAndReadOnly, ());
IL2CPP_REGISTER_METHOD(0x01F514A0, Exception *, ExpressionAndConstraint, (DataColumn * column, Constraint_1 * constraint));
IL2CPP_REGISTER_METHOD(0x01F51570, Exception *, ExpressionInConstraint, (DataColumn * column));
IL2CPP_REGISTER_METHOD(0x01F51610, Exception *, ExpressionCircular, ());
IL2CPP_REGISTER_METHOD(0x01F51690, Exception *, NonUniqueValues, (String * column));
IL2CPP_REGISTER_METHOD(0x01F51720, Exception *, NullKeyValues, (String * column));
IL2CPP_REGISTER_METHOD(0x01F517B0, Exception *, NullValues, (String * column));
IL2CPP_REGISTER_METHOD(0x01F51980, Exception *, ReadOnlyAndExpression, ());
IL2CPP_REGISTER_METHOD(0x01F51A00, Exception *, ReadOnly, (String * column));
IL2CPP_REGISTER_METHOD(0x01F51A90, Exception *, UniqueAndExpression, ());
IL2CPP_REGISTER_METHOD(0x01F51B10, Exception *, SetFailed, (Object * value, DataColumn * column, Type * type, Exception * innerException));
IL2CPP_REGISTER_METHOD(0x01F51C70, Exception *, CannotSetToNull, (DataColumn * column));
IL2CPP_REGISTER_METHOD(0x01F51D10, Exception *, LongerThanMaxLength, (DataColumn * column));
IL2CPP_REGISTER_METHOD(0x01F51DB0, Exception *, CannotSetMaxLength, (DataColumn * column, int32_t value));
IL2CPP_REGISTER_METHOD(0x01F51EA0, Exception *, CannotSetMaxLength2, (DataColumn * column));
IL2CPP_REGISTER_METHOD(0x01F51F40, Exception *, CannotSetSimpleContentType, (String * columnName, Type * type));
IL2CPP_REGISTER_METHOD(0x01F51FE0, Exception *, CannotSetSimpleContent, (String * columnName, Type * type));
IL2CPP_REGISTER_METHOD(0x01F52080, Exception *, CannotChangeNamespace, (String * columnName));
IL2CPP_REGISTER_METHOD(0x01F52110, Exception *, HasToBeStringType, (DataColumn * column));
IL2CPP_REGISTER_METHOD(0x01F521B0, Exception *, AutoIncrementCannotSetIfHasData, (String * typeName));
IL2CPP_REGISTER_METHOD(0x01F52240, Exception *, INullableUDTwithoutStaticNull, (String * typeName));
IL2CPP_REGISTER_METHOD(0x01F522D0, Exception *, IComparableNotImplemented, (String * typeName));
IL2CPP_REGISTER_METHOD(0x01F52360, Exception *, UDTImplementsIChangeTrackingButnotIRevertible, (String * typeName));
IL2CPP_REGISTER_METHOD(0x01F523F0, Exception *, InvalidDataColumnMapping, (Type * type));
IL2CPP_REGISTER_METHOD(0x01F524A0, Exception *, CannotSetDateTimeModeForNonDateTimeColumns, ());
IL2CPP_REGISTER_METHOD(0x01F52520, Exception *, InvalidDateTimeMode, (DataSetDateTime__Enum mode));
IL2CPP_REGISTER_METHOD(0x01F525A0, Exception *, CantChangeDateTimeMode, (DataSetDateTime__Enum oldValue, DataSetDateTime__Enum newValue));
IL2CPP_REGISTER_METHOD(0x01F526A0, Exception *, ColumnTypeNotSupported, ());
IL2CPP_REGISTER_METHOD(0x01F52740, Exception *, SetFailed, (String * name));
IL2CPP_REGISTER_METHOD(0x01F527D0, Exception *, SetRowStateFilter, ());
IL2CPP_REGISTER_METHOD(0x01F52850, Exception *, CanNotUseDataViewManager, ());
IL2CPP_REGISTER_METHOD(0x01F528D0, Exception *, CanNotSetTable, ());
IL2CPP_REGISTER_METHOD(0x01F52950, Exception *, CanNotUse, ());
IL2CPP_REGISTER_METHOD(0x01F529D0, Exception *, CanNotBindTable, ());
IL2CPP_REGISTER_METHOD(0x01F52A50, Exception *, SetTable, ());
IL2CPP_REGISTER_METHOD(0x01F52AD0, Exception *, SetIListObject, ());
IL2CPP_REGISTER_METHOD(0x01F52B50, Exception *, AddNewNotAllowNull, ());
IL2CPP_REGISTER_METHOD(0x01F52BD0, Exception *, NotOpen, ());
IL2CPP_REGISTER_METHOD(0x01F52C50, Exception *, CreateChildView, ());
IL2CPP_REGISTER_METHOD(0x01F52CD0, Exception *, CanNotDelete, ());
IL2CPP_REGISTER_METHOD(0x01F52D50, Exception *, GetElementIndex, (int32_t index));
IL2CPP_REGISTER_METHOD(0x01F52E20, Exception *, AddExternalObject, ());
IL2CPP_REGISTER_METHOD(0x01F52EA0, Exception *, CanNotClear, ());
IL2CPP_REGISTER_METHOD(0x01F52F20, Exception *, InsertExternalObject, ());
IL2CPP_REGISTER_METHOD(0x01F52FA0, Exception *, RemoveExternalObject, ());
IL2CPP_REGISTER_METHOD(0x01F53020, Exception *, ColumnToSortIsOutOfRange, (String * column));
IL2CPP_REGISTER_METHOD(0x01F530B0, Exception *, KeyTableMismatch, ());
IL2CPP_REGISTER_METHOD(0x01F53130, Exception *, KeyNoColumns, ());
IL2CPP_REGISTER_METHOD(0x01F531B0, Exception *, KeyTooManyColumns, (int32_t cols));
IL2CPP_REGISTER_METHOD(0x01F53280, Exception *, KeyDuplicateColumns, (String * columnName));
IL2CPP_REGISTER_METHOD(0x01F53310, Exception *, RelationDataSetMismatch, ());
IL2CPP_REGISTER_METHOD(0x01F53390, Exception *, ColumnsTypeMismatch, ());
IL2CPP_REGISTER_METHOD(0x01F53410, Exception *, KeyLengthMismatch, ());
IL2CPP_REGISTER_METHOD(0x01F53490, Exception *, KeyLengthZero, ());
IL2CPP_REGISTER_METHOD(0x01F53510, Exception *, ForeignRelation, ());
IL2CPP_REGISTER_METHOD(0x01F53590, Exception *, KeyColumnsIdentical, ());
IL2CPP_REGISTER_METHOD(0x01F53610, Exception *, RelationForeignTable, (String * t1, String * t2));
IL2CPP_REGISTER_METHOD(0x01F536B0, Exception *, GetParentRowTableMismatch, (String * t1, String * t2));
IL2CPP_REGISTER_METHOD(0x01F53750, Exception *, SetParentRowTableMismatch, (String * t1, String * t2));
IL2CPP_REGISTER_METHOD(0x01F537F0, Exception *, RelationForeignRow, ());
IL2CPP_REGISTER_METHOD(0x01F53870, Exception *, RelationNestedReadOnly, ());
IL2CPP_REGISTER_METHOD(0x01F538F0, Exception *, TableCantBeNestedInTwoTables, (String * tableName));
IL2CPP_REGISTER_METHOD(0x01F53980, Exception *, LoopInNestedRelations, (String * tableName));
IL2CPP_REGISTER_METHOD(0x01F53A10, Exception *, RelationDoesNotExist, ());
IL2CPP_REGISTER_METHOD(0x01F53A90, Exception *, ParentOrChildColumnsDoNotHaveDataSet, ());
IL2CPP_REGISTER_METHOD(0x01F53B10, Exception *, InValidNestedRelation, (String * childTableName));
IL2CPP_REGISTER_METHOD(0x01F53BA0, Exception *, InvalidParentNamespaceinNestedRelation, (String * childTableName));
IL2CPP_REGISTER_METHOD(0x01F53C30, Exception *, RowNotInTheDataSet, ());
IL2CPP_REGISTER_METHOD(0x01F53CB0, Exception *, RowNotInTheTable, ());
IL2CPP_REGISTER_METHOD(0x01F53D30, Exception *, EditInRowChanging, ());
IL2CPP_REGISTER_METHOD(0x01F53DB0, Exception *, EndEditInRowChanging, ());
IL2CPP_REGISTER_METHOD(0x01F53E30, Exception *, BeginEditInRowChanging, ());
IL2CPP_REGISTER_METHOD(0x01F53EB0, Exception *, CancelEditInRowChanging, ());
IL2CPP_REGISTER_METHOD(0x01F53F30, Exception *, DeleteInRowDeleting, ());
IL2CPP_REGISTER_METHOD(0x01F53FB0, Exception *, ValueArrayLength, ());
IL2CPP_REGISTER_METHOD(0x01F54030, Exception *, NoCurrentData, ());
IL2CPP_REGISTER_METHOD(0x01F540B0, Exception *, NoOriginalData, ());
IL2CPP_REGISTER_METHOD(0x01F54130, Exception *, NoProposedData, ());
IL2CPP_REGISTER_METHOD(0x01F541B0, Exception *, RowRemovedFromTheTable, ());
IL2CPP_REGISTER_METHOD(0x01F54230, Exception *, DeletedRowInaccessible, ());
IL2CPP_REGISTER_METHOD(0x01F542B0, Exception *, RowAlreadyDeleted, ());
IL2CPP_REGISTER_METHOD(0x01F54330, Exception *, RowEmpty, ());
IL2CPP_REGISTER_METHOD(0x01F543B0, Exception *, InvalidRowVersion, ());
IL2CPP_REGISTER_METHOD(0x01F54430, Exception *, RowOutOfRange, (int32_t index));
IL2CPP_REGISTER_METHOD(0x01F54500, Exception *, RowInsertTwice, (int32_t index, String * tableName));
IL2CPP_REGISTER_METHOD(0x01F545E0, Exception *, RowInsertMissing, (String * tableName));
IL2CPP_REGISTER_METHOD(0x01F54670, Exception *, RowAlreadyRemoved, ());
IL2CPP_REGISTER_METHOD(0x01F546F0, Exception *, MultipleParents, ());
IL2CPP_REGISTER_METHOD(0x01F54770, Exception *, InvalidRowState, (DataRowState__Enum state));
IL2CPP_REGISTER_METHOD(0x01F547F0, Exception *, InvalidRowBitPattern, ());
IL2CPP_REGISTER_METHOD(0x01F54870, Exception *, SetDataSetNameToEmpty, ());
IL2CPP_REGISTER_METHOD(0x01F548F0, Exception *, SetDataSetNameConflicting, (String * name));
IL2CPP_REGISTER_METHOD(0x01F54980, Exception *, DataSetUnsupportedSchema, (String * ns));
IL2CPP_REGISTER_METHOD(0x01F54A10, Exception *, MergeMissingDefinition, (String * obj));
IL2CPP_REGISTER_METHOD(0x01F54AA0, Exception *, TablesInDifferentSets, ());
IL2CPP_REGISTER_METHOD(0x01F54B20, Exception *, RelationAlreadyExists, ());
IL2CPP_REGISTER_METHOD(0x01F54BA0, Exception *, RowAlreadyInOtherCollection, ());
IL2CPP_REGISTER_METHOD(0x01F54C20, Exception *, RowAlreadyInTheCollection, ());
IL2CPP_REGISTER_METHOD(0x01F54CA0, Exception *, RecordStateRange, ());
IL2CPP_REGISTER_METHOD(0x01F54D20, Exception *, IndexKeyLength, (int32_t length, int32_t keyLength));
IL2CPP_REGISTER_METHOD(0x01F54E40, Exception *, RemovePrimaryKey, (DataTable * table));
IL2CPP_REGISTER_METHOD(0x01F54F00, Exception *, RelationAlreadyInOtherDataSet, ());
IL2CPP_REGISTER_METHOD(0x01F54F80, Exception *, RelationAlreadyInTheDataSet, ());
IL2CPP_REGISTER_METHOD(0x01F55000, Exception *, RelationNotInTheDataSet, (String * relation));
IL2CPP_REGISTER_METHOD(0x01F55090, Exception *, RelationOutOfRange, (Object * index));
IL2CPP_REGISTER_METHOD(0x01F55150, Exception *, DuplicateRelation, (String * relation));
IL2CPP_REGISTER_METHOD(0x01F551E0, Exception *, RelationTableNull, ());
IL2CPP_REGISTER_METHOD(0x01F55260, Exception *, RelationDataSetNull, ());
IL2CPP_REGISTER_METHOD(0x01F552E0, Exception *, RelationTableWasRemoved, ());
IL2CPP_REGISTER_METHOD(0x01F55360, Exception *, ParentTableMismatch, ());
IL2CPP_REGISTER_METHOD(0x01F553E0, Exception *, ChildTableMismatch, ());
IL2CPP_REGISTER_METHOD(0x01F55460, Exception *, EnforceConstraint, ());
IL2CPP_REGISTER_METHOD(0x01F554E0, Exception *, CaseLocaleMismatch, ());
IL2CPP_REGISTER_METHOD(0x01F55560, Exception *, CannotChangeCaseLocale, ());
IL2CPP_REGISTER_METHOD(0x01F55570, Exception *, CannotChangeCaseLocale, (Exception * innerException));
IL2CPP_REGISTER_METHOD(0x01F55600, Exception *, InvalidRemotingFormat, (SerializationFormat__Enum_1 mode));
IL2CPP_REGISTER_METHOD(0x01F55680, Exception *, TableForeignPrimaryKey, ());
IL2CPP_REGISTER_METHOD(0x01F55700, Exception *, TableCannotAddToSimpleContent, ());
IL2CPP_REGISTER_METHOD(0x01F55780, Exception *, NoTableName, ());
IL2CPP_REGISTER_METHOD(0x01F55800, Exception *, MultipleTextOnlyColumns, ());
IL2CPP_REGISTER_METHOD(0x01F55880, Exception *, InvalidSortString, (String * sort));
IL2CPP_REGISTER_METHOD(0x01F55910, Exception *, DuplicateTableName, (String * table));
IL2CPP_REGISTER_METHOD(0x01F559A0, Exception *, DuplicateTableName2, (String * table, String * ns));
IL2CPP_REGISTER_METHOD(0x01F55A40, Exception *, SelfnestedDatasetConflictingName, (String * table));
IL2CPP_REGISTER_METHOD(0x01F55AD0, Exception *, DatasetConflictingName, (String * table));
IL2CPP_REGISTER_METHOD(0x01F55B60, Exception *, TableAlreadyInOtherDataSet, ());
IL2CPP_REGISTER_METHOD(0x01F55BE0, Exception *, TableAlreadyInTheDataSet, ());
IL2CPP_REGISTER_METHOD(0x01F55C60, Exception *, TableOutOfRange, (int32_t index));
IL2CPP_REGISTER_METHOD(0x01F55D30, Exception *, TableNotInTheDataSet, (String * table));
IL2CPP_REGISTER_METHOD(0x01F55DC0, Exception *, TableInRelation, ());
IL2CPP_REGISTER_METHOD(0x01F55E40, Exception *, TableInConstraint, (DataTable * table, Constraint_1 * constraint));
IL2CPP_REGISTER_METHOD(0x01F55F10, Exception *, CanNotSerializeDataTableHierarchy, ());
IL2CPP_REGISTER_METHOD(0x01F55F90, Exception *, CanNotRemoteDataTable, ());
IL2CPP_REGISTER_METHOD(0x01F56010, Exception *, CanNotSetRemotingFormat, ());
IL2CPP_REGISTER_METHOD(0x01F56090, Exception *, CanNotSerializeDataTableWithEmptyName, ());
IL2CPP_REGISTER_METHOD(0x01F56110, Exception *, TableNotFound, (String * tableName));
IL2CPP_REGISTER_METHOD(0x01F561A0, Exception *, AggregateException, (AggregateType__Enum aggregateType, Type * type));
IL2CPP_REGISTER_METHOD(0x01F56290, Exception *, InvalidStorageType, (TypeCode__Enum typecode));
IL2CPP_REGISTER_METHOD(0x01F56350, Exception *, RangeArgument, (int32_t min, int32_t max));
IL2CPP_REGISTER_METHOD(0x01F56450, Exception *, NullRange, ());
IL2CPP_REGISTER_METHOD(0x01F564D0, Exception *, NegativeMinimumCapacity, ());
IL2CPP_REGISTER_METHOD(0x01F56550, Exception *, ProblematicChars, (uint16_t charValue));
IL2CPP_REGISTER_METHOD(0x01F56640, Exception *, StorageSetFailed, ());
IL2CPP_REGISTER_METHOD(0x01F566C0, Exception *, SimpleTypeNotSupported, ());
IL2CPP_REGISTER_METHOD(0x01F56740, Exception *, MissingAttribute, (String * attribute));
IL2CPP_REGISTER_METHOD(0x01F567D0, Exception *, MissingAttribute, (String * element, String * attribute));
IL2CPP_REGISTER_METHOD(0x01F56870, Exception *, InvalidAttributeValue, (String * name, String * value));
IL2CPP_REGISTER_METHOD(0x01F56910, Exception *, AttributeValues, (String * name, String * value1, String * value2));
IL2CPP_REGISTER_METHOD(0x01F569D0, Exception *, ElementTypeNotFound, (String * name));
IL2CPP_REGISTER_METHOD(0x01F56A60, Exception *, RelationParentNameMissing, (String * rel));
IL2CPP_REGISTER_METHOD(0x01F56AF0, Exception *, RelationChildNameMissing, (String * rel));
IL2CPP_REGISTER_METHOD(0x01F56B80, Exception *, RelationTableKeyMissing, (String * rel));
IL2CPP_REGISTER_METHOD(0x01F56C10, Exception *, RelationChildKeyMissing, (String * rel));
IL2CPP_REGISTER_METHOD(0x01F56CA0, Exception *, UndefinedDatatype, (String * name));
IL2CPP_REGISTER_METHOD(0x01F56D30, Exception *, DatatypeNotDefined, ());
IL2CPP_REGISTER_METHOD(0x01F56DB0, Exception *, MismatchKeyLength, ());
IL2CPP_REGISTER_METHOD(0x01F56E30, Exception *, InvalidField, (String * name));
IL2CPP_REGISTER_METHOD(0x01F56EC0, Exception *, InvalidSelector, (String * name));
IL2CPP_REGISTER_METHOD(0x01F56F50, Exception *, CircularComplexType, (String * name));
IL2CPP_REGISTER_METHOD(0x01F56FE0, Exception *, CannotInstantiateAbstract, (String * name));
IL2CPP_REGISTER_METHOD(0x01F57070, Exception *, InvalidKey, (String * name));
IL2CPP_REGISTER_METHOD(0x01F57100, Exception *, DiffgramMissingTable, (String * name));
IL2CPP_REGISTER_METHOD(0x01F57190, Exception *, DiffgramMissingSQL, ());
IL2CPP_REGISTER_METHOD(0x01F57210, Exception *, DuplicateConstraintRead, (String * str));
IL2CPP_REGISTER_METHOD(0x01F572A0, Exception *, ColumnTypeConflict, (String * name));
IL2CPP_REGISTER_METHOD(0x01F57330, Exception *, CannotConvert, (String * name, String * type));
IL2CPP_REGISTER_METHOD(0x01F573D0, Exception *, MissingRefer, (String * name));
IL2CPP_REGISTER_METHOD(0x01F57480, Exception *, InvalidPrefix, (String * name));
IL2CPP_REGISTER_METHOD(0x01F57510, Exception *, CanNotDeserializeObjectType, ());
IL2CPP_REGISTER_METHOD(0x01F57590, Exception *, IsDataSetAttributeMissingInSchema, ());
IL2CPP_REGISTER_METHOD(0x01F57610, Exception *, TooManyIsDataSetAtributeInSchema, ());
IL2CPP_REGISTER_METHOD(0x01F57690, Exception *, NestedCircular, (String * name));
IL2CPP_REGISTER_METHOD(0x01F57720, Exception *, MultipleParentRows, (String * tableQName));
IL2CPP_REGISTER_METHOD(0x01F577B0, Exception *, PolymorphismNotSupported, (String * typeName));
IL2CPP_REGISTER_METHOD(0x01F57840, Exception *, DataTableInferenceNotSupported, ());
IL2CPP_REGISTER_METHOD(0x01F578C0, void, ThrowMultipleTargetConverter, (Exception * innerException));
IL2CPP_REGISTER_METHOD(0x01F57950, Exception *, DuplicateDeclaration, (String * name));
IL2CPP_REGISTER_METHOD(0x01F579E0, Exception *, FoundEntity, ());
IL2CPP_REGISTER_METHOD(0x01F57A60, Exception *, MergeFailed, (String * name));
IL2CPP_REGISTER_METHOD(0x01F57A70, Exception *, ConvertFailed, (Type * type1, Type * type2));
IL2CPP_REGISTER_METHOD(0x01F57B50, Exception *, InvalidDuplicateNamedSimpleTypeDelaration, (String * stName, String * errorStr));
IL2CPP_REGISTER_METHOD(0x01F57BF0, Exception *, InternalRBTreeError, (RBTreeError__Enum internalError));
IL2CPP_REGISTER_METHOD(0x01F57C90, Exception *, EnumeratorModified, ());
IL2CPP_REGISTER_METHOD(0x02652A50, Exception *, _InvalidEnumArgumentException, (Object * value));
IL2CPP_REGISTER_METHOD(0x02652910, Exception *, _InvalidEnumArgumentException, (DataSetDateTime__Enum value));
IL2CPP_REGISTER_METHODINFO(0x04721218, ExceptionBuilder__InvalidEnumArgumentException_2__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02652910, Exception *, _InvalidEnumArgumentException, (DataRowState__Enum value));
IL2CPP_REGISTER_METHODINFO(0x04747700, ExceptionBuilder__InvalidEnumArgumentException_3__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02652910, Exception *, _InvalidEnumArgumentException, (SerializationFormat__Enum_1 value));
IL2CPP_REGISTER_METHODINFO(0x0477A130, ExceptionBuilder__InvalidEnumArgumentException_4__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02652910, Exception *, _InvalidEnumArgumentException, (Int32Enum__Enum value));
}
