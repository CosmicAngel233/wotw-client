#include <interception_macros.h>

namespace app::methods::System::Xml::XmlTextWriter {
IL2CPP_REGISTER_METHOD(0x01FBCAE0, void, __ctor, (XmlTextWriter * __this));
IL2CPP_REGISTER_METHOD(0x01FBCC40, void, __ctor, (XmlTextWriter * __this, Stream * w, Encoding * encoding));
IL2CPP_REGISTER_METHOD(0x01FBCF70, void, __ctor, (XmlTextWriter * __this, String * filename, Encoding * encoding));
IL2CPP_REGISTER_METHOD(0x01FBD100, void, __ctor, (XmlTextWriter * __this, TextWriter * w));
IL2CPP_REGISTER_METHOD(0x01FBD2A0, Stream *, get_BaseStream, (XmlTextWriter * __this));
IL2CPP_REGISTER_METHOD(0x01FBD380, void, set_Namespaces, (XmlTextWriter * __this, bool value));
IL2CPP_REGISTER_METHODINFO(0x0472DDB0, XmlTextWriter_set_Namespaces__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBD450, void, set_Formatting, (XmlTextWriter * __this, Formatting__Enum value));
IL2CPP_REGISTER_METHOD(0x01FBD460, void, set_QuoteChar, (XmlTextWriter * __this, uint16_t value));
IL2CPP_REGISTER_METHODINFO(0x0476EBD8, XmlTextWriter_set_QuoteChar__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBD540, void, WriteStartDocument, (XmlTextWriter * __this));
IL2CPP_REGISTER_METHOD(0x01FBD550, void, WriteStartDocument, (XmlTextWriter * __this, bool standalone));
IL2CPP_REGISTER_METHOD(0x01FBD570, void, WriteEndDocument, (XmlTextWriter * __this));
IL2CPP_REGISTER_METHODINFO(0x0476C150, XmlTextWriter_WriteEndDocument__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBD730, void, WriteDocType, (XmlTextWriter * __this, String * name, String * pubid, String * sysid, String * subset));
IL2CPP_REGISTER_METHODINFO(0x04774E38, XmlTextWriter_WriteDocType__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBDAB0, void, WriteStartElement, (XmlTextWriter * __this, String * prefix, String * localName, String * ns));
IL2CPP_REGISTER_METHODINFO(0x04709A28, XmlTextWriter_WriteStartElement__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBE080, void, WriteEndElement, (XmlTextWriter * __this));
IL2CPP_REGISTER_METHOD(0x01FBE090, void, WriteFullEndElement, (XmlTextWriter * __this));
IL2CPP_REGISTER_METHOD(0x01FBE0A0, void, WriteStartAttribute, (XmlTextWriter * __this, String * prefix, String * localName, String * ns));
IL2CPP_REGISTER_METHODINFO(0x04766BC0, XmlTextWriter_WriteStartAttribute__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBE870, void, WriteEndAttribute, (XmlTextWriter * __this));
IL2CPP_REGISTER_METHODINFO(0x0475F2C8, XmlTextWriter_WriteEndAttribute__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBE930, void, WriteCData, (XmlTextWriter * __this, String * text));
IL2CPP_REGISTER_METHODINFO(0x0471DCB8, XmlTextWriter_WriteCData__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBEAE0, void, WriteComment, (XmlTextWriter * __this, String * text));
IL2CPP_REGISTER_METHODINFO(0x04718CB8, XmlTextWriter_WriteComment__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBECB0, void, WriteProcessingInstruction, (XmlTextWriter * __this, String * name, String * text));
IL2CPP_REGISTER_METHODINFO(0x04777D88, XmlTextWriter_WriteProcessingInstruction__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBEF50, void, WriteEntityRef, (XmlTextWriter * __this, String * name));
IL2CPP_REGISTER_METHODINFO(0x04718B20, XmlTextWriter_WriteEntityRef__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBF0A0, void, WriteCharEntity, (XmlTextWriter * __this, uint16_t ch));
IL2CPP_REGISTER_METHODINFO(0x047188E0, XmlTextWriter_WriteCharEntity__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBF2B0, void, WriteWhitespace, (XmlTextWriter * __this, String * ws));
IL2CPP_REGISTER_METHODINFO(0x047219A0, XmlTextWriter_WriteWhitespace__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBF400, void, WriteString, (XmlTextWriter * __this, String * text));
IL2CPP_REGISTER_METHODINFO(0x04721CE8, XmlTextWriter_WriteString__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBF4F0, void, WriteSurrogateCharEntity, (XmlTextWriter * __this, uint16_t lowChar, uint16_t highChar));
IL2CPP_REGISTER_METHODINFO(0x04764D58, XmlTextWriter_WriteSurrogateCharEntity__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBF5E0, void, WriteChars, (XmlTextWriter * __this, Char__Array * buffer, int32_t index, int32_t count));
IL2CPP_REGISTER_METHODINFO(0x04767F68, XmlTextWriter_WriteChars__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBF6E0, void, WriteRaw, (XmlTextWriter * __this, Char__Array * buffer, int32_t index, int32_t count));
IL2CPP_REGISTER_METHODINFO(0x0478D960, XmlTextWriter_WriteRaw__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBF7E0, void, WriteRaw, (XmlTextWriter * __this, String * data));
IL2CPP_REGISTER_METHODINFO(0x047941A8, XmlTextWriter_WriteRaw_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBF8C0, void, WriteBase64, (XmlTextWriter * __this, Byte__Array * buffer, int32_t index, int32_t count));
IL2CPP_REGISTER_METHODINFO(0x0476B390, XmlTextWriter_WriteBase64__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBFAD0, void, WriteBinHex, (XmlTextWriter * __this, Byte__Array * buffer, int32_t index, int32_t count));
IL2CPP_REGISTER_METHODINFO(0x04791EB8, XmlTextWriter_WriteBinHex__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBFBD0, WriteState__Enum, get_WriteState, (XmlTextWriter * __this));
IL2CPP_REGISTER_METHOD(0x01FBFC40, void, Close, (XmlTextWriter * __this));
IL2CPP_REGISTER_METHOD(0x01F3EE40, void, Flush, (XmlTextWriter * __this));
IL2CPP_REGISTER_METHOD(0x01FBFDC0, String *, LookupPrefix, (XmlTextWriter * __this, String * ns));
IL2CPP_REGISTER_METHODINFO(0x0477F6A8, XmlTextWriter_LookupPrefix__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FBFF20, void, StartDocument, (XmlTextWriter * __this, int32_t standalone));
IL2CPP_REGISTER_METHODINFO(0x047589B8, XmlTextWriter_StartDocument__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FC0270, void, AutoComplete, (XmlTextWriter * __this, XmlTextWriter_Token__Enum token));
IL2CPP_REGISTER_METHODINFO(0x04763150, XmlTextWriter_AutoComplete__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FC08B0, void, AutoCompleteAll, (XmlTextWriter * __this));
IL2CPP_REGISTER_METHOD(0x01FC0900, void, InternalWriteEndElement, (XmlTextWriter * __this, bool longFormat));
IL2CPP_REGISTER_METHODINFO(0x0473BA50, XmlTextWriter_InternalWriteEndElement__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FC0D20, void, WriteEndStartTag, (XmlTextWriter * __this, bool empty));
IL2CPP_REGISTER_METHOD(0x01FC1340, void, WriteEndAttributeQuote, (XmlTextWriter * __this));
IL2CPP_REGISTER_METHOD(0x01FC13C0, void, Indent, (XmlTextWriter * __this, bool beforeEndElement));
IL2CPP_REGISTER_METHOD(0x01FC14C0, void, PushNamespace, (XmlTextWriter * __this, String * prefix, String * ns, bool declared));
IL2CPP_REGISTER_METHODINFO(0x04725290, XmlTextWriter_PushNamespace__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FC1860, void, AddNamespace, (XmlTextWriter * __this, String * prefix, String * ns, bool declared));
IL2CPP_REGISTER_METHOD(0x01FC1BD0, void, AddToNamespaceHashtable, (XmlTextWriter * __this, int32_t namespaceIndex));
IL2CPP_REGISTER_METHOD(0x01FC1DA0, void, PopNamespaces, (XmlTextWriter * __this, int32_t indexFrom, int32_t indexTo));
IL2CPP_REGISTER_METHOD(0x01FC1ED0, String *, GeneratePrefix, (XmlTextWriter * __this));
IL2CPP_REGISTER_METHOD(0x01FC2030, void, InternalWriteProcessingInstruction, (XmlTextWriter * __this, String * name, String * text));
IL2CPP_REGISTER_METHOD(0x01FC2180, int32_t, LookupNamespace, (XmlTextWriter * __this, String * prefix));
IL2CPP_REGISTER_METHOD(0x01FC2310, int32_t, LookupNamespaceInCurrentScope, (XmlTextWriter * __this, String * prefix));
IL2CPP_REGISTER_METHOD(0x01FC2540, String *, FindPrefix, (XmlTextWriter * __this, String * ns));
IL2CPP_REGISTER_METHOD(0x01FC2680, void, ValidateName, (XmlTextWriter * __this, String * name, bool isNCName));
IL2CPP_REGISTER_METHODINFO(0x0471A050, XmlTextWriter_ValidateName__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FC2940, void, HandleSpecialAttribute, (XmlTextWriter * __this));
IL2CPP_REGISTER_METHODINFO(0x0478BB20, XmlTextWriter_HandleSpecialAttribute__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FC2CA0, void, VerifyPrefixXml, (XmlTextWriter * __this, String * prefix, String * ns));
IL2CPP_REGISTER_METHODINFO(0x047635A0, XmlTextWriter_VerifyPrefixXml__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01FC2E20, void, PushStack, (XmlTextWriter * __this));
IL2CPP_REGISTER_METHOD(0x01FC2F40, void, FlushEncoders, (XmlTextWriter * __this));
IL2CPP_REGISTER_METHOD(0x01FC2F70, void, __cctor, ());
}
