#include <interception_macros.h>

namespace app::methods::System_Linq_Expressions::ExpressionStringBuilder {
IL2CPP_REGISTER_METHOD(0x022C78D0, void, __ctor, (app::ExpressionStringBuilder * this_ptr));
IL2CPP_REGISTER_METHOD(0x01B65290, String *, ToString, (app::ExpressionStringBuilder * this_ptr));
IL2CPP_REGISTER_METHOD(0x022C7A20, int32_t, GetLabelId, (app::ExpressionStringBuilder * this_ptr, app::LabelTarget * label));
IL2CPP_REGISTER_METHOD(0x022C7A20, int32_t, GetParamId, (app::ExpressionStringBuilder * this_ptr, app::ParameterExpression * p));
IL2CPP_REGISTER_METHOD(0x022C7A30, int32_t, GetId, (app::ExpressionStringBuilder * this_ptr, app::Object * o));
IL2CPP_REGISTER_METHOD(0x022C7C70, void, Out_1, (app::ExpressionStringBuilder * this_ptr, app::String * s));
IL2CPP_REGISTER_METHOD(0x022C7C90, void, Out_2, (app::ExpressionStringBuilder * this_ptr, uint16_t c));
IL2CPP_REGISTER_METHOD(0x022C7CB0, String *, ExpressionToString, (app::Expression * node));
IL2CPP_REGISTER_METHOD(0x022C7E30, String *, CatchBlockToString, (app::CatchBlock * node));
IL2CPP_REGISTER_METHOD(0x022C7FB0, String *, SwitchCaseToString, (app::SwitchCase * node));
IL2CPP_REGISTER_METHOD(0x022C8130, String *, MemberBindingToString, (app::MemberBinding * node));
IL2CPP_REGISTER_METHOD(0x022C82B0, String *, ElementInitBindingToString, (app::ElementInit * node));
IL2CPP_REGISTER_METHOD(0x022C8430, Expression *, VisitBinary, (app::ExpressionStringBuilder * this_ptr, app::BinaryExpression * node));
IL2CPP_REGISTER_METHODINFO(0x0470AD38, ExpressionStringBuilder_VisitBinary__MethodInfo);
IL2CPP_REGISTER_METHOD(0x022C8900, Expression *, VisitParameter, (app::ExpressionStringBuilder * this_ptr, app::ParameterExpression * node));
IL2CPP_REGISTER_METHOD(0x022C8A40, Expression *, VisitListInit, (app::ExpressionStringBuilder * this_ptr, app::ListInitExpression * node));
IL2CPP_REGISTER_METHOD(0x022C8D30, Expression *, VisitConditional, (app::ExpressionStringBuilder * this_ptr, app::ConditionalExpression * node));
IL2CPP_REGISTER_METHOD(0x022C8EA0, Expression *, VisitConstant, (app::ExpressionStringBuilder * this_ptr, app::ConstantExpression * node));
IL2CPP_REGISTER_METHOD(0x022C90E0, Expression *, VisitDebugInfo, (app::ExpressionStringBuilder * this_ptr, app::DebugInfoExpression * node));
IL2CPP_REGISTER_METHOD(0x022C9460, Expression *, VisitRuntimeVariables, (app::ExpressionStringBuilder * this_ptr, app::RuntimeVariablesExpression * node));
IL2CPP_REGISTER_METHOD(0x022C9510, void, OutMember, (app::ExpressionStringBuilder * this_ptr, app::Expression * instance, app::MemberInfo_1 * member));
IL2CPP_REGISTER_METHOD(0x022C9600, Expression *, VisitMember, (app::ExpressionStringBuilder * this_ptr, app::MemberExpression * node));
IL2CPP_REGISTER_METHOD(0x022C9730, Expression *, VisitMemberInit, (app::ExpressionStringBuilder * this_ptr, app::MemberInitExpression * node));
IL2CPP_REGISTER_METHOD(0x022C9B30, MemberAssignment *, VisitMemberAssignment, (app::ExpressionStringBuilder * this_ptr, app::MemberAssignment * assignment));
IL2CPP_REGISTER_METHOD(0x022C9C30, MemberListBinding *, VisitMemberListBinding, (app::ExpressionStringBuilder * this_ptr, app::MemberListBinding * binding));
IL2CPP_REGISTER_METHOD(0x022C9F50, MemberMemberBinding *, VisitMemberMemberBinding, (app::ExpressionStringBuilder * this_ptr, app::MemberMemberBinding * binding));
IL2CPP_REGISTER_METHOD(0x022CA270, ElementInit *, VisitElementInit, (app::ExpressionStringBuilder * this_ptr, app::ElementInit * initializer));
IL2CPP_REGISTER_METHOD(0x022CA5D0, Expression *, VisitInvocation, (app::ExpressionStringBuilder * this_ptr, app::InvocationExpression * node));
IL2CPP_REGISTER_METHOD(0x022CA870, Expression *, VisitMethodCall, (app::ExpressionStringBuilder * this_ptr, app::MethodCallExpression * node));
IL2CPP_REGISTER_METHOD(0x022CABF0, Expression *, VisitNewArray, (app::ExpressionStringBuilder * this_ptr, app::NewArrayExpression * node));
IL2CPP_REGISTER_METHOD(0x022CAD60, Expression *, VisitNew, (app::ExpressionStringBuilder * this_ptr, app::NewExpression * node));
IL2CPP_REGISTER_METHOD(0x022CB0C0, Expression *, VisitTypeBinary, (app::ExpressionStringBuilder * this_ptr, app::TypeBinaryExpression * node));
IL2CPP_REGISTER_METHOD(0x022CB240, Expression *, VisitUnary, (app::ExpressionStringBuilder * this_ptr, app::UnaryExpression * node));
IL2CPP_REGISTER_METHODINFO(0x04790480, ExpressionStringBuilder_VisitUnary__MethodInfo);
IL2CPP_REGISTER_METHOD(0x022CB7E0, Expression *, VisitBlock, (app::ExpressionStringBuilder * this_ptr, app::BlockExpression * node));
IL2CPP_REGISTER_METHOD(0x022CBBF0, Expression *, VisitDefault, (app::ExpressionStringBuilder * this_ptr, app::DefaultExpression * node));
IL2CPP_REGISTER_METHOD(0x022CBD10, Expression *, VisitLabel, (app::ExpressionStringBuilder * this_ptr, app::LabelExpression * node));
IL2CPP_REGISTER_METHOD(0x022CBDF0, Expression *, VisitGoto, (app::ExpressionStringBuilder * this_ptr, app::GotoExpression * node));
IL2CPP_REGISTER_METHODINFO(0x0478BE60, ExpressionStringBuilder_VisitGoto__MethodInfo);
IL2CPP_REGISTER_METHOD(0x022CBF90, Expression *, VisitLoop, (app::ExpressionStringBuilder * this_ptr, app::LoopExpression * node));
IL2CPP_REGISTER_METHOD(0x022CC030, SwitchCase *, VisitSwitchCase, (app::ExpressionStringBuilder * this_ptr, app::SwitchCase * node));
IL2CPP_REGISTER_METHOD(0x022CC120, Expression *, VisitSwitch, (app::ExpressionStringBuilder * this_ptr, app::SwitchExpression * node));
IL2CPP_REGISTER_METHOD(0x022CC220, CatchBlock *, VisitCatchBlock, (app::ExpressionStringBuilder * this_ptr, app::CatchBlock * node));
IL2CPP_REGISTER_METHOD(0x022CC390, Expression *, VisitTry, (app::ExpressionStringBuilder * this_ptr, app::TryExpression * node));
IL2CPP_REGISTER_METHOD(0x022CC430, Expression *, VisitIndex, (app::ExpressionStringBuilder * this_ptr, app::IndexExpression * node));
IL2CPP_REGISTER_METHOD(0x022CC7A0, Expression *, VisitExtension, (app::ExpressionStringBuilder * this_ptr, app::Expression * node));
IL2CPP_REGISTER_METHOD(0x022CCA10, void, DumpLabel, (app::ExpressionStringBuilder * this_ptr, app::LabelTarget * target));
IL2CPP_REGISTER_METHOD(0x022CCB20, bool, IsBool, (app::Expression * node));
IL2CPP_REGISTER_METHOD(0x01AEFBA0, void, VisitExpressions_1, (app::ExpressionStringBuilder * this_ptr, uint16_t open, app::ReadOnlyCollection_1_System_Object_ * expressions, uint16_t close));
IL2CPP_REGISTER_METHOD(0x01AEFC70, void, VisitExpressions_2, (app::ExpressionStringBuilder * this_ptr, uint16_t open, app::ReadOnlyCollection_1_System_Object_ * expressions, uint16_t close, app::String * seperator));
IL2CPP_REGISTER_METHOD(0x0153BC30, Expression *, VisitLambda, (app::ExpressionStringBuilder * this_ptr, app::Expression_1_System_Object_ * node));
IL2CPP_REGISTER_METHOD(0x01AEFBA0, void, VisitExpressions_3, (app::ExpressionStringBuilder * this_ptr, uint16_t open, app::ReadOnlyCollection_1_System_Linq_Expressions_ParameterExpression_ * expressions, uint16_t close));
IL2CPP_REGISTER_METHODINFO(0x04762670, ExpressionStringBuilder_VisitExpressions_2__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01AEFBA0, void, VisitExpressions_4, (app::ExpressionStringBuilder * this_ptr, uint16_t open, app::ReadOnlyCollection_1_System_Linq_Expressions_Expression_ * expressions, uint16_t close));
IL2CPP_REGISTER_METHODINFO(0x047017F8, ExpressionStringBuilder_VisitExpressions_3__MethodInfo);
}
