using namespace app;

namespace app::methods::SeinSpiritLeashAbility {
IL2CPP_REGISTER_METHOD(0x00417870, bool, get_IsBlindForest, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x00420EE0, ButtonInputType__Enum, get_ButtonInputType, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E57B0, Transform *, get_LeashMarkPositionTransform, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E59C0, LayerMask, get_GroundMask, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x005E5AD0, LayerMask, get_RaycastMask, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E5C70, bool, get_IsPerformingSpiritLeash, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E5C90, bool, get_HasTarget, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E5D40, bool, MovesTowards, (SeinSpiritLeashAbility * __this, IAttackable * attackable));
IL2CPP_REGISTER_METHOD(0x005E5DC0, bool, IsHookedOn, (SeinSpiritLeashAbility * __this, IAttackable * attackable));
IL2CPP_REGISTER_METHOD(0x005E5DE0, bool, get_UsingLeftTrigger, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E5E10, Input_InputButtonProcessor *, get_ActivationButton, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E5F00, bool, get_ButtonPressed, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E5F20, bool, get_SpriteMirrorLock, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E5F30, void, set_SpriteMirrorLock, (SeinSpiritLeashAbility * __this, bool value));
IL2CPP_REGISTER_METHOD(0x005E5FF0, bool, get_FinishThrow, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E6040, void, OnEnable, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E6200, void, OnDisable, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E63E0, void, Start, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E6DB0, void, Update, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E6ED0, void, UpdateTurnAnimations, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E70B0, GrabbableSurface *, GetAndCacheObjectSurface, (SeinSpiritLeashAbility * __this, GameObject * obj));
IL2CPP_REGISTER_METHOD(0x005E7370, void, PruneRecentHitSurfaces, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E7710, void, PreDash, (SeinSpiritLeashAbility * __this, bool * allow));
IL2CPP_REGISTER_METHODINFO(0x0477C118, SeinSpiritLeashAbility_PreDash__MethodInfo);
IL2CPP_REGISTER_METHOD(0x005E79D0, void, OnDash, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHODINFO(0x04723820, SeinSpiritLeashAbility_OnDash__MethodInfo);
IL2CPP_REGISTER_METHOD(0x005E7A90, void, OnBash, (SeinSpiritLeashAbility * __this, Vector2 speed));
IL2CPP_REGISTER_METHODINFO(0x04719908, SeinSpiritLeashAbility_OnBash__MethodInfo);
IL2CPP_REGISTER_METHOD(0x005E7B40, void, OnCollision, (SeinSpiritLeashAbility * __this, GameObject * otherObj, Vector3 normal));
IL2CPP_REGISTER_METHOD(0x005E7DC0, void, OnMoonControllerCollision, (SeinSpiritLeashAbility * __this, MoonControllerColliderHit hit));
IL2CPP_REGISTER_METHODINFO(0x04753BD0, SeinSpiritLeashAbility_OnMoonControllerCollision__MethodInfo);
IL2CPP_REGISTER_METHOD(0x005E7E80, void, OnNativeCollision, (SeinSpiritLeashAbility * __this, Collision * collision));
IL2CPP_REGISTER_METHODINFO(0x04745E10, SeinSpiritLeashAbility_OnNativeCollision__MethodInfo);
IL2CPP_REGISTER_METHOD(0x005E8110, void, ModifyHorizontalPlatformMovementSettings, (SeinSpiritLeashAbility * __this, HorizontalPlatformMovementSettings * settings));
IL2CPP_REGISTER_METHODINFO(0x0473A778, SeinSpiritLeashAbility_ModifyHorizontalPlatformMovementSettings__MethodInfo);
IL2CPP_REGISTER_METHOD(0x005E8360, float, get_MoveCooldown, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E8370, float, get_MoveCooldownTimer, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E8380, void, set_MoveCooldownTimer, (SeinSpiritLeashAbility * __this, float value));
IL2CPP_REGISTER_METHOD(0x005E8390, bool, get_WasGroundedSinceLastExecution, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E83A0, void, set_WasGroundedSinceLastExecution, (SeinSpiritLeashAbility * __this, bool value));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnAnimationEvent, (SeinSpiritLeashAbility * __this, SeinController3D_EventId__Enum eventId));
IL2CPP_REGISTER_METHOD(0x005E83B0, void, OnSetReferenceToSein, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E8500, bool, get_MoveHasFinished, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x00417920, ComboMoveType__Enum, get_ComboMoveType, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E5F00, bool, get_IsAttackButtonDown, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E8510, bool, get_OnAttackButtonPressed, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E8540, bool, get_OnAttackButtonReleased, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E8570, bool, CanExecute, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E8580, void, EnterMove, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E8680, void, UpdateMove, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E8690, void, ExitMove, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E86B0, void, InterruptMove, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E8730, void, ModifyGravityPlatformMovementSettings, (SeinSpiritLeashAbility * __this, GravityPlatformMovementSettings * settings));
IL2CPP_REGISTER_METHOD(0x005E8760, void, IComboMove_ModifyHorizontalPlatformMovementSettings, (SeinSpiritLeashAbility * __this, HorizontalPlatformMovementSettings * settings));
IL2CPP_REGISTER_METHOD(0x005E8770, void, ChangeState, (SeinSpiritLeashAbility * __this, SeinSpiritLeashAbility_State__Enum state));
IL2CPP_REGISTER_METHOD(0x005E8DB0, bool, WillDamageInterruptLeash, (SeinSpiritLeashAbility * __this, DamageType__Enum type));
IL2CPP_REGISTER_METHOD(0x005E8E10, void, OnTakeDamage, (SeinSpiritLeashAbility * __this, Damage * damage));
IL2CPP_REGISTER_METHODINFO(0x04751120, SeinSpiritLeashAbility_OnTakeDamage__MethodInfo);
IL2CPP_REGISTER_METHOD(0x005E8E90, bool, get_IsStatePerforming, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E8F60, bool, ShouldPullNeedToPlay, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E9020, void, UpdateCharacterState, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E9550, void, UpdateStates, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E9800, void, UpdateSustainedInput, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E9950, void, SustainInput, (SeinSpiritLeashAbility * __this, Vector2 inputDirection, float sustainTime));
IL2CPP_REGISTER_METHOD(0x005E9980, bool, HasSustainedInput, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E99A0, void, ResetJumpAndDash, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E99D0, void, EnterIdle, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E9C70, void, UpdateIdle, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E9D50, void, TryLeash, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E9E50, void, Interrupt, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E9E60, void, EnterReady, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EA190, void, ExitReady, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EA1A0, bool, PlaySound, (SeinSpiritLeashAbility * __this, SoundProvider * sound));
IL2CPP_REGISTER_METHOD(0x005EA340, void, UpdateReady, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EAFD0, void, EnterHook, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EB3F0, void, ComputeTrajectoryCorrection, (SeinSpiritLeashAbility * __this, SeinSpiritLeashAbility_LeashableInfo * leashInfo));
IL2CPP_REGISTER_METHOD(0x005EBEB0, void, ExitHook, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EBF90, void, EnterHookPull, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EA190, void, ExitHookPull, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, EnterHooked, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, ExitHooked, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EC1F0, void, FlingJump, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EC470, void, EnterFling, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005E9E50, void, UpdateFling, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, ExitFling, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EC4D0, void, UpdateHook, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005ED910, void, DealDamage, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EDED0, void, UpdateHooked, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EE100, void, LockControl, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EE1C0, void, UnlockControl, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EE290, void, UpdateHookPull, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EE4B0, void, SetAnimationAngle, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EE680, void, ThrowLeashStartAnimation, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EED80, void, EndThrowing, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHODINFO(0x04707468, SeinSpiritLeashAbility_EndThrowing__MethodInfo);
IL2CPP_REGISTER_METHOD(0x005EED90, void, LeashPulledStartAnimation, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EF0E0, void, LeashPullStartAnimation, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EF660, void, FlingJumpStartAnimation, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EF9B0, void, EnableGenericJumpFlipTransition, (SeinSpiritLeashAbility * __this, float time));
IL2CPP_REGISTER_METHOD(0x005EFA20, void, CancelGenericJumpFlipTransition, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, ReleaseLock, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHODINFO(0x047120A0, SeinSpiritLeashAbility_ReleaseLock__MethodInfo);
IL2CPP_REGISTER_METHOD(0x005EFA90, void, LeashGrabWallHookAnimation, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EFD20, void, LeashGrabCeilingHookAnimation, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005EFF40, void, LeashGrabRotatingHookAnimation, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F0020, void, LeashWallHookIdle, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHODINFO(0x047294D8, SeinSpiritLeashAbility_LeashWallHookIdle__MethodInfo);
IL2CPP_REGISTER_METHOD(0x005F02F0, void, LeashCeilingHookIdle, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHODINFO(0x0475CEE0, SeinSpiritLeashAbility_LeashCeilingHookIdle__MethodInfo);
IL2CPP_REGISTER_METHOD(0x005F0520, bool, StayHooked, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHODINFO(0x04753648, SeinSpiritLeashAbility_StayHooked__MethodInfo);
IL2CPP_REGISTER_METHOD(0x005F0530, bool, IsHookedIdling, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F0540, void, EnterQuickAttack, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005D06C0, PlatformMovement *, get_PlatformMovement, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F0710, void, LimitSpeedNearTarget, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F0980, void, UpdateQuickAttack, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F0B00, void, EnterHoldReleaseAttack, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F0D10, void, UpdateHoldReleaseAttack, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F0FB0, CharacterApplyFrictionToSpeed *, get_ApplyFrictionToSpeed, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F0FF0, CharacterAirNoDeceleration *, get_AirNoDeceleration, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F1020, void, UpdateFriction, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F1150, void, EnterHoldAttack, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F13E0, void, UpdateHoldAttack, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F1420, bool, get_IsGrabbing, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F1430, void, UpdateSlingshotTargetPosition, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F15D0, float, UpdatePlayerSlingshotMovement, (SeinSpiritLeashAbility * __this, Vector3 targetPosition));
IL2CPP_REGISTER_METHOD(0x005F17E0, void, SpawnSpiritLeash, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F1B00, void, DestroySpiritLeashEffect, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F1CD0, void, OnExit, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F1D40, void, UpdateMark, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F1D70, void, UpdateTargetPositionTransform, (SeinSpiritLeashAbility * __this, SeinSpiritLeashAbility_LeashableInfo * targetLeash));
IL2CPP_REGISTER_METHOD(0x005F2220, void, ShowLeashMark, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F2890, void, HideLeashMark, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F2D40, bool, ShouldShowMark, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F2F40, float, CalculateAttackableCost, (SeinSpiritLeashAbility * __this, ISpiritLeashAttackable * attackable, float distance, float angleDif, bool hasInputDir));
IL2CPP_REGISTER_METHOD(0x005F3040, bool, IsVectorWithinAngle, (Vector3 targetDir, Vector3 refDir, float angleThreshold, float * angleDifference));
IL2CPP_REGISTER_METHOD(0x005F3140, bool, IsInputTowardsTarget, (SeinSpiritLeashAbility * __this, Vector3 targetDir, Vector3 inputDir, bool isCurrentTarget, float * angleDifference));
IL2CPP_REGISTER_METHOD(0x005F34E0, bool, CanTargetEntity, (SeinSpiritLeashAbility * __this, bool hasUltraleash));
IL2CPP_REGISTER_METHOD(0x005F3520, bool, IsAttackableEnemy, (IAttackable * attackable));
IL2CPP_REGISTER_METHOD(0x002FA000, void, DrawLine, (SeinSpiritLeashAbility * __this, Vector3 from, Vector3 to, Color c));
IL2CPP_REGISTER_METHOD(0x002FA000, void, DrawCircle, (SeinSpiritLeashAbility * __this, Vector3 center, float radius, Color c));
IL2CPP_REGISTER_METHOD(0x005F3690, bool, IsAttackableInteresting, (SeinSpiritLeashAbility * __this, IAttackable * attackable));
IL2CPP_REGISTER_METHOD(0x002FA000, void, RemovingAttackable, (SeinSpiritLeashAbility * __this, IAttackable * attackable));
IL2CPP_REGISTER_METHOD(0x005F3780, Guid, get_AttackableConsumerID, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F3790, void, set_AttackableConsumerID, (SeinSpiritLeashAbility * __this, Guid value));
IL2CPP_REGISTER_METHOD(0x005F37A0, void, FindClosestAttackHandler, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F7110, bool, get_CanLeash, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F7390, bool, get_CanPerformHookJump, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F7410, bool, get_IsHooking, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F7490, bool, get_CanPerformFlingJump, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F74C0, void, OnPreRestoreCheckpoint, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHODINFO(0x04722848, SeinSpiritLeashAbility_OnPreRestoreCheckpoint__MethodInfo);
IL2CPP_REGISTER_METHOD(0x005E9E50, void, LetGoOffHook, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F7530, bool, ShouldHookJumpAnimationKeepPlaying, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F75C0, void, FinishedHookJump, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F75E0, void, PerformHookJump, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F7C20, Vector3, GetSlinshotTargetPosition, (Vector3 from, Vector3 to, bool isPlayer, float targetDistance));
IL2CPP_REGISTER_METHOD(0x005F7EC0, ActiveAnimationHandle, PlayAnimation, (SeinSpiritLeashAbility * __this, MoonAnimation * animation, int32_t layer, Action * onStopPlaying, Func_1_Boolean_ * condition, float speed, bool increasePriority));
IL2CPP_REGISTER_METHOD(0x005F7FB0, void, PlayLoopAnimation, (SeinSpiritLeashAbility * __this, String * name, Func_1_Boolean_ * condition));
IL2CPP_REGISTER_METHOD(0x005F7FD0, Vector3, CalculatePullVelocity, (Vector3 direction, float speed, float maxSpeed));
IL2CPP_REGISTER_METHOD(0x005F8160, void, OnDestroy, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F8690, IComboMove *, GetComboMove, (SeinSpiritLeashAbility * __this, ComboInput * input));
IL2CPP_REGISTER_METHOD(0x005F86D0, bool, CanBeInterruptedBy, (SeinSpiritLeashAbility * __this, IComboMove * move));
IL2CPP_REGISTER_METHOD(0x005F8A10, List_1_Moon_ComboSystem_IComboMove_ *, get_ComboMoves, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F8A20, void, set_ComboMoves, (SeinSpiritLeashAbility * __this, List_1_Moon_ComboSystem_IComboMove_ * value));
IL2CPP_REGISTER_METHOD(0x005F8A30, AbilityType__Enum, get_ComboAbilityType, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F8A40, float, get_CoolDown, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F8A50, void, set_CoolDown, (SeinSpiritLeashAbility * __this, float value));
IL2CPP_REGISTER_METHOD(0x005F8A40, float, get_ProviderCooldown, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F8A60, float, get_ProviderCooldownTimer, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F8A70, void, set_ProviderCooldownTimer, (SeinSpiritLeashAbility * __this, float value));
IL2CPP_REGISTER_METHOD(0x005F8A80, SeinLeashPuppet *, get_Puppet, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F8B40, String *, get_StressTestName, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F8BC0, void, StartStressTest, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F8CE0, void, StressTestUpdate, (SeinSpiritLeashAbility * __this, float deltaTime));
IL2CPP_REGISTER_METHOD(0x002FA000, void, EndStressTest, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F8D20, StressTestStatus__Enum, get_StressTestStatus, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F8D30, void, set_StressTestStatus, (SeinSpiritLeashAbility * __this, StressTestStatus__Enum value));
IL2CPP_REGISTER_METHOD(0x005F8D40, bool, get_CanExecuteStressTest, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, get_StopMovingPlayerWhilePerforming, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F8DF0, void, __ctor, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHOD(0x005F9B30, void, __cctor, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x005F9BE0, bool, _ThrowLeashStartAnimation_b__209_0, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHODINFO(0x04708F58, SeinSpiritLeashAbility__ThrowLeashStartAnimation_b__209_0__MethodInfo);
IL2CPP_REGISTER_METHOD(0x005F9BE0, bool, _ThrowLeashStartAnimation_b__209_1, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHODINFO(0x04731DB8, SeinSpiritLeashAbility__ThrowLeashStartAnimation_b__209_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x005F9C20, bool, _FlingJumpStartAnimation_b__216_0, (SeinSpiritLeashAbility * __this));
IL2CPP_REGISTER_METHODINFO(0x04733B50, SeinSpiritLeashAbility__FlingJumpStartAnimation_b__216_0__MethodInfo);
}
