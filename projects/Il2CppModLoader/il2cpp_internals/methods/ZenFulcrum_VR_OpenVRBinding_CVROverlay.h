using namespace app;

namespace app::methods::ZenFulcrum::VR::OpenVRBinding::CVROverlay {
IL2CPP_REGISTER_METHOD(0x01678A40, void, __ctor, (CVROverlay * __this, void * pInterface));
IL2CPP_REGISTER_METHOD(0x01678BC0, EVROverlayError__Enum, FindOverlay, (CVROverlay * __this, String * pchOverlayKey, uint64_t * pOverlayHandle));
IL2CPP_REGISTER_METHOD(0x01678BF0, EVROverlayError__Enum, CreateOverlay, (CVROverlay * __this, String * pchOverlayKey, String * pchOverlayName, uint64_t * pOverlayHandle));
IL2CPP_REGISTER_METHOD(0x01678C20, EVROverlayError__Enum, DestroyOverlay, (CVROverlay * __this, uint64_t ulOverlayHandle));
IL2CPP_REGISTER_METHOD(0x01678C40, EVROverlayError__Enum, SetHighQualityOverlay, (CVROverlay * __this, uint64_t ulOverlayHandle));
IL2CPP_REGISTER_METHOD(0x01678C60, uint64_t, GetHighQualityOverlay, (CVROverlay * __this));
IL2CPP_REGISTER_METHOD(0x01678C80, uint32_t, GetOverlayKey, (CVROverlay * __this, uint64_t ulOverlayHandle, StringBuilder * pchValue, uint32_t unBufferSize, EVROverlayError__Enum * pError));
IL2CPP_REGISTER_METHOD(0x01678CB0, uint32_t, GetOverlayName, (CVROverlay * __this, uint64_t ulOverlayHandle, StringBuilder * pchValue, uint32_t unBufferSize, EVROverlayError__Enum * pError));
IL2CPP_REGISTER_METHOD(0x01678CE0, EVROverlayError__Enum, SetOverlayName, (CVROverlay * __this, uint64_t ulOverlayHandle, String * pchName));
IL2CPP_REGISTER_METHOD(0x01678D00, EVROverlayError__Enum, GetOverlayImageData, (CVROverlay * __this, uint64_t ulOverlayHandle, void * pvBuffer, uint32_t unBufferSize, uint32_t * punWidth, uint32_t * punHeight));
IL2CPP_REGISTER_METHOD(0x01678D40, String *, GetOverlayErrorNameFromEnum, (CVROverlay * __this, EVROverlayError__Enum error));
IL2CPP_REGISTER_METHOD(0x01678E20, EVROverlayError__Enum, SetOverlayRenderingPid, (CVROverlay * __this, uint64_t ulOverlayHandle, uint32_t unPID));
IL2CPP_REGISTER_METHOD(0x01678E40, uint32_t, GetOverlayRenderingPid, (CVROverlay * __this, uint64_t ulOverlayHandle));
IL2CPP_REGISTER_METHOD(0x01678E60, EVROverlayError__Enum, SetOverlayFlag, (CVROverlay * __this, uint64_t ulOverlayHandle, VROverlayFlags__Enum eOverlayFlag, bool bEnabled));
IL2CPP_REGISTER_METHOD(0x01678E90, EVROverlayError__Enum, GetOverlayFlag, (CVROverlay * __this, uint64_t ulOverlayHandle, VROverlayFlags__Enum eOverlayFlag, bool * pbEnabled));
IL2CPP_REGISTER_METHOD(0x01678EC0, EVROverlayError__Enum, SetOverlayColor, (CVROverlay * __this, uint64_t ulOverlayHandle, float fRed, float fGreen, float fBlue));
IL2CPP_REGISTER_METHOD(0x01678EF0, EVROverlayError__Enum, GetOverlayColor, (CVROverlay * __this, uint64_t ulOverlayHandle, float * pfRed, float * pfGreen, float * pfBlue));
IL2CPP_REGISTER_METHOD(0x01678F30, EVROverlayError__Enum, SetOverlayAlpha, (CVROverlay * __this, uint64_t ulOverlayHandle, float fAlpha));
IL2CPP_REGISTER_METHOD(0x01678F60, EVROverlayError__Enum, GetOverlayAlpha, (CVROverlay * __this, uint64_t ulOverlayHandle, float * pfAlpha));
IL2CPP_REGISTER_METHOD(0x01678F90, EVROverlayError__Enum, SetOverlayTexelAspect, (CVROverlay * __this, uint64_t ulOverlayHandle, float fTexelAspect));
IL2CPP_REGISTER_METHOD(0x01678FC0, EVROverlayError__Enum, GetOverlayTexelAspect, (CVROverlay * __this, uint64_t ulOverlayHandle, float * pfTexelAspect));
IL2CPP_REGISTER_METHOD(0x01678FF0, EVROverlayError__Enum, SetOverlaySortOrder, (CVROverlay * __this, uint64_t ulOverlayHandle, uint32_t unSortOrder));
IL2CPP_REGISTER_METHOD(0x01679020, EVROverlayError__Enum, GetOverlaySortOrder, (CVROverlay * __this, uint64_t ulOverlayHandle, uint32_t * punSortOrder));
IL2CPP_REGISTER_METHOD(0x01679050, EVROverlayError__Enum, SetOverlayWidthInMeters, (CVROverlay * __this, uint64_t ulOverlayHandle, float fWidthInMeters));
IL2CPP_REGISTER_METHOD(0x01679080, EVROverlayError__Enum, GetOverlayWidthInMeters, (CVROverlay * __this, uint64_t ulOverlayHandle, float * pfWidthInMeters));
IL2CPP_REGISTER_METHOD(0x016790B0, EVROverlayError__Enum, SetOverlayAutoCurveDistanceRangeInMeters, (CVROverlay * __this, uint64_t ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters));
IL2CPP_REGISTER_METHOD(0x016790E0, EVROverlayError__Enum, GetOverlayAutoCurveDistanceRangeInMeters, (CVROverlay * __this, uint64_t ulOverlayHandle, float * pfMinDistanceInMeters, float * pfMaxDistanceInMeters));
IL2CPP_REGISTER_METHOD(0x01679110, EVROverlayError__Enum, SetOverlayTextureColorSpace, (CVROverlay * __this, uint64_t ulOverlayHandle, EColorSpace__Enum eTextureColorSpace));
IL2CPP_REGISTER_METHOD(0x01679140, EVROverlayError__Enum, GetOverlayTextureColorSpace, (CVROverlay * __this, uint64_t ulOverlayHandle, EColorSpace__Enum * peTextureColorSpace));
IL2CPP_REGISTER_METHOD(0x01679170, EVROverlayError__Enum, SetOverlayTextureBounds, (CVROverlay * __this, uint64_t ulOverlayHandle, VRTextureBounds_t * pOverlayTextureBounds));
IL2CPP_REGISTER_METHOD(0x016791A0, EVROverlayError__Enum, GetOverlayTextureBounds, (CVROverlay * __this, uint64_t ulOverlayHandle, VRTextureBounds_t * pOverlayTextureBounds));
IL2CPP_REGISTER_METHOD(0x016791D0, uint32_t, GetOverlayRenderModel, (CVROverlay * __this, uint64_t ulOverlayHandle, String * pchValue, uint32_t unBufferSize, HmdColor_t * pColor, EVROverlayError__Enum * pError));
IL2CPP_REGISTER_METHOD(0x01679200, EVROverlayError__Enum, SetOverlayRenderModel, (CVROverlay * __this, uint64_t ulOverlayHandle, String * pchRenderModel, HmdColor_t * pColor));
IL2CPP_REGISTER_METHOD(0x01679230, EVROverlayError__Enum, GetOverlayTransformType, (CVROverlay * __this, uint64_t ulOverlayHandle, VROverlayTransformType__Enum * peTransformType));
IL2CPP_REGISTER_METHOD(0x01679260, EVROverlayError__Enum, SetOverlayTransformAbsolute, (CVROverlay * __this, uint64_t ulOverlayHandle, ETrackingUniverseOrigin__Enum eTrackingOrigin, HmdMatrix34_t * pmatTrackingOriginToOverlayTransform));
IL2CPP_REGISTER_METHOD(0x01679290, EVROverlayError__Enum, GetOverlayTransformAbsolute, (CVROverlay * __this, uint64_t ulOverlayHandle, ETrackingUniverseOrigin__Enum * peTrackingOrigin, HmdMatrix34_t * pmatTrackingOriginToOverlayTransform));
IL2CPP_REGISTER_METHOD(0x016792C0, EVROverlayError__Enum, SetOverlayTransformTrackedDeviceRelative, (CVROverlay * __this, uint64_t ulOverlayHandle, uint32_t unTrackedDevice, HmdMatrix34_t * pmatTrackedDeviceToOverlayTransform));
IL2CPP_REGISTER_METHOD(0x016792F0, EVROverlayError__Enum, GetOverlayTransformTrackedDeviceRelative, (CVROverlay * __this, uint64_t ulOverlayHandle, uint32_t * punTrackedDevice, HmdMatrix34_t * pmatTrackedDeviceToOverlayTransform));
IL2CPP_REGISTER_METHOD(0x01679320, EVROverlayError__Enum, SetOverlayTransformTrackedDeviceComponent, (CVROverlay * __this, uint64_t ulOverlayHandle, uint32_t unDeviceIndex, String * pchComponentName));
IL2CPP_REGISTER_METHOD(0x01679350, EVROverlayError__Enum, GetOverlayTransformTrackedDeviceComponent, (CVROverlay * __this, uint64_t ulOverlayHandle, uint32_t * punDeviceIndex, String * pchComponentName, uint32_t unComponentNameSize));
IL2CPP_REGISTER_METHOD(0x01679380, EVROverlayError__Enum, GetOverlayTransformOverlayRelative, (CVROverlay * __this, uint64_t ulOverlayHandle, uint64_t * ulOverlayHandleParent, HmdMatrix34_t * pmatParentOverlayToOverlayTransform));
IL2CPP_REGISTER_METHOD(0x016793B0, EVROverlayError__Enum, SetOverlayTransformOverlayRelative, (CVROverlay * __this, uint64_t ulOverlayHandle, uint64_t ulOverlayHandleParent, HmdMatrix34_t * pmatParentOverlayToOverlayTransform));
IL2CPP_REGISTER_METHOD(0x016793E0, EVROverlayError__Enum, ShowOverlay, (CVROverlay * __this, uint64_t ulOverlayHandle));
IL2CPP_REGISTER_METHOD(0x01679410, EVROverlayError__Enum, HideOverlay, (CVROverlay * __this, uint64_t ulOverlayHandle));
IL2CPP_REGISTER_METHOD(0x01679440, bool, IsOverlayVisible, (CVROverlay * __this, uint64_t ulOverlayHandle));
IL2CPP_REGISTER_METHOD(0x01679470, EVROverlayError__Enum, GetTransformForOverlayCoordinates, (CVROverlay * __this, uint64_t ulOverlayHandle, ETrackingUniverseOrigin__Enum eTrackingOrigin, HmdVector2_t coordinatesInOverlay, HmdMatrix34_t * pmatTransform));
IL2CPP_REGISTER_METHOD(0x016794A0, bool, PollNextOverlayEvent, (CVROverlay * __this, uint64_t ulOverlayHandle, VREvent_t * pEvent, uint32_t uncbVREvent));
IL2CPP_REGISTER_METHOD(0x01679750, EVROverlayError__Enum, GetOverlayInputMethod, (CVROverlay * __this, uint64_t ulOverlayHandle, VROverlayInputMethod__Enum * peInputMethod));
IL2CPP_REGISTER_METHOD(0x01679780, EVROverlayError__Enum, SetOverlayInputMethod, (CVROverlay * __this, uint64_t ulOverlayHandle, VROverlayInputMethod__Enum eInputMethod));
IL2CPP_REGISTER_METHOD(0x016797B0, EVROverlayError__Enum, GetOverlayMouseScale, (CVROverlay * __this, uint64_t ulOverlayHandle, HmdVector2_t * pvecMouseScale));
IL2CPP_REGISTER_METHOD(0x016797E0, EVROverlayError__Enum, SetOverlayMouseScale, (CVROverlay * __this, uint64_t ulOverlayHandle, HmdVector2_t * pvecMouseScale));
IL2CPP_REGISTER_METHOD(0x01679810, bool, ComputeOverlayIntersection, (CVROverlay * __this, uint64_t ulOverlayHandle, VROverlayIntersectionParams_t * pParams, VROverlayIntersectionResults_t * pResults));
IL2CPP_REGISTER_METHOD(0x01679840, bool, HandleControllerOverlayInteractionAsMouse, (CVROverlay * __this, uint64_t ulOverlayHandle, uint32_t unControllerDeviceIndex));
IL2CPP_REGISTER_METHOD(0x01679870, bool, IsHoverTargetOverlay, (CVROverlay * __this, uint64_t ulOverlayHandle));
IL2CPP_REGISTER_METHOD(0x016798A0, uint64_t, GetGamepadFocusOverlay, (CVROverlay * __this));
IL2CPP_REGISTER_METHOD(0x016798D0, EVROverlayError__Enum, SetGamepadFocusOverlay, (CVROverlay * __this, uint64_t ulNewFocusOverlay));
IL2CPP_REGISTER_METHOD(0x01679900, EVROverlayError__Enum, SetOverlayNeighbor, (CVROverlay * __this, EOverlayDirection__Enum eDirection, uint64_t ulFrom, uint64_t ulTo));
IL2CPP_REGISTER_METHOD(0x01679930, EVROverlayError__Enum, MoveGamepadFocusToNeighbor, (CVROverlay * __this, EOverlayDirection__Enum eDirection, uint64_t ulFrom));
IL2CPP_REGISTER_METHOD(0x01679960, EVROverlayError__Enum, SetOverlayTexture, (CVROverlay * __this, uint64_t ulOverlayHandle, Texture_t * pTexture));
IL2CPP_REGISTER_METHOD(0x01679990, EVROverlayError__Enum, ClearOverlayTexture, (CVROverlay * __this, uint64_t ulOverlayHandle));
IL2CPP_REGISTER_METHOD(0x016799C0, EVROverlayError__Enum, SetOverlayRaw, (CVROverlay * __this, uint64_t ulOverlayHandle, void * pvBuffer, uint32_t unWidth, uint32_t unHeight, uint32_t unDepth));
IL2CPP_REGISTER_METHOD(0x016799F0, EVROverlayError__Enum, SetOverlayFromFile, (CVROverlay * __this, uint64_t ulOverlayHandle, String * pchFilePath));
IL2CPP_REGISTER_METHOD(0x01679A20, EVROverlayError__Enum, GetOverlayTexture, (CVROverlay * __this, uint64_t ulOverlayHandle, void * * pNativeTextureHandle, void * pNativeTextureRef, uint32_t * pWidth, uint32_t * pHeight, uint32_t * pNativeFormat, ETextureType__Enum * pAPIType, EColorSpace__Enum * pColorSpace, VRTextureBounds_t * pTextureBounds));
IL2CPP_REGISTER_METHOD(0x01679A70, EVROverlayError__Enum, ReleaseNativeOverlayHandle, (CVROverlay * __this, uint64_t ulOverlayHandle, void * pNativeTextureHandle));
IL2CPP_REGISTER_METHOD(0x01679AA0, EVROverlayError__Enum, GetOverlayTextureSize, (CVROverlay * __this, uint64_t ulOverlayHandle, uint32_t * pWidth, uint32_t * pHeight));
IL2CPP_REGISTER_METHOD(0x01679AD0, EVROverlayError__Enum, CreateDashboardOverlay, (CVROverlay * __this, String * pchOverlayKey, String * pchOverlayFriendlyName, uint64_t * pMainHandle, uint64_t * pThumbnailHandle));
IL2CPP_REGISTER_METHOD(0x01679B10, bool, IsDashboardVisible, (CVROverlay * __this));
IL2CPP_REGISTER_METHOD(0x01679B40, bool, IsActiveDashboardOverlay, (CVROverlay * __this, uint64_t ulOverlayHandle));
IL2CPP_REGISTER_METHOD(0x01679B70, EVROverlayError__Enum, SetDashboardOverlaySceneProcess, (CVROverlay * __this, uint64_t ulOverlayHandle, uint32_t unProcessId));
IL2CPP_REGISTER_METHOD(0x01679BA0, EVROverlayError__Enum, GetDashboardOverlaySceneProcess, (CVROverlay * __this, uint64_t ulOverlayHandle, uint32_t * punProcessId));
IL2CPP_REGISTER_METHOD(0x01679BD0, void, ShowDashboard, (CVROverlay * __this, String * pchOverlayToShow));
IL2CPP_REGISTER_METHOD(0x01679C00, uint32_t, GetPrimaryDashboardDevice, (CVROverlay * __this));
IL2CPP_REGISTER_METHOD(0x01679C30, EVROverlayError__Enum, ShowKeyboard, (CVROverlay * __this, int32_t eInputMode, int32_t eLineInputMode, String * pchDescription, uint32_t unCharMax, String * pchExistingText, bool bUseMinimalMode, uint64_t uUserValue));
IL2CPP_REGISTER_METHOD(0x01679C70, EVROverlayError__Enum, ShowKeyboardForOverlay, (CVROverlay * __this, uint64_t ulOverlayHandle, int32_t eInputMode, int32_t eLineInputMode, String * pchDescription, uint32_t unCharMax, String * pchExistingText, bool bUseMinimalMode, uint64_t uUserValue));
IL2CPP_REGISTER_METHOD(0x01679CB0, uint32_t, GetKeyboardText, (CVROverlay * __this, StringBuilder * pchText, uint32_t cchText));
IL2CPP_REGISTER_METHOD(0x01679CE0, void, HideKeyboard, (CVROverlay * __this));
IL2CPP_REGISTER_METHOD(0x01679D10, void, SetKeyboardTransformAbsolute, (CVROverlay * __this, ETrackingUniverseOrigin__Enum eTrackingOrigin, HmdMatrix34_t * pmatTrackingOriginToKeyboardTransform));
IL2CPP_REGISTER_METHOD(0x01679D40, void, SetKeyboardPositionForOverlay, (CVROverlay * __this, uint64_t ulOverlayHandle, HmdRect2_t avoidRect));
IL2CPP_REGISTER_METHOD(0x01679D80, EVROverlayError__Enum, SetOverlayIntersectionMask, (CVROverlay * __this, uint64_t ulOverlayHandle, VROverlayIntersectionMaskPrimitive_t * pMaskPrimitives, uint32_t unNumMaskPrimitives, uint32_t unPrimitiveSize));
IL2CPP_REGISTER_METHOD(0x01679DB0, EVROverlayError__Enum, GetOverlayFlags, (CVROverlay * __this, uint64_t ulOverlayHandle, uint32_t * pFlags));
IL2CPP_REGISTER_METHOD(0x01679DE0, VRMessageOverlayResponse__Enum, ShowMessageOverlay, (CVROverlay * __this, String * pchText, String * pchCaption, String * pchButton0Text, String * pchButton1Text, String * pchButton2Text, String * pchButton3Text));
IL2CPP_REGISTER_METHOD(0x01679E10, void, CloseMessageOverlay, (CVROverlay * __this));
}
