using namespace app;

namespace app::methods::System::Net::FtpWebRequest {
IL2CPP_REGISTER_METHOD(0x01D2EF90, void, __ctor, (FtpWebRequest * __this, Uri * uri));
IL2CPP_REGISTER_METHOD(0x01D2F150, Exception *, GetMustImplement, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01D2F290, X509CertificateCollection_1 *, get_ClientCertificates, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHODINFO(0x04787E90, FtpWebRequest_get_ClientCertificates__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D2F330, void, set_ClientCertificates, (FtpWebRequest * __this, X509CertificateCollection_1 * value));
IL2CPP_REGISTER_METHODINFO(0x04767698, FtpWebRequest_set_ClientCertificates__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D2F3D0, String *, get_ConnectionGroupName, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHODINFO(0x04746810, FtpWebRequest_get_ConnectionGroupName__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D2F470, void, set_ConnectionGroupName, (FtpWebRequest * __this, String * value));
IL2CPP_REGISTER_METHODINFO(0x047233E8, FtpWebRequest_set_ConnectionGroupName__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D2F510, String *, get_ContentType, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHODINFO(0x0473D938, FtpWebRequest_get_ContentType__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D2F560, void, set_ContentType, (FtpWebRequest * __this, String * value));
IL2CPP_REGISTER_METHODINFO(0x047382D8, FtpWebRequest_set_ContentType__MethodInfo);
IL2CPP_REGISTER_METHOD(0x00420EE0, int64_t, get_ContentLength, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, set_ContentLength, (FtpWebRequest * __this, int64_t value));
IL2CPP_REGISTER_METHOD(0x002FBC80, int64_t, get_ContentOffset, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D2F5B0, void, set_ContentOffset, (FtpWebRequest * __this, int64_t value));
IL2CPP_REGISTER_METHODINFO(0x0476EB58, FtpWebRequest_set_ContentOffset__MethodInfo);
IL2CPP_REGISTER_METHOD(0x002FBBC0, ICredentials *, get_Credentials, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D2F670, void, set_Credentials, (FtpWebRequest * __this, ICredentials * value));
IL2CPP_REGISTER_METHODINFO(0x04773748, FtpWebRequest_set_Credentials__MethodInfo);
IL2CPP_REGISTER_METHOD(0x005035A0, bool, get_EnableSsl, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D2F7D0, void, set_EnableSsl, (FtpWebRequest * __this, bool value));
IL2CPP_REGISTER_METHOD(0x01D2F800, WebHeaderCollection *, get_Headers, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHODINFO(0x04764118, FtpWebRequest_get_Headers__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D2F8A0, void, set_Headers, (FtpWebRequest * __this, WebHeaderCollection * value));
IL2CPP_REGISTER_METHODINFO(0x0474E2A8, FtpWebRequest_set_Headers__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D2F940, bool, get_KeepAlive, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D2F950, void, set_KeepAlive, (FtpWebRequest * __this, bool value));
IL2CPP_REGISTER_METHOD(0x002FBCC0, String *, get_Method, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D2F960, void, set_Method, (FtpWebRequest * __this, String * value));
IL2CPP_REGISTER_METHODINFO(0x04757BC8, FtpWebRequest_set_Method__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D2FB80, bool, get_PreAuthenticate, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHODINFO(0x0474C098, FtpWebRequest_get_PreAuthenticate__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D2FBD0, void, set_PreAuthenticate, (FtpWebRequest * __this, bool value));
IL2CPP_REGISTER_METHODINFO(0x047701C0, FtpWebRequest_set_PreAuthenticate__MethodInfo);
IL2CPP_REGISTER_METHOD(0x002FBC40, IWebProxy *, get_Proxy, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D2FC20, void, set_Proxy, (FtpWebRequest * __this, IWebProxy * value));
IL2CPP_REGISTER_METHOD(0x007007F0, int32_t, get_ReadWriteTimeout, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D2FC50, void, set_ReadWriteTimeout, (FtpWebRequest * __this, int32_t value));
IL2CPP_REGISTER_METHODINFO(0x04759BB0, FtpWebRequest_set_ReadWriteTimeout__MethodInfo);
IL2CPP_REGISTER_METHOD(0x002FBCE0, String *, get_RenameTo, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D2FD10, void, set_RenameTo, (FtpWebRequest * __this, String * value));
IL2CPP_REGISTER_METHODINFO(0x0472A878, FtpWebRequest_set_RenameTo__MethodInfo);
IL2CPP_REGISTER_METHOD(0x002FB9B0, Uri *, get_RequestUri, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D2FDF0, ServicePoint *, get_ServicePoint, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D2FE00, bool, get_UsePassive, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D2FE10, void, set_UsePassive, (FtpWebRequest * __this, bool value));
IL2CPP_REGISTER_METHOD(0x01D2FE40, bool, get_UseDefaultCredentials, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHODINFO(0x04771618, FtpWebRequest_get_UseDefaultCredentials__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D2FEE0, void, set_UseDefaultCredentials, (FtpWebRequest * __this, bool value));
IL2CPP_REGISTER_METHODINFO(0x0475B6F8, FtpWebRequest_set_UseDefaultCredentials__MethodInfo);
IL2CPP_REGISTER_METHOD(0x006C14C0, bool, get_UseBinary, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D2FF80, void, set_UseBinary, (FtpWebRequest * __this, bool value));
IL2CPP_REGISTER_METHOD(0x00736620, int32_t, get_Timeout, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D2FFB0, void, set_Timeout, (FtpWebRequest * __this, int32_t value));
IL2CPP_REGISTER_METHODINFO(0x04752470, FtpWebRequest_set_Timeout__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D30070, String *, get_DataType, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D30100, FtpWebRequest_RequestState__Enum, get_State, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D301F0, void, set_State, (FtpWebRequest * __this, FtpWebRequest_RequestState__Enum value));
IL2CPP_REGISTER_METHOD(0x01D303A0, void, Abort, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D30670, IAsyncResult *, BeginGetResponse, (FtpWebRequest * __this, AsyncCallback * callback, Object * state));
IL2CPP_REGISTER_METHODINFO(0x0470AF08, FtpWebRequest_BeginGetResponse__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D30B60, WebResponse *, EndGetResponse, (FtpWebRequest * __this, IAsyncResult * asyncResult));
IL2CPP_REGISTER_METHODINFO(0x0473E3E0, FtpWebRequest_EndGetResponse__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D30D50, WebResponse *, GetResponse, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D30D90, IAsyncResult *, BeginGetRequestStream, (FtpWebRequest * __this, AsyncCallback * callback, Object * state));
IL2CPP_REGISTER_METHODINFO(0x04773BE0, FtpWebRequest_BeginGetRequestStream__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D312C0, Stream *, EndGetRequestStream, (FtpWebRequest * __this, IAsyncResult * asyncResult));
IL2CPP_REGISTER_METHODINFO(0x0473F3A8, FtpWebRequest_EndGetRequestStream__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D31520, Stream *, GetRequestStream, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D31560, ServicePoint *, GetServicePoint, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D31630, void, ResolveHost, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHODINFO(0x047195D0, FtpWebRequest_ResolveHost__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D317B0, void, ProcessRequest, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHODINFO(0x04752918, FtpWebRequest_ProcessRequest__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D31B70, void, SetType, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHODINFO(0x04734C40, FtpWebRequest_SetType__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D31D30, String *, GetRemoteFolderPath, (FtpWebRequest * __this, Uri * uri));
IL2CPP_REGISTER_METHOD(0x01D32290, void, CWDAndSetFileName, (FtpWebRequest * __this, Uri * uri));
IL2CPP_REGISTER_METHODINFO(0x04751780, FtpWebRequest_CWDAndSetFileName__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D324B0, void, ProcessMethod, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHODINFO(0x0470EF58, FtpWebRequest_ProcessMethod__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D32BE0, void, CloseControlConnection, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D32CB0, void, CloseDataConnection, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D32CE0, void, CloseConnection, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D32DD0, void, ProcessSimpleMethod, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHODINFO(0x0472F818, FtpWebRequest_ProcessSimpleMethod__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D33570, void, UploadData, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D33720, void, DownloadData, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D338C0, void, CheckRequestStarted, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHODINFO(0x0474C3C0, FtpWebRequest_CheckRequestStarted__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D33970, void, OpenControlConnection, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHODINFO(0x0477F0D0, FtpWebRequest_OpenControlConnection__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D34140, String *, GetInitialPath, (FtpStatus * status));
IL2CPP_REGISTER_METHODINFO(0x047012D8, FtpWebRequest_GetInitialPath__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D34390, Socket *, SetupPassiveConnection, (FtpWebRequest * __this, String * statusDescription, bool ipv6));
IL2CPP_REGISTER_METHODINFO(0x0473FEB8, FtpWebRequest_SetupPassiveConnection__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D34720, int32_t, GetPortV4, (FtpWebRequest * __this, String * responseString));
IL2CPP_REGISTER_METHODINFO(0x047799F0, FtpWebRequest_GetPortV4__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D34A10, int32_t, GetPortV6, (FtpWebRequest * __this, String * responseString));
IL2CPP_REGISTER_METHODINFO(0x04718958, FtpWebRequest_GetPortV6__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D34CD0, String *, FormatAddress, (FtpWebRequest * __this, IPAddress * address, int32_t Port));
IL2CPP_REGISTER_METHOD(0x01D35170, String *, FormatAddressV6, (FtpWebRequest * __this, IPAddress * address, int32_t port));
IL2CPP_REGISTER_METHOD(0x01D35380, Exception *, CreateExceptionFromResponse, (FtpWebRequest * __this, FtpStatus * status));
IL2CPP_REGISTER_METHOD(0x01D35610, void, SetTransferCompleted, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D356B0, void, OperationCompleted, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D356D0, void, SetCompleteWithError, (FtpWebRequest * __this, Exception * exc));
IL2CPP_REGISTER_METHOD(0x01D35700, Socket *, InitDataConnection, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHODINFO(0x047180D0, FtpWebRequest_InitDataConnection__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D35C60, void, OpenDataConnection, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHODINFO(0x04726328, FtpWebRequest_OpenDataConnection__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D361E0, void, Authenticate, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHODINFO(0x04716450, FtpWebRequest_Authenticate__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D369A0, FtpStatus *, SendCommand, (FtpWebRequest * __this, String * command, String__Array * parameters));
IL2CPP_REGISTER_METHOD(0x01D369C0, FtpStatus *, SendCommand, (FtpWebRequest * __this, bool waitResponse, String * command, String__Array * parameters));
IL2CPP_REGISTER_METHOD(0x01D36C50, FtpStatus *, ServiceNotAvailable, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01D36DA0, FtpStatus *, GetResponseStatus, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D37170, void, InitiateSecureConnection, (FtpWebRequest * __this, Stream * * stream));
IL2CPP_REGISTER_METHODINFO(0x04798CA8, FtpWebRequest_InitiateSecureConnection__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D372C0, bool, ChangeToSSLSocket, (FtpWebRequest * __this, Stream * * stream));
IL2CPP_REGISTER_METHOD(0x01D37440, bool, InFinalState, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D37490, bool, InProgress, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHOD(0x01D374E0, void, CheckIfAborted, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHODINFO(0x04795FC0, FtpWebRequest_CheckIfAborted__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D375A0, void, CheckFinalState, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHODINFO(0x04751EB8, FtpWebRequest_CheckFinalState__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01D37670, void, __cctor, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01D37BB0, void, __ctor, (FtpWebRequest * __this));
IL2CPP_REGISTER_METHODINFO(0x04775B18, FtpWebRequest__ctor_1__MethodInfo);
}
