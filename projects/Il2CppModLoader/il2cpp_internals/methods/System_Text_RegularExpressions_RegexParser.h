using namespace app;

namespace app::methods::System::Text::RegularExpressions::RegexParser {
IL2CPP_REGISTER_METHOD(0x02597B50, RegexTree *, Parse, (String * re, RegexOptions__Enum op));
IL2CPP_REGISTER_METHOD(0x02597F70, RegexReplacement *, ParseReplacement, (String * rep, Hashtable * caps, int32_t capsize, Hashtable * capnames, RegexOptions__Enum op));
IL2CPP_REGISTER_METHOD(0x02598260, String *, Escape, (String * input));
IL2CPP_REGISTER_METHOD(0x02598540, void, __ctor, (RegexParser * __this, CultureInfo * culture));
IL2CPP_REGISTER_METHOD(0x02598770, void, SetPattern, (RegexParser * __this, String * Re));
IL2CPP_REGISTER_METHOD(0x02598830, void, Reset, (RegexParser * __this, RegexOptions__Enum topopts));
IL2CPP_REGISTER_METHOD(0x02598970, RegexNode *, ScanRegex, (RegexParser * __this));
IL2CPP_REGISTER_METHODINFO(0x04788888, RegexParser_ScanRegex__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02599350, RegexNode *, ScanReplacement, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x02599590, RegexCharClass *, ScanCharClass, (RegexParser * __this, bool caseInsensitive));
IL2CPP_REGISTER_METHOD(0x025995A0, RegexCharClass *, ScanCharClass, (RegexParser * __this, bool caseInsensitive, bool scanOnly));
IL2CPP_REGISTER_METHODINFO(0x0474EAA8, RegexParser_ScanCharClass_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0259A020, RegexNode *, ScanGroupOpen, (RegexParser * __this));
IL2CPP_REGISTER_METHODINFO(0x047904F0, RegexParser_ScanGroupOpen__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0259B240, void, ScanBlank, (RegexParser * __this));
IL2CPP_REGISTER_METHODINFO(0x0474BA48, RegexParser_ScanBlank__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0259B740, RegexNode *, ScanBackslash, (RegexParser * __this));
IL2CPP_REGISTER_METHODINFO(0x04712A28, RegexParser_ScanBackslash__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0259C4C0, RegexNode *, ScanBasicBackslash, (RegexParser * __this));
IL2CPP_REGISTER_METHODINFO(0x04762A30, RegexParser_ScanBasicBackslash__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0259CEB0, RegexNode *, ScanDollar, (RegexParser * __this));
IL2CPP_REGISTER_METHODINFO(0x04744220, RegexParser_ScanDollar__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0259D670, String *, ScanCapname, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x0259D780, uint16_t, ScanOctal, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x0259D830, int32_t, ScanDecimal, (RegexParser * __this));
IL2CPP_REGISTER_METHODINFO(0x04732328, RegexParser_ScanDecimal__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0259D950, uint16_t, ScanHex, (RegexParser * __this, int32_t c));
IL2CPP_REGISTER_METHODINFO(0x0473E688, RegexParser_ScanHex__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0259DAB0, int32_t, HexDigit, (uint16_t ch));
IL2CPP_REGISTER_METHOD(0x0259DAE0, uint16_t, ScanControl, (RegexParser * __this));
IL2CPP_REGISTER_METHODINFO(0x0475D8A8, RegexParser_ScanControl__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0259DC00, bool, IsOnlyTopOption, (RegexParser * __this, RegexOptions__Enum option));
IL2CPP_REGISTER_METHOD(0x0259DC20, void, ScanOptions, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x0259DD70, uint16_t, ScanCharEscape, (RegexParser * __this));
IL2CPP_REGISTER_METHODINFO(0x04709DB0, RegexParser_ScanCharEscape__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0259E1F0, String *, ParseProperty, (RegexParser * __this));
IL2CPP_REGISTER_METHODINFO(0x0474F688, RegexParser_ParseProperty__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0259E420, int32_t, TypeFromCode, (RegexParser * __this, uint16_t ch));
IL2CPP_REGISTER_METHOD(0x0259E4A0, RegexOptions__Enum, OptionFromCode, (uint16_t ch));
IL2CPP_REGISTER_METHOD(0x0259E540, void, CountCaptures, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x0259E970, void, NoteCaptureSlot, (RegexParser * __this, int32_t i, int32_t pos));
IL2CPP_REGISTER_METHOD(0x0259EAC0, void, NoteCaptureName, (RegexParser * __this, String * name, int32_t pos));
IL2CPP_REGISTER_METHOD(0x0259ED80, void, NoteCaptures, (RegexParser * __this, Hashtable * caps, int32_t capsize, Hashtable * capnames));
IL2CPP_REGISTER_METHOD(0x0259ED90, void, AssignNameSlots, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x0259F880, int32_t, CaptureSlotFromName, (RegexParser * __this, String * capname));
IL2CPP_REGISTER_METHOD(0x0259F950, bool, IsCaptureSlot, (RegexParser * __this, int32_t i));
IL2CPP_REGISTER_METHOD(0x0259FA40, bool, IsCaptureName, (RegexParser * __this, String * capname));
IL2CPP_REGISTER_METHOD(0x0259FA60, bool, UseOptionN, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x0259FA70, bool, UseOptionI, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x0259FA80, bool, UseOptionM, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x0259FA90, bool, UseOptionS, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x0259FAA0, bool, UseOptionX, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x0259FAB0, bool, UseOptionE, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x0259FAC0, bool, IsSpecial, (uint16_t ch));
IL2CPP_REGISTER_METHOD(0x0259FBA0, bool, IsStopperX, (uint16_t ch));
IL2CPP_REGISTER_METHOD(0x0259FC80, bool, IsQuantifier, (uint16_t ch));
IL2CPP_REGISTER_METHOD(0x0259FD60, bool, IsTrueQuantifier, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x0259FF60, bool, IsSpace, (uint16_t ch));
IL2CPP_REGISTER_METHOD(0x025A0040, bool, IsMetachar, (uint16_t ch));
IL2CPP_REGISTER_METHOD(0x025A0120, void, AddConcatenate, (RegexParser * __this, int32_t pos, int32_t cch, bool isReplacement));
IL2CPP_REGISTER_METHOD(0x025A0590, void, PushGroup, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x025A05F0, void, PopGroup, (RegexParser * __this));
IL2CPP_REGISTER_METHODINFO(0x0477B980, RegexParser_PopGroup__MethodInfo);
IL2CPP_REGISTER_METHOD(0x0150AEB0, bool, EmptyStack, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x025A0720, void, StartGroup, (RegexParser * __this, RegexNode * openGroup));
IL2CPP_REGISTER_METHOD(0x025A0940, void, AddAlternate, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x025A0B30, void, AddConcatenate, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x025A0B70, void, AddConcatenate, (RegexParser * __this, bool lazy, int32_t min, int32_t max));
IL2CPP_REGISTER_METHOD(0x002FB990, RegexNode *, Unit, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x025A0BD0, void, AddUnitOne, (RegexParser * __this, uint16_t ch));
IL2CPP_REGISTER_METHOD(0x025A0D70, void, AddUnitNotone, (RegexParser * __this, uint16_t ch));
IL2CPP_REGISTER_METHOD(0x025A0F10, void, AddUnitSet, (RegexParser * __this, String * cc));
IL2CPP_REGISTER_METHOD(0x002FB9A0, void, AddUnitNode, (RegexParser * __this, RegexNode * node));
IL2CPP_REGISTER_METHOD(0x025A1070, void, AddUnitType, (RegexParser * __this, int32_t type));
IL2CPP_REGISTER_METHOD(0x025A11D0, void, AddGroup, (RegexParser * __this));
IL2CPP_REGISTER_METHODINFO(0x04771550, RegexParser_AddGroup__MethodInfo);
IL2CPP_REGISTER_METHOD(0x025A13A0, void, PushOptions, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x025A1440, void, PopOptions, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x025A1500, bool, EmptyOptionsStack, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x025A1590, void, PopKeepOptions, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x025A1630, ArgumentException *, MakeException, (RegexParser * __this, String * message));
IL2CPP_REGISTER_METHOD(0x004E57A0, int32_t, Textpos, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x004E57B0, void, Textto, (RegexParser * __this, int32_t pos));
IL2CPP_REGISTER_METHOD(0x025A1860, uint16_t, MoveRightGetChar, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x025A1890, void, MoveRight, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x025A18A0, void, MoveRight, (RegexParser * __this, int32_t i));
IL2CPP_REGISTER_METHOD(0x00F01BE0, void, MoveLeft, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x025A18B0, uint16_t, CharAt, (RegexParser * __this, int32_t i));
IL2CPP_REGISTER_METHOD(0x025A18D0, uint16_t, RightChar, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x025A1900, uint16_t, RightChar, (RegexParser * __this, int32_t i));
IL2CPP_REGISTER_METHOD(0x025A1930, int32_t, CharsRight, (RegexParser * __this));
IL2CPP_REGISTER_METHOD(0x025A1950, void, __cctor, (MethodInfo * method));
}
