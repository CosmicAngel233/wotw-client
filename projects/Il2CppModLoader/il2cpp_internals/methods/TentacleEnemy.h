#include <interception_macros.h>

namespace app::methods::TentacleEnemy {
IL2CPP_REGISTER_METHOD(0x00CEF030, TentacleEnemy_Joint *, get_HeadJoint, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CEF0D0, GameObject *, get_HeadGameObject, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CEF160, TentacleEnemy_Joint *, get_NeckJoint, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CEF200, GameObject *, get_NeckGameObject, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CEF310, float, get_CurrentLength, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CEF510, Vector3, get_HeadOrientation, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CEF740, bool, get_CanAttack, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CEF770, bool, get_CanSpitAttack, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CEF7A0, void, Awake, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CEF940, void, Start, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CF0860, void, Update, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CF0870, void, UpdateGame, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CF11A0, void, UpdateEditor, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CF1610, void, FixedUpdate, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CF1E20, void, OnHeadColliderEnter, (TentacleEnemy * __this, Collider * collider));
IL2CPP_REGISTER_METHODINFO(0x04776228, TentacleEnemy_OnHeadColliderEnter__MethodInfo);
IL2CPP_REGISTER_METHOD(0x00CF1E60, void, SetupPhysicalBody, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CF2790, void, UpdateHorizontalPull, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CF2B20, void, UpdateWiggle, (TentacleEnemy * __this, float dt));
IL2CPP_REGISTER_METHOD(0x00CF3310, void, WiggleHead, (TentacleEnemy * __this, TentacleEnemy_WiggleData * settings));
IL2CPP_REGISTER_METHOD(0x00CF3900, void, UpdateRecoil, (TentacleEnemy * __this, float dt));
IL2CPP_REGISTER_METHOD(0x00CF3990, void, SeekTarget, (TentacleEnemy * __this, Vector3 target, float force));
IL2CPP_REGISTER_METHOD(0x00CF3C00, BehaviourTreeStatus__Enum, OnReset, (TentacleEnemy * __this, TickData t));
IL2CPP_REGISTER_METHODINFO(0x04756CA8, TentacleEnemy_OnReset__MethodInfo);
IL2CPP_REGISTER_METHOD(0x00CF3D00, void, MakeSmoothCurve2, (TentacleEnemy * __this, Vector3__Array * input, Vector3__Array * * output, int32_t iterations));
IL2CPP_REGISTER_METHOD(0x00CF41A0, Vector3__Array *, MakeSmoothCurve, (Vector3__Array * arrayToCurve, float smoothness));
IL2CPP_REGISTER_METHOD(0x00CF47C0, void, OnJointReceiveDamage, (TentacleEnemy * __this, Damage * damage, int32_t index));
IL2CPP_REGISTER_METHODINFO(0x04789D50, TentacleEnemy_OnJointReceiveDamage__MethodInfo);
IL2CPP_REGISTER_METHOD(0x00CF5070, void, OnDeath, (TentacleEnemy * __this, Damage * damage));
IL2CPP_REGISTER_METHODINFO(0x0476B140, TentacleEnemy_OnDeath__MethodInfo);
IL2CPP_REGISTER_METHOD(0x00CF58B0, void, SetLayerRecusive, (TentacleEnemy * __this, GameObject * gobj, int32_t layer));
IL2CPP_REGISTER_METHOD(0x00CF5AE0, void, ApplyHeadForce, (TentacleEnemy * __this, Vector3 force, float diminishSpeed));
IL2CPP_REGISTER_METHOD(0x00CF5D00, void, ApplyRecoil, (TentacleEnemy * __this, Vector3 force, float diminishRate, float duration));
IL2CPP_REGISTER_METHOD(0x00CF5D50, void, OnFreeze, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CF5E40, void, OnUnfreeze, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CF5F30, void, DisableColliders, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CF6060, void, EnableColliders, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CF6190, void, EnableHeadColliders, (TentacleEnemy * __this, bool enable));
IL2CPP_REGISTER_METHOD(0x00CF6310, void, EnableBodyColliders, (TentacleEnemy * __this, bool enable));
IL2CPP_REGISTER_METHOD(0x00CF6490, void, OnEnterBash, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CF64B0, void, __ctor, (TentacleEnemy * __this));
IL2CPP_REGISTER_METHOD(0x00CF6AB0, bool, _Start_b__81_0, (TentacleEnemy * __this, TickData t));
IL2CPP_REGISTER_METHODINFO(0x04799688, TentacleEnemy__Start_b__81_0__MethodInfo);
IL2CPP_REGISTER_METHOD(0x00CF6AE0, bool, _Start_b__81_1, (TentacleEnemy * __this, TickData t));
IL2CPP_REGISTER_METHODINFO(0x047879D0, TentacleEnemy__Start_b__81_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x00CF6B20, bool, _Start_b__81_2, (TentacleEnemy * __this, TickData t));
IL2CPP_REGISTER_METHODINFO(0x04754330, TentacleEnemy__Start_b__81_2__MethodInfo);
IL2CPP_REGISTER_METHOD(0x00CF6B30, bool, _Start_b__81_3, (TentacleEnemy * __this, TickData t));
IL2CPP_REGISTER_METHODINFO(0x0476DA98, TentacleEnemy__Start_b__81_3__MethodInfo);
IL2CPP_REGISTER_METHOD(0x00CF6B70, bool, _Start_b__81_4, (TentacleEnemy * __this, TickData t));
IL2CPP_REGISTER_METHODINFO(0x04786C48, TentacleEnemy__Start_b__81_4__MethodInfo);
IL2CPP_REGISTER_METHOD(0x00CF6BE0, bool, _Start_b__81_5, (TentacleEnemy * __this, TickData t));
IL2CPP_REGISTER_METHODINFO(0x0476AED0, TentacleEnemy__Start_b__81_5__MethodInfo);
}
