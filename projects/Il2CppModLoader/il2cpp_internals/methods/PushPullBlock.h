#include <interception_macros.h>

namespace app::methods::PushPullBlock {
IL2CPP_REGISTER_METHOD(0x00E80480, void, ResetStatics, ());
IL2CPP_REGISTER_METHOD(0x00417920, int32_t, get_SpiritFlamePriority, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00CA3850, float, get_OriDistanceFromAttackable, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00CA3860, float, get_SpiritFlameRange, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x005FF510, Vector3, get_Position, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, CanBeStomped, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, CanBeChargeFlamed, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, CanBeChargeDashed, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, CanBeGrenaded, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, IsDead, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00B58E00, bool, CanBeBashed, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, CanBeSpiritFlamed, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, IsStompBouncable, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, CanBeLevelUpBlasted, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E80550, bool, IsInAir, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, CanBeSpiritSlashed, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, CanBeHeavySpiritSlashed, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, CanBeSpiritLeashed, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, CanBeHomingMissiled, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, CanBeTrapped, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, CanBeSpiritSpeared, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, CanBeHitByBow, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, CanBeHitByHammerHandle, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, CanBeHitByMelee, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00601090, bool, CanBeTeleportedByBeacon, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, CanBeGlowed, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E80820, void, OnBashHighlight, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E80910, void, OnBashDehighlight, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x0065B580, int32_t, get_BashPriority, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E80A00, void, OnEnterBash, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, CountsTowardsPowerOfLightAchievement, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E80AE0, void, OnRecieveDamage, (PushPullBlock * __this, Damage * damage));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, get_IsGrabbable, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x009DA600, bool, get_IsGrabbed, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x009DA610, void, set_IsGrabbed, (PushPullBlock * __this, bool value));
IL2CPP_REGISTER_METHOD(0x00E80D60, void, OnPushOrPull, (PushPullBlock * __this, PlatformMovement * platformMovement));
IL2CPP_REGISTER_METHOD(0x00E81070, void, OnReleased, (PushPullBlock * __this, PlatformMovement * platformMovement));
IL2CPP_REGISTER_METHOD(0x00E813D0, void, OnHighlight, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E814F0, void, OnDehighlight, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E81610, void, OnGrabbed, (PushPullBlock * __this, PlatformMovement * platformMovement));
IL2CPP_REGISTER_METHOD(0x00849490, float, PushableSpeedRatio, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x005FF510, Vector3, GetPosition, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x005FF5A0, void, SetPosition, (PushPullBlock * __this, Vector3 position));
IL2CPP_REGISTER_METHOD(0x002FB9B0, Rigidbody *, GetRigidbody, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, CountsTowardsSuperJumpAchievement, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E81650, bool, get_IsSuspended, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E81660, void, set_IsSuspended, (PushPullBlock * __this, bool value));
IL2CPP_REGISTER_METHOD(0x006515B0, SuspendableMask__Enum, get_Mask, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E81780, void, set_Mask, (PushPullBlock * __this, SuspendableMask__Enum value));
IL2CPP_REGISTER_METHOD(0x00417920, int32_t, get_HeavySpiritSlashPriority, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00417920, int32_t, get_SpiritSlashPriority, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E81840, void, OnEnable, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E81950, void, OnDisable, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E81AA0, bool, get_ShouldRegisterWithSuspensionManager, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E81AB0, void, Awake, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E81E70, void, OnDestroy, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E81F40, void, Start, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E820A0, void, UpdatePlayerCollision, (PushPullBlock * __this, bool shouldIgnore));
IL2CPP_REGISTER_METHOD(0x00E821F0, void, FixedUpdate, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E82B60, void, ConstrainRotationFix, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E82E40, void, IgnoreCollisionWithPlayer, (PushPullBlock * __this, PlatformMovement * platformMovement, bool ignore));
IL2CPP_REGISTER_METHOD(0x00E82E60, void, CheckIfOutOfBounds, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E83200, void, add_OnBashEvent, (PushPullBlock * __this, Action * value));
IL2CPP_REGISTER_METHOD(0x00E832F0, void, remove_OnBashEvent, (PushPullBlock * __this, Action * value));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, CanActivateSwitch, (PushPullBlock * __this, GameObject * theSwitch));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnSpiritFlameHighlight, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnSpiritFlameDehighlight, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnHeavySpiritSlashHighlight, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnHeavySpiritSlashDehighlight, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnSpiritSlashHighlight, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnSpiritSlashDehighlight, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00420EE0, int32_t, GetSpiritSlashDamageAmount, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00660440, void, ICanActivatePressurePlate_OnPressed, (PushPullBlock * __this, IPressurePlate * plate));
IL2CPP_REGISTER_METHOD(0x00A1DC30, void, ICanActivatePressurePlate_OnReleased, (PushPullBlock * __this, IPressurePlate * plate));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnBeforeTeleportation, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E833E0, void, Teleport, (PushPullBlock * __this, Vector2 newPosition));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnAfterTeleportation, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E83BA0, Vector2, ITeleportBeaconAttackable_get_Position, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, get_TrackTranformChangesForRecording, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00660200, TrackingExclusions, get_TrackingExclusions, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00A1D9E0, void, set_TrackingExclusions, (PushPullBlock * __this, TrackingExclusions value));
IL2CPP_REGISTER_METHOD(0x00420EE0, RecordableParsingGroup__Enum, get_ParsingGroup, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00418200, IDamageReciever__Array *, get_AffectedReceivers, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E83CB0, void, __ctor, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00E83ED0, void, __cctor, ());
IL2CPP_REGISTER_METHOD(0x004F4750, GameObject *, IDamageReciever_get_gameObject, (PushPullBlock * __this));
IL2CPP_REGISTER_METHOD(0x00506170, Transform *, IDamageReciever_get_transform, (PushPullBlock * __this));
}
