#include <interception_macros.h>

namespace app::methods::UnityEngine::AudioSource {
IL2CPP_REGISTER_METHOD(0x03141820, void, __ctor, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03141840, float, get_volume, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03141890, void, set_volume, (AudioSource * __this, float value));
IL2CPP_REGISTER_METHOD(0x031418F0, float, get_pitch, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03141940, void, set_pitch, (AudioSource * __this, float value));
IL2CPP_REGISTER_METHOD(0x031419A0, float, get_time, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x031419F0, void, set_time, (AudioSource * __this, float value));
IL2CPP_REGISTER_METHOD(0x03141A50, int32_t, get_timeSamples, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03141AA0, void, set_timeSamples, (AudioSource * __this, int32_t value));
IL2CPP_REGISTER_METHOD(0x03141B00, AudioClip *, get_clip, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03141B50, void, set_clip, (AudioSource * __this, AudioClip * value));
IL2CPP_REGISTER_METHOD(0x03141BB0, AudioMixerGroup *, get_outputAudioMixerGroup, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03141C00, void, set_outputAudioMixerGroup, (AudioSource * __this, AudioMixerGroup * value));
IL2CPP_REGISTER_METHOD(0x03141C60, void, Play, (AudioSource * __this, uint64_t delay));
IL2CPP_REGISTER_METHOD(0x03141CC0, void, Play, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03141D20, void, PlayDelayed, (AudioSource * __this, float delay));
IL2CPP_REGISTER_METHOD(0x03141D80, void, PlayScheduled, (AudioSource * __this, double time));
IL2CPP_REGISTER_METHOD(0x03141DE0, void, SetScheduledStartTime, (AudioSource * __this, double time));
IL2CPP_REGISTER_METHOD(0x03141E40, void, SetScheduledEndTime, (AudioSource * __this, double time));
IL2CPP_REGISTER_METHOD(0x03141EA0, void, Stop, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03141EF0, void, Pause, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03141EF0, void, INTERNAL_CALL_Pause, (AudioSource * self));
IL2CPP_REGISTER_METHOD(0x03141F40, void, UnPause, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03141F40, void, INTERNAL_CALL_UnPause, (AudioSource * self));
IL2CPP_REGISTER_METHOD(0x03141F90, bool, get_isPlaying, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03141FE0, bool, get_isVirtual, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03142030, void, PlayOneShot, (AudioSource * __this, AudioClip * clip));
IL2CPP_REGISTER_METHOD(0x03142040, void, PlayOneShot, (AudioSource * __this, AudioClip * clip, float volumeScale));
IL2CPP_REGISTER_METHOD(0x03142200, void, PlayOneShotHelper, (AudioSource * __this, AudioClip * clip, float volumeScale));
IL2CPP_REGISTER_METHOD(0x03142270, void, PlayOneShotHelper, (AudioSource * __this, AudioClip * clip));
IL2CPP_REGISTER_METHOD(0x03142280, void, PlayClipAtPoint, (AudioClip * clip, Vector3 position));
IL2CPP_REGISTER_METHOD(0x031422B0, void, PlayClipAtPoint, (AudioClip * clip, Vector3 position, float volume));
IL2CPP_REGISTER_METHOD(0x03142820, bool, get_loop, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03142870, void, set_loop, (AudioSource * __this, bool value));
IL2CPP_REGISTER_METHOD(0x031428D0, bool, get_ignoreListenerVolume, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03142920, void, set_ignoreListenerVolume, (AudioSource * __this, bool value));
IL2CPP_REGISTER_METHOD(0x03142980, bool, get_playOnAwake, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x031429D0, void, set_playOnAwake, (AudioSource * __this, bool value));
IL2CPP_REGISTER_METHOD(0x03142A30, bool, get_ignoreListenerPause, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03142A80, void, set_ignoreListenerPause, (AudioSource * __this, bool value));
IL2CPP_REGISTER_METHOD(0x03142AE0, AudioVelocityUpdateMode__Enum, get_velocityUpdateMode, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03142B30, void, set_velocityUpdateMode, (AudioSource * __this, AudioVelocityUpdateMode__Enum value));
IL2CPP_REGISTER_METHOD(0x03142B90, float, get_panStereo, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03142BE0, void, set_panStereo, (AudioSource * __this, float value));
IL2CPP_REGISTER_METHOD(0x03142C40, float, get_spatialBlend, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03142C90, void, set_spatialBlend, (AudioSource * __this, float value));
IL2CPP_REGISTER_METHOD(0x03142CF0, bool, get_spatializeInternal, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03142D40, void, set_spatializeInternal, (AudioSource * __this, bool value));
IL2CPP_REGISTER_METHOD(0x03142CF0, bool, get_spatialize, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03142DA0, void, set_spatialize, (AudioSource * __this, bool value));
IL2CPP_REGISTER_METHOD(0x03142F50, bool, get_spatializePostEffects, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03142FA0, void, set_spatializePostEffects, (AudioSource * __this, bool value));
IL2CPP_REGISTER_METHOD(0x03143000, void, SetCustomCurve, (AudioSource * __this, AudioSourceCurveType__Enum type, AnimationCurve * curve));
IL2CPP_REGISTER_METHOD(0x03143070, AnimationCurve *, GetCustomCurve, (AudioSource * __this, AudioSourceCurveType__Enum type));
IL2CPP_REGISTER_METHOD(0x031430D0, float, get_reverbZoneMix, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03143120, void, set_reverbZoneMix, (AudioSource * __this, float value));
IL2CPP_REGISTER_METHOD(0x03143180, bool, get_bypassEffects, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x031431D0, void, set_bypassEffects, (AudioSource * __this, bool value));
IL2CPP_REGISTER_METHOD(0x03143230, bool, get_bypassListenerEffects, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03143280, void, set_bypassListenerEffects, (AudioSource * __this, bool value));
IL2CPP_REGISTER_METHOD(0x031432E0, bool, get_bypassReverbZones, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03143330, void, set_bypassReverbZones, (AudioSource * __this, bool value));
IL2CPP_REGISTER_METHOD(0x03143390, float, get_dopplerLevel, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x031433E0, void, set_dopplerLevel, (AudioSource * __this, float value));
IL2CPP_REGISTER_METHOD(0x03143440, float, get_spread, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03143490, void, set_spread, (AudioSource * __this, float value));
IL2CPP_REGISTER_METHOD(0x031434F0, int32_t, get_priority, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03143540, void, set_priority, (AudioSource * __this, int32_t value));
IL2CPP_REGISTER_METHOD(0x031435A0, bool, get_mute, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x031435F0, void, set_mute, (AudioSource * __this, bool value));
IL2CPP_REGISTER_METHOD(0x03143650, float, get_minDistance, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x031436A0, void, set_minDistance, (AudioSource * __this, float value));
IL2CPP_REGISTER_METHOD(0x03143700, float, get_maxDistance, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03143750, void, set_maxDistance, (AudioSource * __this, float value));
IL2CPP_REGISTER_METHOD(0x031437B0, AudioRolloffMode__Enum, get_rolloffMode, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03143800, void, set_rolloffMode, (AudioSource * __this, AudioRolloffMode__Enum value));
IL2CPP_REGISTER_METHOD(0x03143860, void, GetOutputDataHelper, (AudioSource * __this, Single__Array * samples, int32_t channel));
IL2CPP_REGISTER_METHOD(0x031438D0, Single__Array *, GetOutputData, (AudioSource * __this, int32_t numSamples, int32_t channel));
IL2CPP_REGISTER_METHOD(0x03143980, void, GetOutputData, (AudioSource * __this, Single__Array * samples, int32_t channel));
IL2CPP_REGISTER_METHOD(0x03143990, void, GetSpectrumDataHelper, (AudioSource * __this, Single__Array * samples, int32_t channel, FFTWindow__Enum window));
IL2CPP_REGISTER_METHOD(0x03143A10, Single__Array *, GetSpectrumData, (AudioSource * __this, int32_t numSamples, int32_t channel, FFTWindow__Enum window));
IL2CPP_REGISTER_METHOD(0x03143AE0, void, GetSpectrumData, (AudioSource * __this, Single__Array * samples, int32_t channel, FFTWindow__Enum window));
IL2CPP_REGISTER_METHOD(0x03143AF0, int32_t, GetNumExtensionProperties, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03143B40, int32_t, GetNumExtensionPropertiesForThisExtension, (AudioSource * __this, PropertyName extensionName));
IL2CPP_REGISTER_METHOD(0x03143BA0, int32_t, INTERNAL_CALL_GetNumExtensionPropertiesForThisExtension, (AudioSource * self, PropertyName * extensionName));
IL2CPP_REGISTER_METHOD(0x03143C00, PropertyName, ReadExtensionName, (AudioSource * __this, int32_t sourceIndex));
IL2CPP_REGISTER_METHOD(0x03143C70, void, INTERNAL_CALL_ReadExtensionName, (AudioSource * self, int32_t sourceIndex, PropertyName * value));
IL2CPP_REGISTER_METHOD(0x03143CE0, PropertyName, ReadExtensionPropertyName, (AudioSource * __this, int32_t sourceIndex));
IL2CPP_REGISTER_METHOD(0x03143D50, void, INTERNAL_CALL_ReadExtensionPropertyName, (AudioSource * self, int32_t sourceIndex, PropertyName * value));
IL2CPP_REGISTER_METHOD(0x03143DC0, float, ReadExtensionPropertyValue, (AudioSource * __this, int32_t sourceIndex));
IL2CPP_REGISTER_METHOD(0x03143E20, bool, ReadExtensionProperty, (AudioSource * __this, PropertyName extensionName, PropertyName propertyName, float * propertyValue));
IL2CPP_REGISTER_METHOD(0x03143EA0, bool, INTERNAL_CALL_ReadExtensionProperty, (AudioSource * self, PropertyName * extensionName, PropertyName * propertyName, float * propertyValue));
IL2CPP_REGISTER_METHOD(0x03143F20, void, ClearExtensionProperties, (AudioSource * __this, PropertyName extensionName));
IL2CPP_REGISTER_METHOD(0x03143F80, void, INTERNAL_CALL_ClearExtensionProperties, (AudioSource * self, PropertyName * extensionName));
IL2CPP_REGISTER_METHOD(0x03143FE0, AudioSourceExtension *, AddSpatializerExtension, (AudioSource * __this, Type * extensionType));
IL2CPP_REGISTER_METHOD(0x03144130, AudioSourceExtension *, AddAmbisonicExtension, (AudioSource * __this, Type * extensionType));
IL2CPP_REGISTER_METHOD(0x03144280, float, get_minVolume, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x031442D0, void, set_minVolume, (AudioSource * __this, float value));
IL2CPP_REGISTER_METHOD(0x03144330, float, get_maxVolume, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03144380, void, set_maxVolume, (AudioSource * __this, float value));
IL2CPP_REGISTER_METHOD(0x031443E0, float, get_rolloffFactor, (AudioSource * __this));
IL2CPP_REGISTER_METHOD(0x03144430, void, set_rolloffFactor, (AudioSource * __this, float value));
IL2CPP_REGISTER_METHOD(0x03144490, bool, SetSpatializerFloat, (AudioSource * __this, int32_t index, float value));
IL2CPP_REGISTER_METHOD(0x03144500, bool, GetSpatializerFloat, (AudioSource * __this, int32_t index, float * value));
IL2CPP_REGISTER_METHOD(0x03144570, bool, SetAmbisonicDecoderFloat, (AudioSource * __this, int32_t index, float value));
IL2CPP_REGISTER_METHOD(0x031445E0, bool, GetAmbisonicDecoderFloat, (AudioSource * __this, int32_t index, float * value));
}
