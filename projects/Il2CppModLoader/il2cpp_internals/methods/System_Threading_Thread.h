#include <interception_macros.h>

namespace app::methods::System::Threading::Thread {
IL2CPP_REGISTER_METHOD(0x023417A0, void, AsyncLocalSetCurrentCulture, (AsyncLocalValueChangedArgs_1_System_Globalization_CultureInfo_ args));
IL2CPP_REGISTER_METHODINFO(0x04773F40, Thread_AsyncLocalSetCurrentCulture__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02341860, void, AsyncLocalSetCurrentUICulture, (AsyncLocalValueChangedArgs_1_System_Globalization_CultureInfo_ args));
IL2CPP_REGISTER_METHODINFO(0x047882C0, Thread_AsyncLocalSetCurrentUICulture__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02341920, void, __ctor, (Thread * __this, ThreadStart * start));
IL2CPP_REGISTER_METHODINFO(0x0472D738, Thread__ctor__MethodInfo);
IL2CPP_REGISTER_METHOD(0x023419F0, void, __ctor, (Thread * __this, ParameterizedThreadStart * start));
IL2CPP_REGISTER_METHODINFO(0x0473B0D8, Thread__ctor_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02341AC0, void, Start, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x02341AE0, void, Start, (Thread * __this, Object * parameter));
IL2CPP_REGISTER_METHODINFO(0x047795C8, Thread_Start_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02341BE0, void, Start, (Thread * __this, StackCrawlMark__Enum * stackMark));
IL2CPP_REGISTER_METHOD(0x002FB9D0, ExecutionContext_Reader, GetExecutionContextReader, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x02341DF0, bool, get_ExecutionContextBelongsToCurrentScope, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x02341E00, void, set_ExecutionContextBelongsToCurrentScope, (Thread * __this, bool value));
IL2CPP_REGISTER_METHOD(0x02341E10, ExecutionContext *, GetMutableExecutionContext, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x02341F80, void, SetExecutionContext, (Thread * __this, ExecutionContext * value, bool belongsToCurrentScope));
IL2CPP_REGISTER_METHOD(0x02341F80, void, SetExecutionContext, (Thread * __this, ExecutionContext_Reader value, bool belongsToCurrentScope));
IL2CPP_REGISTER_METHOD(0x02341F90, void, Interrupt, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x02341F90, void, InterruptInternal, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x02341FA0, void, set_Priority, (Thread * __this, ThreadPriority__Enum value));
IL2CPP_REGISTER_METHOD(0x02341FA0, void, SetPriorityNative, (Thread * __this, int32_t priority));
IL2CPP_REGISTER_METHOD(0x02341FB0, bool, JoinInternal, (Thread * __this, int32_t millisecondsTimeout));
IL2CPP_REGISTER_METHOD(0x023420B0, void, Join, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x02342180, bool, Join, (Thread * __this, int32_t millisecondsTimeout));
IL2CPP_REGISTER_METHODINFO(0x047259C8, Thread_Join_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02342320, void, SleepInternal, (int32_t millisecondsTimeout));
IL2CPP_REGISTER_METHOD(0x023423E0, void, Sleep, (int32_t millisecondsTimeout));
IL2CPP_REGISTER_METHODINFO(0x04796CD0, Thread_Sleep__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02342540, bool, YieldInternal, ());
IL2CPP_REGISTER_METHOD(0x02342540, bool, Yield, ());
IL2CPP_REGISTER_METHOD(0x02342560, void, SetStartHelper, (Thread * __this, Delegate * start, int32_t maxStackSize));
IL2CPP_REGISTER_METHOD(0x02342990, CultureInfo *, get_CurrentUICulture, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x023429A0, void, set_CurrentUICulture, (Thread * __this, CultureInfo * value));
IL2CPP_REGISTER_METHODINFO(0x0477FD50, Thread_set_CurrentUICulture__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02342E20, CultureInfo *, GetCurrentUICultureNoAppX, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x02343090, CultureInfo *, get_CurrentCulture, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x023430A0, void, set_CurrentCulture, (Thread * __this, CultureInfo * value));
IL2CPP_REGISTER_METHODINFO(0x04726570, Thread_set_CurrentCulture__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02343450, CultureInfo *, GetCurrentCultureNoAppX, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x023436C0, void, nativeInitCultureAccessors, ());
IL2CPP_REGISTER_METHOD(0x023437F0, void, MemoryBarrier, ());
IL2CPP_REGISTER_METHOD(0x02343800, void, ConstructInternalThread, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x02343810, InternalThread *, get_Internal, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x0228D860, Context *, get_CurrentContext, ());
IL2CPP_REGISTER_METHOD(0x02343840, Thread *, GetCurrentThread, ());
IL2CPP_REGISTER_METHOD(0x02343870, Thread *, get_CurrentThread, ());
IL2CPP_REGISTER_METHOD(0x0228DA50, int32_t, get_CurrentThreadId, ());
IL2CPP_REGISTER_METHOD(0x0228DA20, int32_t, GetDomainID, ());
IL2CPP_REGISTER_METHOD(0x02343950, void *, Thread_internal, (Thread * __this, MulticastDelegate * start));
IL2CPP_REGISTER_METHOD(0x02329BB0, void, Finalize, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x02343960, bool, get_IsThreadPoolThread, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x02343960, bool, get_IsThreadPoolThreadInternal, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x023439A0, bool, get_IsAlive, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x02343A00, void, set_IsBackground, (Thread * __this, bool value));
IL2CPP_REGISTER_METHOD(0x02343B60, void, SetName_internal, (InternalThread * thread, String * name));
IL2CPP_REGISTER_METHOD(0x02343C80, void, set_Name, (Thread * __this, String * value));
IL2CPP_REGISTER_METHOD(0x02343DB0, ThreadState__Enum, get_ThreadState, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x02343E10, void, Abort_internal, (InternalThread * thread, Object * stateInfo));
IL2CPP_REGISTER_METHOD(0x02343E20, void, Abort, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, SpinWait_nop, ());
IL2CPP_REGISTER_METHOD(0x02343E50, void, SpinWait, (int32_t iterations));
IL2CPP_REGISTER_METHOD(0x02343E60, void, StartInternal, (Thread * __this, IPrincipal * principal, StackCrawlMark__Enum * stackMark));
IL2CPP_REGISTER_METHODINFO(0x0476D268, Thread_StartInternal__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02343F20, void, SetState, (InternalThread * thread, ThreadState__Enum set));
IL2CPP_REGISTER_METHOD(0x02343F70, void, ClrState, (InternalThread * thread, ThreadState__Enum clr));
IL2CPP_REGISTER_METHOD(0x02343FC0, ThreadState__Enum, GetState, (InternalThread * thread));
IL2CPP_REGISTER_METHOD(0x0215A2D0, int32_t, SystemMaxStackStize, ());
IL2CPP_REGISTER_METHOD(0x02344010, int32_t, GetProcessDefaultStackSize, (int32_t maxStackSize));
IL2CPP_REGISTER_METHOD(0x023440F0, void, SetStart, (Thread * __this, MulticastDelegate * start, int32_t maxStackSize));
IL2CPP_REGISTER_METHOD(0x02344140, int32_t, get_ManagedThreadId, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x02344180, void, BeginCriticalRegion, ());
IL2CPP_REGISTER_METHOD(0x023441E0, void, EndCriticalRegion, ());
IL2CPP_REGISTER_METHOD(0x02344140, int32_t, GetHashCode, (Thread * __this));
IL2CPP_REGISTER_METHOD(0x02344240, ThreadState__Enum, ValidateThreadState, (Thread * __this));
IL2CPP_REGISTER_METHODINFO(0x0476D450, Thread_ValidateThreadState__MethodInfo);
}
