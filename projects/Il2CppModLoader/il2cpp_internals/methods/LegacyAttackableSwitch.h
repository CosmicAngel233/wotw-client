using namespace app;

namespace app::methods::LegacyAttackableSwitch {
IL2CPP_REGISTER_METHOD(0x015CD510, void, ToggleSwitch, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD650, void, TurnOn, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD730, void, TurnOff, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD810, void, FixedUpdate, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x0058E140, Vector3, get_Position, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, IsDead, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD8F0, bool, CanBeChargeFlamed, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD8F0, bool, CanBeChargeDashed, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD8F0, bool, CanBeGrenaded, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD8F0, bool, CanBeStomped, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, CanBeBashed, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD8F0, bool, CanBeSpiritFlamed, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD8F0, bool, IsStompBouncable, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD8F0, bool, CanBeLevelUpBlasted, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD8F0, bool, CanBeSpiritSlashed, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD8F0, bool, CanBeHeavySpiritSlashed, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD8F0, bool, CanBeSpiritLeashed, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD8F0, bool, CanBeHomingMissiled, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD8F0, bool, CanBeTrapped, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD8F0, bool, CanBeSpiritSpeared, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD8F0, bool, CanBeHitByBow, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD8F0, bool, CanBeHitByHammerHandle, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD8F0, bool, CanBeHitByMelee, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, CanBeTeleportedByBeacon, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, CanBeGlowed, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD8F0, bool, get_CanBeHit, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CD930, void, OnRecieveDamage, (LegacyAttackableSwitch * __this, Damage * damage));
IL2CPP_REGISTER_METHOD(0x015CDB80, bool, DoesReactTo, (LegacyAttackableSwitch * __this, DamageType__Enum damageType));
IL2CPP_REGISTER_METHOD(0x015CDE10, bool, Match, (LegacyAttackableSwitch * __this, LegacyAttackableSwitch_AttackTypes__Enum attack, DamageType__Enum damageType));
IL2CPP_REGISTER_METHOD(0x015CDF70, void, Awake, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CE240, bool, get_IsOnActivatePerforming, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CE320, void, OnDestroy, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x003FD650, bool, get_IsSuspended, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00800850, void, set_IsSuspended, (LegacyAttackableSwitch * __this, bool value));
IL2CPP_REGISTER_METHOD(0x0057A5A0, SuspendableMask__Enum, get_Mask, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CE3E0, void, set_Mask, (LegacyAttackableSwitch * __this, SuspendableMask__Enum value));
IL2CPP_REGISTER_METHOD(0x00420EE0, int32_t, get_SpiritSlashPriority, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnSpiritSlashHighlight, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnSpiritSlashDehighlight, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00597B10, int32_t, GetSpiritSlashDamageAmount, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00420EE0, int32_t, get_BashPriority, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnEnterBash, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnBashHighlight, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x002FA000, void, OnBashDehighlight, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x003FF8B0, int32_t, get_BowPriority, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, get_BowEnableAutoTarget, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x0058E140, Vector3, get_BowAutoTargetPosition, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, ShouldArrowBeReflected, (LegacyAttackableSwitch * __this, ArrowHitData hitData));
IL2CPP_REGISTER_METHOD(0x00420EE0, int32_t, get_HammerPriority, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00417870, bool, get_HammerEnableAutoTarget, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x0108CEB0, bool, ShouldArrowExplode, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CE4A0, void, Serialize, (LegacyAttackableSwitch * __this, Archive * ar));
IL2CPP_REGISTER_METHOD(0x0108CEB0, bool, CanDetonateProjectiles, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x0069FA30, bool, get_IsOn, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x002FBCA0, IDamageReciever__Array *, get_AffectedReceivers, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x015CE600, void, __ctor, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x004F4750, GameObject *, IDamageReciever_get_gameObject, (LegacyAttackableSwitch * __this));
IL2CPP_REGISTER_METHOD(0x00506170, Transform *, IDamageReciever_get_transform, (LegacyAttackableSwitch * __this));
}
