#include <interception_macros.h>

namespace app::methods::System::TimeZoneInfo {
IL2CPP_REGISTER_METHOD(0x027AE7B0, bool, UtcOffsetOutOfRange, (app::TimeSpan offset));
IL2CPP_REGISTER_METHOD(0x027AE7E0, List_1_System_TimeZoneInfo_AdjustmentRule_ *, CreateAdjustmentRule, (int32_t year, app::Int64__Array * * data, app::String__Array * * names, app::String * standard_name_current_year, app::String * daylight_name_current_year));
IL2CPP_REGISTER_METHOD(0x027AED10, TimeZoneInfo *, CreateLocalUnity, ());
IL2CPP_REGISTER_METHODINFO(0x0477E618, TimeZoneInfo_CreateLocalUnity__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027AEE70, uint32_t, EnumDynamicTimeZoneInformation, (uint32_t dw_index, app::TimeZoneInfo_DYNAMIC_TIME_ZONE_INFORMATION * lp_time_zone_information));
IL2CPP_REGISTER_METHOD(0x027AEFA0, uint32_t, GetDynamicTimeZoneInformation, (app::TimeZoneInfo_DYNAMIC_TIME_ZONE_INFORMATION * p_time_zone_information));
IL2CPP_REGISTER_METHOD(0x027AF0C0, uint32_t, GetDynamicTimeZoneInformationWin32, (app::TimeZoneInfo_DYNAMIC_TIME_ZONE_INFORMATION * p_time_zone_information));
IL2CPP_REGISTER_METHOD(0x027AF1E0, uint32_t, GetDynamicTimeZoneInformationEffectiveYears, (app::TimeZoneInfo_DYNAMIC_TIME_ZONE_INFORMATION * lp_time_zone_information, app::uint32_t * first_year, app::uint32_t * last_year));
IL2CPP_REGISTER_METHOD(0x027AF330, bool, GetTimeZoneInformationForYear, (uint16_t w_year, app::TimeZoneInfo_DYNAMIC_TIME_ZONE_INFORMATION * pdtzi, app::TimeZoneInfo_TIME_ZONE_INFORMATION * ptzi));
IL2CPP_REGISTER_METHOD(0x027AF510, TimeZoneInfo_AdjustmentRule *, CreateAdjustmentRuleFromTimeZoneInformation, (app::TimeZoneInfo_DYNAMIC_TIME_ZONE_INFORMATION * time_zone_information, app::DateTime start_date, app::DateTime end_date, int32_t default_base_utc_offset));
IL2CPP_REGISTER_METHOD(0x027AFAA0, bool, TransitionTimeFromTimeZoneInformation, (app::TimeZoneInfo_DYNAMIC_TIME_ZONE_INFORMATION time_zone_information, app::TimeZoneInfo_TransitionTime * transition_time, bool read_start_date));
IL2CPP_REGISTER_METHOD(0x027AFC90, TimeZoneInfo *, TryCreateTimeZone, (app::TimeZoneInfo_DYNAMIC_TIME_ZONE_INFORMATION time_zone_information));
IL2CPP_REGISTER_METHOD(0x027B04A0, TimeZoneInfo *, GetLocalTimeZoneInfoWinRTFallback, ());
IL2CPP_REGISTER_METHOD(0x027B0670, String *, GetLocalTimeZoneKeyNameWin32Fallback, ());
IL2CPP_REGISTER_METHOD(0x027B0800, TimeZoneInfo *, FindSystemTimeZoneByIdWinRTFallback, (app::String * id));
IL2CPP_REGISTER_METHODINFO(0x0476B5A8, TimeZoneInfo_FindSystemTimeZoneByIdWinRTFallback__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027B0B10, List_1_System_TimeZoneInfo_ *, GetSystemTimeZonesWinRTFallback, ());
IL2CPP_REGISTER_METHOD(0x002FA280, TimeSpan, get_BaseUtcOffset, (app::TimeZoneInfo * this_ptr));
IL2CPP_REGISTER_METHOD(0x002FB950, String *, get_DisplayName, (app::TimeZoneInfo * this_ptr));
IL2CPP_REGISTER_METHOD(0x002FBB00, String *, get_Id, (app::TimeZoneInfo * this_ptr));
IL2CPP_REGISTER_METHOD(0x027B0E20, TimeZoneInfo *, get_Local, ());
IL2CPP_REGISTER_METHODINFO(0x04778160, TimeZoneInfo_get_Local__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027B0F10, int32_t, readlink_1, (app::String * path, app::Byte__Array * buffer, int32_t buflen));
IL2CPP_REGISTER_METHOD(0x027B10B0, String *, readlink_2, (app::String * path));
IL2CPP_REGISTER_METHOD(0x027B1360, bool, TryGetNameFromPath, (app::String * path, app::String * * name));
IL2CPP_REGISTER_METHOD(0x027B1600, TimeZoneInfo *, CreateLocal, ());
IL2CPP_REGISTER_METHOD(0x027B1B80, TimeZoneInfo *, FindSystemTimeZoneByIdCore, (app::String * id));
IL2CPP_REGISTER_METHOD(0x027B1C40, void, GetSystemTimeZonesCore, (app::List_1_System_TimeZoneInfo_ * system_time_zones));
IL2CPP_REGISTER_METHODINFO(0x04774960, TimeZoneInfo_GetSystemTimeZonesCore__MethodInfo);
IL2CPP_REGISTER_METHOD(0x00446590, bool, get_SupportsDaylightSavingTime, (app::TimeZoneInfo * this_ptr));
IL2CPP_REGISTER_METHOD(0x027B2790, TimeZoneInfo *, get_Utc, ());
IL2CPP_REGISTER_METHOD(0x027B2860, String *, get_TimeZoneDirectory, ());
IL2CPP_REGISTER_METHOD(0x027B2910, bool, get_IsWindows, ());
IL2CPP_REGISTER_METHOD(0x027B2950, String *, TrimSpecial, (app::String * str));
IL2CPP_REGISTER_METHOD(0x027B2AB0, RegistryKey *, get_TimeZoneKey, ());
IL2CPP_REGISTER_METHOD(0x027B2BF0, RegistryKey *, get_LocalZoneKey, ());
IL2CPP_REGISTER_METHOD(0x027B2D30, bool, TryAddTicks, (app::DateTime date, int64_t ticks, app::DateTime * result, app::DateTimeKind__Enum kind));
IL2CPP_REGISTER_METHOD(0x027B2EF0, DateTime, ConvertTime, (app::DateTime date_time, app::TimeZoneInfo * source_time_zone, app::TimeZoneInfo * destination_time_zone));
IL2CPP_REGISTER_METHODINFO(0x0477F120, TimeZoneInfo_ConvertTime__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027B31F0, DateTime, ConvertTimeFromUtc_1, (app::TimeZoneInfo * this_ptr, app::DateTime date_time));
IL2CPP_REGISTER_METHODINFO(0x0473E658, TimeZoneInfo_ConvertTimeFromUtc__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027B33D0, DateTime, ConvertTimeFromUtc_2, (app::DateTime date_time, app::TimeZoneInfo * destination_time_zone));
IL2CPP_REGISTER_METHODINFO(0x047176A0, TimeZoneInfo_ConvertTimeFromUtc_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027B3490, DateTime, ConvertTimeToUtc_1, (app::DateTime date_time, app::TimeZoneInfoOptions__Enum flags));
IL2CPP_REGISTER_METHOD(0x027B34D0, DateTime, ConvertTimeToUtc_2, (app::DateTime date_time, app::TimeZoneInfo * source_time_zone));
IL2CPP_REGISTER_METHOD(0x027B34E0, DateTime, ConvertTimeToUtc_3, (app::DateTime date_time, app::TimeZoneInfo * source_time_zone, app::TimeZoneInfoOptions__Enum flags));
IL2CPP_REGISTER_METHODINFO(0x04703590, TimeZoneInfo_ConvertTimeToUtc_2__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027B3710, TimeSpan, GetDateTimeNowUtcOffsetFromUtc, (app::DateTime time, app::bool * is_ambiguous_local_dst));
IL2CPP_REGISTER_METHOD(0x027B3780, TimeZoneInfo *, CreateCustomTimeZone_1, (app::String * id, app::TimeSpan base_utc_offset, app::String * display_name, app::String * standard_display_name));
IL2CPP_REGISTER_METHOD(0x027B37B0, TimeZoneInfo *, CreateCustomTimeZone_2, (app::String * id, app::TimeSpan base_utc_offset, app::String * display_name, app::String * standard_display_name, app::String * daylight_display_name, app::TimeZoneInfo_AdjustmentRule__Array * adjustment_rules));
IL2CPP_REGISTER_METHOD(0x027B37E0, TimeZoneInfo *, CreateCustomTimeZone_3, (app::String * id, app::TimeSpan base_utc_offset, app::String * display_name, app::String * standard_display_name, app::String * daylight_display_name, app::TimeZoneInfo_AdjustmentRule__Array * adjustment_rules, bool disable_daylight_saving_time));
IL2CPP_REGISTER_METHOD(0x027B3980, bool, Equals_1, (app::TimeZoneInfo * this_ptr, app::Object * obj));
IL2CPP_REGISTER_METHOD(0x027B3A70, bool, Equals_2, (app::TimeZoneInfo * this_ptr, app::TimeZoneInfo * other));
IL2CPP_REGISTER_METHOD(0x027B3AE0, TimeZoneInfo *, FindSystemTimeZoneById, (app::String * id));
IL2CPP_REGISTER_METHODINFO(0x0478D790, TimeZoneInfo_FindSystemTimeZoneById__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027B3D60, TimeZoneInfo *, FindSystemTimeZoneByFileName, (app::String * id, app::String * filepath));
IL2CPP_REGISTER_METHODINFO(0x04753E60, TimeZoneInfo_FindSystemTimeZoneByFileName__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027B3EF0, TimeZoneInfo *, FromRegistryKey, (app::String * id, app::RegistryKey * key));
IL2CPP_REGISTER_METHODINFO(0x04760EA8, TimeZoneInfo_FromRegistryKey__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027B43B0, void, ParseRegTzi, (app::List_1_System_TimeZoneInfo_AdjustmentRule_ * adjustment_rules, int32_t start_year, int32_t end_year, app::Byte__Array * buffer));
IL2CPP_REGISTER_METHOD(0x027B4780, TimeZoneInfo_AdjustmentRule__Array *, GetAdjustmentRules, (app::TimeZoneInfo * this_ptr));
IL2CPP_REGISTER_METHOD(0x027B48E0, int32_t, GetHashCode, (app::TimeZoneInfo * this_ptr));
IL2CPP_REGISTER_METHOD(0x027B4AD0, void, ISerializable_GetObjectData, (app::TimeZoneInfo * this_ptr, app::SerializationInfo * info, app::StreamingContext context));
IL2CPP_REGISTER_METHODINFO(0x0477D6E8, TimeZoneInfo_System_Runtime_Serialization_ISerializable_GetObjectData__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027B4C40, ReadOnlyCollection_1_System_TimeZoneInfo_ *, GetSystemTimeZones, ());
IL2CPP_REGISTER_METHOD(0x027B4EB0, TimeSpan, GetUtcOffset_1, (app::TimeZoneInfo * this_ptr, app::DateTime date_time));
IL2CPP_REGISTER_METHOD(0x027B4ED0, TimeSpan, GetUtcOffset_2, (app::TimeZoneInfo * this_ptr, app::DateTime date_time, app::bool * is_d_s_t));
IL2CPP_REGISTER_METHOD(0x027B4FD0, TimeSpan, GetUtcOffsetHelper, (app::DateTime date_time, app::TimeZoneInfo * tz, app::bool * is_d_s_t));
IL2CPP_REGISTER_METHODINFO(0x0478E360, TimeZoneInfo_GetUtcOffsetHelper__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027B52D0, bool, HasSameRules, (app::TimeZoneInfo * this_ptr, app::TimeZoneInfo * other));
IL2CPP_REGISTER_METHODINFO(0x047097E8, TimeZoneInfo_HasSameRules__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027B56A0, bool, IsAmbiguousTime, (app::TimeZoneInfo * this_ptr, app::DateTime date_time));
IL2CPP_REGISTER_METHODINFO(0x0471A7D0, TimeZoneInfo_IsAmbiguousTime__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027B58E0, bool, IsInDST, (app::TimeZoneInfo * this_ptr, app::TimeZoneInfo_AdjustmentRule * rule, app::DateTime date_time));
IL2CPP_REGISTER_METHOD(0x027B59A0, bool, IsInDSTForYear, (app::TimeZoneInfo * this_ptr, app::TimeZoneInfo_AdjustmentRule * rule, app::DateTime date_time, int32_t year));
IL2CPP_REGISTER_METHOD(0x027B5BD0, bool, IsDaylightSavingTime_1, (app::TimeZoneInfo * this_ptr, app::DateTime date_time));
IL2CPP_REGISTER_METHODINFO(0x047461D8, TimeZoneInfo_IsDaylightSavingTime__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027B5BD0, bool, IsDaylightSavingTime_2, (app::TimeZoneInfo * this_ptr, app::DateTime date_time, app::TimeZoneInfoOptions__Enum flags));
IL2CPP_REGISTER_METHOD(0x027B5CF0, bool, IsInvalidTime, (app::TimeZoneInfo * this_ptr, app::DateTime date_time));
IL2CPP_REGISTER_METHOD(0x027B5EA0, void, IDeserializationCallback_OnDeserialization, (app::TimeZoneInfo * this_ptr, app::Object * sender));
IL2CPP_REGISTER_METHODINFO(0x04708308, TimeZoneInfo_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027B5F70, void, Validate, (app::String * id, app::TimeSpan base_utc_offset, app::TimeZoneInfo_AdjustmentRule__Array * adjustment_rules));
IL2CPP_REGISTER_METHODINFO(0x0473B540, TimeZoneInfo_Validate__MethodInfo);
IL2CPP_REGISTER_METHOD(0x002FB950, String *, ToString, (app::TimeZoneInfo * this_ptr));
IL2CPP_REGISTER_METHOD(0x027B64C0, void, __ctor_1, (app::TimeZoneInfo * this_ptr, app::SerializationInfo * info, app::StreamingContext context));
IL2CPP_REGISTER_METHODINFO(0x047107E8, TimeZoneInfo__ctor__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027B6800, void, __ctor_2, (app::TimeZoneInfo * this_ptr, app::String * id, app::TimeSpan base_utc_offset, app::String * display_name, app::String * standard_display_name, app::String * daylight_display_name, app::TimeZoneInfo_AdjustmentRule__Array * adjustment_rules, bool disable_daylight_saving_time));
IL2CPP_REGISTER_METHODINFO(0x04722C98, TimeZoneInfo__ctor_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027B6DE0, TimeZoneInfo_AdjustmentRule *, GetApplicableRule, (app::TimeZoneInfo * this_ptr, app::DateTime date_time));
IL2CPP_REGISTER_METHOD(0x027B7010, bool, TryGetTransitionOffset, (app::TimeZoneInfo * this_ptr, app::DateTime date_time, app::TimeSpan * offset, app::bool * is_dst));
IL2CPP_REGISTER_METHOD(0x027B72E0, DateTime, TransitionPoint, (app::TimeZoneInfo_TransitionTime transition, int32_t year));
IL2CPP_REGISTER_METHOD(0x027B74E0, TimeZoneInfo_AdjustmentRule__Array *, ValidateRules, (app::List_1_System_TimeZoneInfo_AdjustmentRule_ * adjustment_rules));
IL2CPP_REGISTER_METHOD(0x027B7670, TimeZoneInfo *, BuildFromStream, (app::String * id, app::Stream * stream));
IL2CPP_REGISTER_METHODINFO(0x0472DE90, TimeZoneInfo_BuildFromStream__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027B77F0, bool, ValidTZFile, (app::Byte__Array * buffer, int32_t length));
IL2CPP_REGISTER_METHOD(0x027B7B70, int32_t, SwapInt32, (int32_t i));
IL2CPP_REGISTER_METHOD(0x027B7BA0, int32_t, ReadBigEndianInt32, (app::Byte__Array * buffer, int32_t start));
IL2CPP_REGISTER_METHOD(0x027B7C90, TimeZoneInfo *, ParseTZBuffer, (app::String * id, app::Byte__Array * buffer, int32_t length));
IL2CPP_REGISTER_METHODINFO(0x047820B8, TimeZoneInfo_ParseTZBuffer__MethodInfo);
IL2CPP_REGISTER_METHOD(0x027B8850, Dictionary_2_System_Int32_System_String_ *, ParseAbbreviations, (app::Byte__Array * buffer, int32_t index, int32_t count));
IL2CPP_REGISTER_METHOD(0x027B8C60, Dictionary_2_System_Int32_System_TimeType_ *, ParseTimesTypes, (app::Byte__Array * buffer, int32_t index, int32_t count, app::Dictionary_2_System_Int32_System_String_ * abbreviations));
IL2CPP_REGISTER_METHOD(0x027B9010, List_1_KeyValuePair_2_System_DateTime_System_TimeType_ *, ParseTransitions, (app::Byte__Array * buffer, int32_t index, int32_t count, app::Dictionary_2_System_Int32_System_TimeType_ * time_types));
IL2CPP_REGISTER_METHOD(0x027B9440, DateTime, DateTimeFromUnixTime, (int64_t unix_time));
IL2CPP_REGISTER_METHOD(0x027B9510, TimeSpan, GetLocalUtcOffset, (app::DateTime date_time, app::TimeZoneInfoOptions__Enum flags));
IL2CPP_REGISTER_METHOD(0x027B4EB0, TimeSpan, GetUtcOffset_3, (app::TimeZoneInfo * this_ptr, app::DateTime date_time, app::TimeZoneInfoOptions__Enum flags));
IL2CPP_REGISTER_METHOD(0x027B9550, TimeSpan, GetUtcOffsetFromUtc, (app::DateTime time, app::TimeZoneInfo * zone, app::bool * is_daylight_savings, app::bool * is_ambiguous_local_dst));
IL2CPP_REGISTER_METHOD(0x027B95C0, void, __ctor_3, (app::TimeZoneInfo * this_ptr));
IL2CPP_REGISTER_METHODINFO(0x04747260, TimeZoneInfo__ctor_2__MethodInfo);
}
