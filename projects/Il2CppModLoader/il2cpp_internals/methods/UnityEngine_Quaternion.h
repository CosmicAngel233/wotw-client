#include <interception_macros.h>

namespace app::methods::UnityEngine::Quaternion {
IL2CPP_REGISTER_METHOD(0x00121740, void, __ctor, (Quaternion__Boxed * __this, float x, float y, float z, float w));
IL2CPP_REGISTER_METHOD(0x0296A820, Quaternion, FromToRotation, (Vector3 fromDirection, Vector3 toDirection));
IL2CPP_REGISTER_METHOD(0x0296A930, Quaternion, Inverse, (Quaternion rotation));
IL2CPP_REGISTER_METHOD(0x0296AA30, Quaternion, Slerp, (Quaternion a, Quaternion b, float t));
IL2CPP_REGISTER_METHOD(0x0296AB50, Quaternion, SlerpUnclamped, (Quaternion a, Quaternion b, float t));
IL2CPP_REGISTER_METHOD(0x0296AC70, Quaternion, Lerp, (Quaternion a, Quaternion b, float t));
IL2CPP_REGISTER_METHOD(0x0296AD90, Quaternion, Internal_FromEulerRad, (Vector3 euler));
IL2CPP_REGISTER_METHOD(0x0296AE90, Vector3, Internal_ToEulerRad, (Quaternion rotation));
IL2CPP_REGISTER_METHOD(0x0296AFA0, void, Internal_ToAxisAngleRad, (Quaternion q, Vector3 * axis, float * angle));
IL2CPP_REGISTER_METHOD(0x0296B090, Quaternion, AngleAxis, (float angle, Vector3 axis));
IL2CPP_REGISTER_METHOD(0x0296B1A0, Quaternion, LookRotation, (Vector3 forward, Vector3 upwards));
IL2CPP_REGISTER_METHOD(0x0296B2B0, Quaternion, LookRotation, (Vector3 forward));
IL2CPP_REGISTER_METHOD(0x0296B4B0, Quaternion, get_identity, ());
IL2CPP_REGISTER_METHOD(0x0296B560, Quaternion, operator__, (Quaternion lhs, Quaternion rhs));
IL2CPP_REGISTER_METHOD(0x0296B6C0, Vector3, operator__, (Quaternion rotation, Vector3 point));
IL2CPP_REGISTER_METHOD(0x0296B870, bool, IsEqualUsingDot, (float dot));
IL2CPP_REGISTER_METHOD(0x0296B880, bool, operator___, (Quaternion lhs, Quaternion rhs));
IL2CPP_REGISTER_METHOD(0x0296B980, bool, operator___, (Quaternion lhs, Quaternion rhs));
IL2CPP_REGISTER_METHOD(0x0296BA50, float, Dot, (Quaternion a, Quaternion b));
IL2CPP_REGISTER_METHOD(0x0296BA90, float, Angle, (Quaternion a, Quaternion b));
IL2CPP_REGISTER_METHOD(0x0296BBF0, Vector3, Internal_MakePositive, (Vector3 euler));
IL2CPP_REGISTER_METHOD(0x00217500, Vector3, get_eulerAngles, (Quaternion__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x0296BE30, Quaternion, Euler, (float x, float y, float z));
IL2CPP_REGISTER_METHOD(0x0296BF70, Quaternion, Euler, (Vector3 euler));
IL2CPP_REGISTER_METHOD(0x00217530, void, ToAngleAxis, (Quaternion__Boxed * __this, float * angle, Vector3 * axis));
IL2CPP_REGISTER_METHOD(0x00217540, void, SetFromToRotation, (Quaternion__Boxed * __this, Vector3 fromDirection, Vector3 toDirection));
IL2CPP_REGISTER_METHOD(0x0296C420, Quaternion, RotateTowards, (Quaternion from, Quaternion to, float maxDegreesDelta));
IL2CPP_REGISTER_METHOD(0x0296C670, Quaternion, Normalize, (Quaternion q));
IL2CPP_REGISTER_METHOD(0x00217580, void, Normalize, (Quaternion__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x00217640, Quaternion, get_normalized, (Quaternion__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x00217710, int32_t, GetHashCode, (Quaternion__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x00217720, bool, Equals, (Quaternion__Boxed * __this, Object * other));
IL2CPP_REGISTER_METHOD(0x001EBCF0, bool, Equals, (Quaternion__Boxed * __this, Quaternion other));
IL2CPP_REGISTER_METHOD(0x00217730, String *, ToString, (Quaternion__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x00217740, Vector3, ToEuler, (Quaternion__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x00217820, Vector3, ToEulerAngles, (Quaternion__Boxed * __this));
IL2CPP_REGISTER_METHOD(0x0296CC10, void, __cctor, ());
IL2CPP_REGISTER_METHOD(0x0296CCA0, void, FromToRotation_Injected, (Vector3 * fromDirection, Vector3 * toDirection, Quaternion * ret));
IL2CPP_REGISTER_METHOD(0x0296CD10, void, Inverse_Injected, (Quaternion * rotation, Quaternion * ret));
IL2CPP_REGISTER_METHOD(0x0296CD70, void, Slerp_Injected, (Quaternion * a, Quaternion * b, float t, Quaternion * ret));
IL2CPP_REGISTER_METHOD(0x0296CDF0, void, SlerpUnclamped_Injected, (Quaternion * a, Quaternion * b, float t, Quaternion * ret));
IL2CPP_REGISTER_METHOD(0x0296CE70, void, Lerp_Injected, (Quaternion * a, Quaternion * b, float t, Quaternion * ret));
IL2CPP_REGISTER_METHOD(0x0296CEF0, void, Internal_FromEulerRad_Injected, (Vector3 * euler, Quaternion * ret));
IL2CPP_REGISTER_METHOD(0x0296CF50, void, Internal_ToEulerRad_Injected, (Quaternion * rotation, Vector3 * ret));
IL2CPP_REGISTER_METHOD(0x0296CFB0, void, Internal_ToAxisAngleRad_Injected, (Quaternion * q, Vector3 * axis, float * angle));
IL2CPP_REGISTER_METHOD(0x0296D020, void, AngleAxis_Injected, (float angle, Vector3 * axis, Quaternion * ret));
IL2CPP_REGISTER_METHOD(0x0296D090, void, LookRotation_Injected, (Vector3 * forward, Vector3 * upwards, Quaternion * ret));
}
