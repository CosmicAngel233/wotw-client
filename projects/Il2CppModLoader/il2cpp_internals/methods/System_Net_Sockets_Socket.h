using namespace app;

namespace app::methods::System::Net::Sockets::Socket {
IL2CPP_REGISTER_METHOD(0x01BE48E0, void, __ctor, (Socket * __this, AddressFamily__Enum addressFamily, SocketType__Enum socketType, ProtocolType__Enum protocolType));
IL2CPP_REGISTER_METHODINFO(0x0478A9D8, Socket__ctor__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE4E80, bool, get_SupportsIPv4, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01BE4F30, bool, get_OSSupportsIPv4, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01BE4FE0, bool, get_SupportsIPv6, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01BE5090, bool, get_OSSupportsIPv6, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01BE5140, void *, get_Handle, (Socket * __this));
IL2CPP_REGISTER_METHOD(0x00529FF0, AddressFamily__Enum, get_AddressFamily, (Socket * __this));
IL2CPP_REGISTER_METHOD(0x0052A010, SocketType__Enum, get_SocketType, (Socket * __this));
IL2CPP_REGISTER_METHOD(0x002FD1D0, ProtocolType__Enum, get_ProtocolType, (Socket * __this));
IL2CPP_REGISTER_METHOD(0x01BE5160, void, set_ExclusiveAddressUse, (Socket * __this, bool value));
IL2CPP_REGISTER_METHODINFO(0x0474C820, Socket_set_ExclusiveAddressUse__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE5250, void, set_DontFragment, (Socket * __this, bool value));
IL2CPP_REGISTER_METHODINFO(0x04735D58, Socket_set_DontFragment__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE5330, bool, get_DualMode, (Socket * __this));
IL2CPP_REGISTER_METHODINFO(0x047567D0, Socket_get_DualMode__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE5440, void, set_DualMode, (Socket * __this, bool value));
IL2CPP_REGISTER_METHODINFO(0x04717630, Socket_set_DualMode__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE5530, bool, get_IsDualMode, (Socket * __this));
IL2CPP_REGISTER_METHOD(0x01BE5650, int32_t, Send, (Socket * __this, IList_1_System_ArraySegment_1_ * buffers, SocketFlags__Enum socketFlags));
IL2CPP_REGISTER_METHODINFO(0x04787848, Socket_Send__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE5730, int32_t, Send, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags));
IL2CPP_REGISTER_METHODINFO(0x0478EE38, Socket_Send_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE5830, int32_t, Receive, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags));
IL2CPP_REGISTER_METHODINFO(0x04705B60, Socket_Receive__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE5930, int32_t, Receive, (Socket * __this, IList_1_System_ArraySegment_1_ * buffers, SocketFlags__Enum socketFlags));
IL2CPP_REGISTER_METHODINFO(0x0479A288, Socket_Receive_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE5A10, int32_t, IOControl, (Socket * __this, IOControlCode__Enum ioControlCode, Byte__Array * optionInValue, Byte__Array * optionOutValue));
IL2CPP_REGISTER_METHOD(0x01BE5BB0, void, SetIPProtectionLevel, (Socket * __this, IPProtectionLevel__Enum level));
IL2CPP_REGISTER_METHODINFO(0x04754CC8, Socket_SetIPProtectionLevel__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE5D00, IAsyncResult *, BeginSend, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, AsyncCallback * callback, Object * state));
IL2CPP_REGISTER_METHODINFO(0x0471D8C0, Socket_BeginSend__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE5E30, IAsyncResult *, BeginSend, (Socket * __this, IList_1_System_ArraySegment_1_ * buffers, SocketFlags__Enum socketFlags, AsyncCallback * callback, Object * state));
IL2CPP_REGISTER_METHODINFO(0x04757670, Socket_BeginSend_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE5F40, int32_t, EndSend, (Socket * __this, IAsyncResult * asyncResult));
IL2CPP_REGISTER_METHODINFO(0x0473FDE8, Socket_EndSend__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE60E0, IAsyncResult *, BeginReceive, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, AsyncCallback * callback, Object * state));
IL2CPP_REGISTER_METHODINFO(0x0474A6D8, Socket_BeginReceive__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE6210, int32_t, EndReceive, (Socket * __this, IAsyncResult * asyncResult));
IL2CPP_REGISTER_METHODINFO(0x04737948, Socket_EndReceive__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE63B0, Object *, get_InternalSyncObject, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01BE6590, bool, get_CleanedUp, (Socket * __this));
IL2CPP_REGISTER_METHOD(0x01BE65A0, void, InitializeSockets, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x01BE6880, void, Dispose, (Socket * __this));
IL2CPP_REGISTER_METHOD(0x01BE6930, void, Finalize, (Socket * __this));
IL2CPP_REGISTER_METHOD(0x01BE69B0, void, InternalShutdown, (Socket * __this, SocketShutdown__Enum how));
IL2CPP_REGISTER_METHOD(0x01BE6A80, IAsyncResult *, UnsafeBeginSend, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, AsyncCallback * callback, Object * state));
IL2CPP_REGISTER_METHOD(0x01BE6A90, IAsyncResult *, UnsafeBeginReceive, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, AsyncCallback * callback, Object * state));
IL2CPP_REGISTER_METHOD(0x01BE6AA0, IAsyncResult *, BeginMultipleSend, (Socket * __this, BufferOffsetSize_1__Array * buffers, SocketFlags__Enum socketFlags, AsyncCallback * callback, Object * state));
IL2CPP_REGISTER_METHOD(0x01BE6E60, int32_t, EndMultipleSend, (Socket * __this, IAsyncResult * asyncResult));
IL2CPP_REGISTER_METHOD(0x01BE6E70, void, MultipleSend, (Socket * __this, BufferOffsetSize_1__Array * buffers, SocketFlags__Enum socketFlags));
IL2CPP_REGISTER_METHOD(0x01BE7160, void, SetSocketOption, (Socket * __this, SocketOptionLevel__Enum optionLevel, SocketOptionName__Enum optionName, int32_t optionValue, bool silent));
IL2CPP_REGISTER_METHODINFO(0x04739970, Socket_SetSocketOption__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE7300, void, __ctor, (Socket * __this, AddressFamily__Enum family, SocketType__Enum type, ProtocolType__Enum proto, SafeSocketHandle * safe_handle));
IL2CPP_REGISTER_METHOD(0x01BE7590, void, SocketDefaults, (Socket * __this));
IL2CPP_REGISTER_METHOD(0x01BE7700, void *, Socket_internal, (Socket * __this, AddressFamily__Enum family, SocketType__Enum type, ProtocolType__Enum proto, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BE78A0, int32_t, get_Available, (Socket * __this));
IL2CPP_REGISTER_METHODINFO(0x0476D6D0, Socket_get_Available__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE7990, int32_t, Available_internal, (SafeSocketHandle * safeHandle, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BE7B60, int32_t, Available_internal, (void * socket, int32_t * error));
IL2CPP_REGISTER_METHOD(0x00614BA0, bool, get_IsBound, (Socket * __this));
IL2CPP_REGISTER_METHOD(0x01BE7C10, EndPoint *, get_LocalEndPoint, (Socket * __this));
IL2CPP_REGISTER_METHODINFO(0x0476D3B0, Socket_get_LocalEndPoint__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE7D50, SocketAddress *, LocalEndPoint_internal, (SafeSocketHandle * safeHandle, int32_t family, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BE7F50, SocketAddress *, LocalEndPoint_internal, (void * socket, int32_t family, int32_t * error));
IL2CPP_REGISTER_METHOD(0x003FCB00, bool, get_Blocking, (Socket * __this));
IL2CPP_REGISTER_METHOD(0x01BE8000, void, set_Blocking, (Socket * __this, bool value));
IL2CPP_REGISTER_METHODINFO(0x04710A90, Socket_set_Blocking__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE8100, void, Blocking_internal, (SafeSocketHandle * safeHandle, bool block, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BE82B0, void, Blocking_internal, (void * socket, bool block, int32_t * error));
IL2CPP_REGISTER_METHOD(0x00EEDBB0, bool, get_Connected, (Socket * __this));
IL2CPP_REGISTER_METHOD(0x01BE8340, void, set_NoDelay, (Socket * __this, bool value));
IL2CPP_REGISTER_METHOD(0x01BE8420, EndPoint *, get_RemoteEndPoint, (Socket * __this));
IL2CPP_REGISTER_METHODINFO(0x04748888, Socket_get_RemoteEndPoint__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE8560, SocketAddress *, RemoteEndPoint_internal, (SafeSocketHandle * safeHandle, int32_t family, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BE8760, SocketAddress *, RemoteEndPoint_internal, (void * socket, int32_t family, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BE8810, bool, Poll, (Socket * __this, int32_t microSeconds, SelectMode__Enum mode));
IL2CPP_REGISTER_METHODINFO(0x047236E8, Socket_Poll__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE89D0, bool, Poll_internal, (SafeSocketHandle * safeHandle, SelectMode__Enum mode, int32_t timeout, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BE8B70, bool, Poll_internal, (void * socket, SelectMode__Enum mode, int32_t timeout, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BE8B80, Socket *, Accept, (Socket * __this));
IL2CPP_REGISTER_METHODINFO(0x047917B0, Socket_Accept__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE8DB0, void, Accept, (Socket * __this, Socket * acceptSocket));
IL2CPP_REGISTER_METHODINFO(0x04725EA0, Socket_Accept_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE8F00, bool, AcceptAsync, (Socket * __this, SocketAsyncEventArgs * e));
IL2CPP_REGISTER_METHODINFO(0x04728050, Socket_AcceptAsync__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE9250, Socket *, EndAccept, (Socket * __this, IAsyncResult * asyncResult));
IL2CPP_REGISTER_METHOD(0x01BE9350, Socket *, EndAccept, (Socket * __this, Byte__Array * * buffer, int32_t * bytesTransferred, IAsyncResult * asyncResult));
IL2CPP_REGISTER_METHOD(0x01BE9480, SafeSocketHandle *, Accept_internal, (SafeSocketHandle * safeHandle, int32_t * error, bool blocking));
IL2CPP_REGISTER_METHOD(0x01BE97D0, void *, Accept_internal, (void * sock, int32_t * error, bool blocking));
IL2CPP_REGISTER_METHOD(0x01BE9910, void, Bind, (Socket * __this, EndPoint * localEP));
IL2CPP_REGISTER_METHODINFO(0x04733E68, Socket_Bind__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE9AD0, void, Bind_internal, (SafeSocketHandle * safeHandle, SocketAddress * sa, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BE9C40, void, Bind_internal, (void * sock, SocketAddress * sa, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BE9C50, void, Listen, (Socket * __this, int32_t backlog));
IL2CPP_REGISTER_METHODINFO(0x04713748, Socket_Listen__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BE9D90, void, Listen_internal, (SafeSocketHandle * safeHandle, int32_t backlog, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BE9F40, void, Listen_internal, (void * sock, int32_t backlog, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BE9FC0, void, Connect, (Socket * __this, IPAddress * address, int32_t port));
IL2CPP_REGISTER_METHOD(0x01BEA130, void, Connect, (Socket * __this, EndPoint * remoteEP));
IL2CPP_REGISTER_METHODINFO(0x04734098, Socket_Connect_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BEA540, IAsyncResult *, BeginConnect, (Socket * __this, String * host, int32_t port, AsyncCallback * requestCallback, Object * state));
IL2CPP_REGISTER_METHODINFO(0x04799E48, Socket_BeginConnect__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BEA720, IAsyncResult *, BeginConnect, (Socket * __this, IPAddress__Array * addresses, int32_t port, AsyncCallback * requestCallback, Object * state));
IL2CPP_REGISTER_METHODINFO(0x0471F968, Socket_BeginConnect_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BEAA10, void, BeginMConnect, (SocketAsyncResult * sockares));
IL2CPP_REGISTER_METHODINFO(0x0474CBB0, Socket_BeginMConnect__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BEAC50, void, BeginSConnect, (SocketAsyncResult * sockares));
IL2CPP_REGISTER_METHODINFO(0x04706C28, Socket_BeginSConnect__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BEB480, void, EndConnect, (Socket * __this, IAsyncResult * asyncResult));
IL2CPP_REGISTER_METHOD(0x01BEB580, void, Connect_internal, (SafeSocketHandle * safeHandle, SocketAddress * sa, int32_t * error, bool blocking));
IL2CPP_REGISTER_METHOD(0x01BEB6E0, void, Connect_internal, (void * sock, SocketAddress * sa, int32_t * error, bool blocking));
IL2CPP_REGISTER_METHOD(0x01BEB6F0, void, Disconnect, (Socket * __this, bool reuseSocket));
IL2CPP_REGISTER_METHODINFO(0x04751628, Socket_Disconnect__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BEB820, void, EndDisconnect, (Socket * __this, IAsyncResult * asyncResult));
IL2CPP_REGISTER_METHOD(0x01BEB920, void, Disconnect_internal, (SafeSocketHandle * safeHandle, bool reuse, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BEBAC0, void, Disconnect_internal, (void * sock, bool reuse, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BEBB40, int32_t, Receive, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, SocketError__Enum * errorCode));
IL2CPP_REGISTER_METHOD(0x01BEBCB0, int32_t, Receive, (Socket * __this, IList_1_System_ArraySegment_1_ * buffers, SocketFlags__Enum socketFlags, SocketError__Enum * errorCode));
IL2CPP_REGISTER_METHODINFO(0x0473FD28, Socket_Receive_3__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BEC190, IAsyncResult *, BeginReceive, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, SocketError__Enum * errorCode, AsyncCallback * callback, Object * state));
IL2CPP_REGISTER_METHOD(0x01BEC490, int32_t, EndReceive, (Socket * __this, IAsyncResult * asyncResult, SocketError__Enum * errorCode));
IL2CPP_REGISTER_METHOD(0x01BEC5C0, int32_t, Receive_internal, (SafeSocketHandle * safeHandle, Socket_WSABUF * bufarray, int32_t count, SocketFlags__Enum flags, int32_t * error, bool blocking));
IL2CPP_REGISTER_METHOD(0x01BEC7A0, int32_t, Receive_internal, (void * sock, Socket_WSABUF * bufarray, int32_t count, SocketFlags__Enum flags, int32_t * error, bool blocking));
IL2CPP_REGISTER_METHOD(0x01BEC860, int32_t, Receive_internal, (SafeSocketHandle * safeHandle, uint8_t * buffer, int32_t count, SocketFlags__Enum flags, int32_t * error, bool blocking));
IL2CPP_REGISTER_METHOD(0x01BECA80, int32_t, Receive_internal, (void * sock, uint8_t * buffer, int32_t count, SocketFlags__Enum flags, int32_t * error, bool blocking));
IL2CPP_REGISTER_METHOD(0x01BECB90, int32_t, ReceiveFrom, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, EndPoint * * remoteEP, SocketError__Enum * errorCode));
IL2CPP_REGISTER_METHOD(0x01BECD60, int32_t, EndReceiveFrom, (Socket * __this, IAsyncResult * asyncResult, EndPoint * * endPoint));
IL2CPP_REGISTER_METHODINFO(0x047203B0, Socket_EndReceiveFrom__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BECEB0, int32_t, ReceiveFrom_internal, (SafeSocketHandle * safeHandle, uint8_t * buffer, int32_t count, SocketFlags__Enum flags, SocketAddress * * sockaddr, int32_t * error, bool blocking));
IL2CPP_REGISTER_METHOD(0x01BED050, int32_t, ReceiveFrom_internal, (void * sock, uint8_t * buffer, int32_t count, SocketFlags__Enum flags, SocketAddress * * sockaddr, int32_t * error, bool blocking));
IL2CPP_REGISTER_METHOD(0x01BED060, int32_t, Send, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, SocketError__Enum * errorCode));
IL2CPP_REGISTER_METHOD(0x01BED200, int32_t, Send, (Socket * __this, IList_1_System_ArraySegment_1_ * buffers, SocketFlags__Enum socketFlags, SocketError__Enum * errorCode));
IL2CPP_REGISTER_METHODINFO(0x047869E8, Socket_Send_3__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BED710, IAsyncResult *, BeginSend, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, SocketError__Enum * errorCode, AsyncCallback * callback, Object * state));
IL2CPP_REGISTER_METHOD(0x01BEDB30, void, BeginSendCallback, (SocketAsyncResult * sockares, int32_t sent_so_far));
IL2CPP_REGISTER_METHOD(0x01BEDFC0, IAsyncResult *, BeginSend, (Socket * __this, IList_1_System_ArraySegment_1_ * buffers, SocketFlags__Enum socketFlags, SocketError__Enum * errorCode, AsyncCallback * callback, Object * state));
IL2CPP_REGISTER_METHODINFO(0x0478D500, Socket_BeginSend_3__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BEE2D0, int32_t, EndSend, (Socket * __this, IAsyncResult * asyncResult, SocketError__Enum * errorCode));
IL2CPP_REGISTER_METHOD(0x01BEE400, int32_t, Send_internal, (SafeSocketHandle * safeHandle, Socket_WSABUF * bufarray, int32_t count, SocketFlags__Enum flags, int32_t * error, bool blocking));
IL2CPP_REGISTER_METHOD(0x01BEE5E0, int32_t, Send_internal, (void * sock, Socket_WSABUF * bufarray, int32_t count, SocketFlags__Enum flags, int32_t * error, bool blocking));
IL2CPP_REGISTER_METHOD(0x01BEE6A0, int32_t, Send_internal, (SafeSocketHandle * safeHandle, uint8_t * buffer, int32_t count, SocketFlags__Enum flags, int32_t * error, bool blocking));
IL2CPP_REGISTER_METHOD(0x01BEE870, int32_t, Send_internal, (void * sock, uint8_t * buffer, int32_t count, SocketFlags__Enum flags, int32_t * error, bool blocking));
IL2CPP_REGISTER_METHOD(0x01BEE930, int32_t, EndSendTo, (Socket * __this, IAsyncResult * asyncResult));
IL2CPP_REGISTER_METHOD(0x01BEEA30, Object *, GetSocketOption, (Socket * __this, SocketOptionLevel__Enum optionLevel, SocketOptionName__Enum optionName));
IL2CPP_REGISTER_METHODINFO(0x0471A8F0, Socket_GetSocketOption__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BEEBE0, void, GetSocketOption_obj_internal, (SafeSocketHandle * safeHandle, SocketOptionLevel__Enum level, SocketOptionName__Enum name, Object * * obj_val, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BEED70, void, GetSocketOption_obj_internal, (void * socket, SocketOptionLevel__Enum level, SocketOptionName__Enum name, Object * * obj_val, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BEED80, void, SetSocketOption, (Socket * __this, SocketOptionLevel__Enum optionLevel, SocketOptionName__Enum optionName, int32_t optionValue));
IL2CPP_REGISTER_METHODINFO(0x047468E0, Socket_SetSocketOption_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BEEEE0, void, SetSocketOption_internal, (SafeSocketHandle * safeHandle, SocketOptionLevel__Enum level, SocketOptionName__Enum name, Object * obj_val, Byte__Array * byte_val, int32_t int_val, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BEF090, void, SetSocketOption_internal, (void * socket, SocketOptionLevel__Enum level, SocketOptionName__Enum name, Object * obj_val, Byte__Array * byte_val, int32_t int_val, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BEF0A0, int32_t, IOControl, (Socket * __this, int32_t ioControlCode, Byte__Array * optionInValue, Byte__Array * optionOutValue));
IL2CPP_REGISTER_METHODINFO(0x04710B30, Socket_IOControl_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BEF240, int32_t, IOControl_internal, (SafeSocketHandle * safeHandle, int32_t ioctl_code, Byte__Array * input, Byte__Array * output, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BEF490, int32_t, IOControl_internal, (void * sock, int32_t ioctl_code, Byte__Array * input, Byte__Array * output, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BEF5C0, void, Close, (Socket * __this));
IL2CPP_REGISTER_METHOD(0x01BEF5D0, void, Close, (Socket * __this, int32_t timeout));
IL2CPP_REGISTER_METHOD(0x01BEF5E0, void, Close_internal, (void * socket, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BEF6A0, void, Shutdown, (Socket * __this, SocketShutdown__Enum how));
IL2CPP_REGISTER_METHODINFO(0x0471D5D0, Socket_Shutdown__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BEF7D0, void, Shutdown_internal, (SafeSocketHandle * safeHandle, SocketShutdown__Enum how, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BEF980, void, Shutdown_internal, (void * socket, SocketShutdown__Enum how, int32_t * error));
IL2CPP_REGISTER_METHOD(0x01BEFA00, void, Dispose, (Socket * __this, bool disposing));
IL2CPP_REGISTER_METHOD(0x01BEFA70, void, Linger, (Socket * __this, void * handle));
IL2CPP_REGISTER_METHOD(0x01BEFDB0, void, ThrowIfDisposedAndClosed, (Socket * __this));
IL2CPP_REGISTER_METHODINFO(0x04775138, Socket_ThrowIfDisposedAndClosed__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BEFE90, void, ThrowIfBufferNull, (Socket * __this, Byte__Array * buffer));
IL2CPP_REGISTER_METHODINFO(0x04783FC0, Socket_ThrowIfBufferNull__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BEFF40, void, ThrowIfBufferOutOfRange, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size));
IL2CPP_REGISTER_METHODINFO(0x04710918, Socket_ThrowIfBufferOutOfRange__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BF00E0, void, ThrowIfUdp, (Socket * __this));
IL2CPP_REGISTER_METHODINFO(0x04736C18, Socket_ThrowIfUdp__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BF0190, SocketAsyncResult *, ValidateEndIAsyncResult, (Socket * __this, IAsyncResult * ares, String * methodName, String * argName));
IL2CPP_REGISTER_METHODINFO(0x04755DA0, Socket_ValidateEndIAsyncResult__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BF02F0, void, QueueIOSelectorJob, (Socket * __this, SemaphoreSlim * sem, void * handle, IOSelectorJob * job));
IL2CPP_REGISTER_METHOD(0x01BF05D0, void, InitSocketAsyncEventArgs, (Socket * __this, SocketAsyncEventArgs * e, AsyncCallback * callback, Object * state, SocketOperation__Enum operation));
IL2CPP_REGISTER_METHOD(0x01BF08D0, SocketAsyncOperation__Enum, SocketOperationToSocketAsyncOperation, (Socket * __this, SocketOperation__Enum op));
IL2CPP_REGISTER_METHODINFO(0x04785800, Socket_SocketOperationToSocketAsyncOperation__MethodInfo);
IL2CPP_REGISTER_METHOD(0x01BF0A60, IPEndPoint *, RemapIPEndPoint, (Socket * __this, IPEndPoint * input));
IL2CPP_REGISTER_METHOD(0x01BF0D10, void, cancel_blocking_socket_operation, (Thread * thread));
IL2CPP_REGISTER_METHOD(0x01BF0D30, int32_t, get_FamilyHint, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x003FFDF0, bool, IsProtocolSupported_internal, (NetworkInterfaceComponent__Enum networkInterface));
IL2CPP_REGISTER_METHOD(0x01BF0E10, bool, IsProtocolSupported, (NetworkInterfaceComponent__Enum networkInterface));
IL2CPP_REGISTER_METHOD(0x01BF0EA0, void, __cctor, (MethodInfo * method));
}
