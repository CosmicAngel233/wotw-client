using namespace app;

namespace app::methods::Mono::Security::X509::PKCS12 {
IL2CPP_REGISTER_METHOD(0x025DAA00, void, __ctor, (PKCS12 * __this));
IL2CPP_REGISTER_METHOD(0x025DADB0, void, __ctor, (PKCS12 * __this, Byte__Array * data));
IL2CPP_REGISTER_METHOD(0x025DAE70, void, __ctor, (PKCS12 * __this, Byte__Array * data, String * password));
IL2CPP_REGISTER_METHOD(0x025DAEC0, void, Decode, (PKCS12 * __this, Byte__Array * data));
IL2CPP_REGISTER_METHODINFO(0x04782770, PKCS12_Decode__MethodInfo);
IL2CPP_REGISTER_METHOD(0x025DBC40, void, Finalize, (PKCS12 * __this));
IL2CPP_REGISTER_METHOD(0x025DBCE0, void, set_Password, (PKCS12 * __this, String * value));
IL2CPP_REGISTER_METHOD(0x00998570, int32_t, get_IterationCount, (PKCS12 * __this));
IL2CPP_REGISTER_METHOD(0x00E06D70, void, set_IterationCount, (PKCS12 * __this, int32_t value));
IL2CPP_REGISTER_METHOD(0x025DBE80, ArrayList *, get_Keys, (PKCS12 * __this));
IL2CPP_REGISTER_METHOD(0x025DC770, X509CertificateCollection *, get_Certificates, (PKCS12 * __this));
IL2CPP_REGISTER_METHOD(0x025DCCB0, RandomNumberGenerator *, get_RNG, (PKCS12 * __this));
IL2CPP_REGISTER_METHOD(0x025DCCE0, bool, Compare, (PKCS12 * __this, Byte__Array * expected, Byte__Array * actual));
IL2CPP_REGISTER_METHOD(0x025DCD70, SymmetricAlgorithm *, GetSymmetricAlgorithm, (PKCS12 * __this, String * algorithmOid, Byte__Array * salt, int32_t iterationCount));
IL2CPP_REGISTER_METHODINFO(0x04741AC0, PKCS12_GetSymmetricAlgorithm__MethodInfo);
IL2CPP_REGISTER_METHOD(0x025DD700, Byte__Array *, Decrypt, (PKCS12 * __this, String * algorithmOid, Byte__Array * salt, int32_t iterationCount, Byte__Array * encryptedData));
IL2CPP_REGISTER_METHOD(0x025DD8A0, Byte__Array *, Decrypt, (PKCS12 * __this, PKCS7_EncryptedData * ed));
IL2CPP_REGISTER_METHOD(0x025DDAC0, Byte__Array *, Encrypt, (PKCS12 * __this, String * algorithmOid, Byte__Array * salt, int32_t iterationCount, Byte__Array * data));
IL2CPP_REGISTER_METHOD(0x025DDC60, DSAParameters, GetExistingParameters, (PKCS12 * __this, bool * found));
IL2CPP_REGISTER_METHOD(0x025DDEF0, void, AddPrivateKey, (PKCS12 * __this, PKCS8_PrivateKeyInfo * pki));
IL2CPP_REGISTER_METHODINFO(0x04788508, PKCS12_AddPrivateKey__MethodInfo);
IL2CPP_REGISTER_METHOD(0x025DE0D0, void, ReadSafeBag, (PKCS12 * __this, ASN1 * safeBag));
IL2CPP_REGISTER_METHODINFO(0x0476F4B8, PKCS12_ReadSafeBag__MethodInfo);
IL2CPP_REGISTER_METHOD(0x025DED50, ASN1 *, CertificateSafeBag, (PKCS12 * __this, X509Certificate * x509, IDictionary * attributes));
IL2CPP_REGISTER_METHOD(0x025DFC80, Byte__Array *, MAC, (PKCS12 * __this, Byte__Array * password, Byte__Array * salt, int32_t iterations, Byte__Array * data));
IL2CPP_REGISTER_METHOD(0x025DFF50, Byte__Array *, GetBytes, (PKCS12 * __this));
IL2CPP_REGISTER_METHOD(0x025E2A30, PKCS7_ContentInfo *, EncryptedContentInfo, (PKCS12 * __this, ASN1 * safeBags, String * algorithmOid));
IL2CPP_REGISTER_METHOD(0x025E3320, void, AddCertificate, (PKCS12 * __this, X509Certificate * cert));
IL2CPP_REGISTER_METHOD(0x025E3330, void, AddCertificate, (PKCS12 * __this, X509Certificate * cert, IDictionary * attributes));
IL2CPP_REGISTER_METHOD(0x025E38A0, void, RemoveCertificate, (PKCS12 * __this, X509Certificate * cert));
IL2CPP_REGISTER_METHOD(0x025E38B0, void, RemoveCertificate, (PKCS12 * __this, X509Certificate * cert, IDictionary * attrs));
IL2CPP_REGISTER_METHOD(0x025E3F40, Object *, Clone, (PKCS12 * __this));
IL2CPP_REGISTER_METHOD(0x025E41E0, int32_t, get_MaximumPasswordLength, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x025E4280, void, __cctor, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02923130, void, __ctor, (PKCS12_1 * __this));
IL2CPP_REGISTER_METHOD(0x029234E0, void, __ctor, (PKCS12_1 * __this, Byte__Array * data));
IL2CPP_REGISTER_METHOD(0x029235A0, void, __ctor, (PKCS12_1 * __this, Byte__Array * data, String * password));
IL2CPP_REGISTER_METHOD(0x029235F0, void, __ctor, (PKCS12_1 * __this, Byte__Array * data, Byte__Array * password));
IL2CPP_REGISTER_METHOD(0x02923630, void, Decode, (PKCS12_1 * __this, Byte__Array * data));
IL2CPP_REGISTER_METHODINFO(0x04709550, PKCS12_1_Decode__MethodInfo);
IL2CPP_REGISTER_METHOD(0x029243B0, void, Finalize, (PKCS12_1 * __this));
IL2CPP_REGISTER_METHOD(0x02924450, void, set_Password, (PKCS12_1 * __this, String * value));
IL2CPP_REGISTER_METHOD(0x00998570, int32_t, get_IterationCount, (PKCS12_1 * __this));
IL2CPP_REGISTER_METHOD(0x00E06D70, void, set_IterationCount, (PKCS12_1 * __this, int32_t value));
IL2CPP_REGISTER_METHOD(0x029245F0, ArrayList *, get_Keys, (PKCS12_1 * __this));
IL2CPP_REGISTER_METHOD(0x02924EF0, ArrayList *, get_Secrets, (PKCS12_1 * __this));
IL2CPP_REGISTER_METHOD(0x02925220, X509CertificateCollection_2 *, get_Certificates, (PKCS12_1 * __this));
IL2CPP_REGISTER_METHOD(0x025DCCB0, RandomNumberGenerator *, get_RNG, (PKCS12_1 * __this));
IL2CPP_REGISTER_METHOD(0x025DCCE0, bool, Compare, (PKCS12_1 * __this, Byte__Array * expected, Byte__Array * actual));
IL2CPP_REGISTER_METHOD(0x02925760, SymmetricAlgorithm *, GetSymmetricAlgorithm, (PKCS12_1 * __this, String * algorithmOid, Byte__Array * salt, int32_t iterationCount));
IL2CPP_REGISTER_METHODINFO(0x0472AFF8, PKCS12_1_GetSymmetricAlgorithm__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02926020, Byte__Array *, Decrypt, (PKCS12_1 * __this, String * algorithmOid, Byte__Array * salt, int32_t iterationCount, Byte__Array * encryptedData));
IL2CPP_REGISTER_METHOD(0x029261C0, Byte__Array *, Decrypt, (PKCS12_1 * __this, PKCS7_EncryptedData_1 * ed));
IL2CPP_REGISTER_METHOD(0x029263E0, Byte__Array *, Encrypt, (PKCS12_1 * __this, String * algorithmOid, Byte__Array * salt, int32_t iterationCount, Byte__Array * data));
IL2CPP_REGISTER_METHOD(0x02926580, DSAParameters, GetExistingParameters, (PKCS12_1 * __this, bool * found));
IL2CPP_REGISTER_METHOD(0x02926810, void, AddPrivateKey, (PKCS12_1 * __this, PKCS8_PrivateKeyInfo_1 * pki));
IL2CPP_REGISTER_METHODINFO(0x04701468, PKCS12_1_AddPrivateKey__MethodInfo);
IL2CPP_REGISTER_METHOD(0x029269F0, void, ReadSafeBag, (PKCS12_1 * __this, ASN1_1 * safeBag));
IL2CPP_REGISTER_METHODINFO(0x04742E18, PKCS12_1_ReadSafeBag__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02927680, ASN1_1 *, Pkcs8ShroudedKeyBagSafeBag, (PKCS12_1 * __this, AsymmetricAlgorithm * aa, IDictionary * attributes));
IL2CPP_REGISTER_METHODINFO(0x047601C0, PKCS12_1_Pkcs8ShroudedKeyBagSafeBag__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02928990, ASN1_1 *, KeyBagSafeBag, (PKCS12_1 * __this, AsymmetricAlgorithm * aa, IDictionary * attributes));
IL2CPP_REGISTER_METHODINFO(0x0478FF20, PKCS12_1_KeyBagSafeBag__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02929A00, ASN1_1 *, SecretBagSafeBag, (PKCS12_1 * __this, Byte__Array * secret, IDictionary * attributes));
IL2CPP_REGISTER_METHOD(0x0292A720, ASN1_1 *, CertificateSafeBag, (PKCS12_1 * __this, X509Certificate_2 * x509, IDictionary * attributes));
IL2CPP_REGISTER_METHOD(0x0292B650, Byte__Array *, MAC, (PKCS12_1 * __this, Byte__Array * password, Byte__Array * salt, int32_t iterations, Byte__Array * data));
IL2CPP_REGISTER_METHOD(0x0292B920, Byte__Array *, GetBytes, (PKCS12_1 * __this));
IL2CPP_REGISTER_METHOD(0x0292E400, PKCS7_ContentInfo_1 *, EncryptedContentInfo, (PKCS12_1 * __this, ASN1_1 * safeBags, String * algorithmOid));
IL2CPP_REGISTER_METHOD(0x0292ECF0, void, AddCertificate, (PKCS12_1 * __this, X509Certificate_2 * cert));
IL2CPP_REGISTER_METHOD(0x0292ED00, void, AddCertificate, (PKCS12_1 * __this, X509Certificate_2 * cert, IDictionary * attributes));
IL2CPP_REGISTER_METHOD(0x0292F270, void, RemoveCertificate, (PKCS12_1 * __this, X509Certificate_2 * cert));
IL2CPP_REGISTER_METHOD(0x0292F280, void, RemoveCertificate, (PKCS12_1 * __this, X509Certificate_2 * cert, IDictionary * attrs));
IL2CPP_REGISTER_METHOD(0x0292F910, bool, CompareAsymmetricAlgorithm, (PKCS12_1 * __this, AsymmetricAlgorithm * a1, AsymmetricAlgorithm * a2));
IL2CPP_REGISTER_METHOD(0x0292FA00, void, AddPkcs8ShroudedKeyBag, (PKCS12_1 * __this, AsymmetricAlgorithm * aa));
IL2CPP_REGISTER_METHOD(0x0292FA10, void, AddPkcs8ShroudedKeyBag, (PKCS12_1 * __this, AsymmetricAlgorithm * aa, IDictionary * attributes));
IL2CPP_REGISTER_METHODINFO(0x0473C720, PKCS12_1_AddPkcs8ShroudedKeyBag_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02930040, void, RemovePkcs8ShroudedKeyBag, (PKCS12_1 * __this, AsymmetricAlgorithm * aa));
IL2CPP_REGISTER_METHODINFO(0x047448F8, PKCS12_1_RemovePkcs8ShroudedKeyBag__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02930570, void, AddKeyBag, (PKCS12_1 * __this, AsymmetricAlgorithm * aa));
IL2CPP_REGISTER_METHOD(0x02930580, void, AddKeyBag, (PKCS12_1 * __this, AsymmetricAlgorithm * aa, IDictionary * attributes));
IL2CPP_REGISTER_METHODINFO(0x0476DB68, PKCS12_1_AddKeyBag_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02930A40, void, RemoveKeyBag, (PKCS12_1 * __this, AsymmetricAlgorithm * aa));
IL2CPP_REGISTER_METHODINFO(0x047080E8, PKCS12_1_RemoveKeyBag__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02930E10, void, AddSecretBag, (PKCS12_1 * __this, Byte__Array * secret));
IL2CPP_REGISTER_METHOD(0x02930E20, void, AddSecretBag, (PKCS12_1 * __this, Byte__Array * secret, IDictionary * attributes));
IL2CPP_REGISTER_METHOD(0x02931160, void, RemoveSecretBag, (PKCS12_1 * __this, Byte__Array * secret));
IL2CPP_REGISTER_METHOD(0x02931360, AsymmetricAlgorithm *, GetAsymmetricAlgorithm, (PKCS12_1 * __this, IDictionary * attrs));
IL2CPP_REGISTER_METHOD(0x02931DF0, Byte__Array *, GetSecret, (PKCS12_1 * __this, IDictionary * attrs));
IL2CPP_REGISTER_METHOD(0x02932320, X509Certificate_2 *, GetCertificate, (PKCS12_1 * __this, IDictionary * attrs));
IL2CPP_REGISTER_METHOD(0x02932A30, IDictionary *, GetAttributes, (PKCS12_1 * __this, AsymmetricAlgorithm * aa));
IL2CPP_REGISTER_METHOD(0x029335B0, IDictionary *, GetAttributes, (PKCS12_1 * __this, X509Certificate_2 * cert));
IL2CPP_REGISTER_METHOD(0x02933D90, void, SaveToFile, (PKCS12_1 * __this, String * filename));
IL2CPP_REGISTER_METHODINFO(0x04717F70, PKCS12_1_SaveToFile__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02933F20, Object *, Clone, (PKCS12_1 * __this));
IL2CPP_REGISTER_METHOD(0x029341C0, int32_t, get_MaximumPasswordLength, (MethodInfo * method));
IL2CPP_REGISTER_METHOD(0x02934260, void, set_MaximumPasswordLength, (int32_t value));
IL2CPP_REGISTER_METHODINFO(0x0478E320, PKCS12_1_set_MaximumPasswordLength__MethodInfo);
IL2CPP_REGISTER_METHOD(0x029343B0, Byte__Array *, LoadFile, (String * filename));
IL2CPP_REGISTER_METHODINFO(0x04742AF0, PKCS12_1_LoadFile__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02934550, PKCS12_1 *, LoadFromFile, (String * filename));
IL2CPP_REGISTER_METHODINFO(0x0478D068, PKCS12_1_LoadFromFile__MethodInfo);
IL2CPP_REGISTER_METHOD(0x02934700, PKCS12_1 *, LoadFromFile, (String * filename, String * password));
IL2CPP_REGISTER_METHODINFO(0x0476CD70, PKCS12_1_LoadFromFile_1__MethodInfo);
IL2CPP_REGISTER_METHOD(0x029348D0, void, __cctor, (MethodInfo * method));
}
